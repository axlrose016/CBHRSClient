{"version":3,"sources":["webpack:///src/app/pages/setting/libraries/competency-categories/competency-categories-routing.module.ts","webpack:///src/app/pages/setting/libraries/competency-categories/competency-categories.module.ts","webpack:///src/app/pages/setting/libraries/competency-categories/competency-category-entry/competency-category-entry.component.ts","webpack:///src/app/pages/setting/libraries/competency-categories/competency-category-entry/competency-category-entry.component.html","webpack:///src/app/pages/setting/libraries/competency-categories/competency-category-list/competency-category-list.component.ts","webpack:///src/app/pages/setting/libraries/competency-categories/competency-category-list/competency-category-list.component.html"],"names":["routes","path","component","pathMatch","CompetencyCategoriesRoutingModule","forChild","imports","exports","CompetencyCategoriesModule","declarations","CompetencyCategoryEntryComponent","fb","frmglobaldataserve","dialogserve","route","router","baseUrl","apiUrl","curRecordId","showLoadingProgressBar$","getShowLoadingSpinner","setLoadingProgressBar","initData","snapshot","params","competencyCategory","buildCompetencyCategoryDetail","getRecord","subscribe","data","competencyCategoryDetail","CompetencyCategoryForm","group","competencyId","description","is_active","btnclick","valid","saveRecord","openConfirmation","afterClosed","result","patchValue","formatDate","Date","deleteRecord","updateRecord","value","response","console","log","navigateByUrl","error","JSON","stringify","then","x","openSnackBar","date","d","month","getMonth","day","getDate","year","getFullYear","length","join","eventHandler","selector","templateUrl","styleUrls","CompetencyCategoryListComponent","dialog","displayedColumns","gridDataSource","competencyCategoryList","refreshTheList","urlstr","loadList","res","btnevent","id","mp","paginator","matPaginator"],"mappings":"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","file":"competency-categories-competency-categories-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CompetencyCategoryEntryComponent } from './competency-category-entry/competency-category-entry.component';\nimport { CompetencyCategoryListComponent } from './competency-category-list/competency-category-list.component';\n\nconst routes: Routes = [\n  {\n    path:'list',\n    component:CompetencyCategoryListComponent,\n  },\n  {\n    path:':id',\n    component:CompetencyCategoryEntryComponent,\n    pathMatch:'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompetencyCategoriesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CompetencyCategoriesRoutingModule } from './competency-categories-routing.module';\nimport { CompetencyCategoryListComponent } from './competency-category-list/competency-category-list.component';\nimport { CompetencyCategoryEntryComponent } from './competency-category-entry/competency-category-entry.component';\nimport { SharedComponentModule } from 'app/shared/component/shared-component.module';\nimport { SharedMaterialModule } from 'app/shared/shared-material/shared-material.module';\n\n\n@NgModule({\n  declarations: [CompetencyCategoryListComponent, CompetencyCategoryEntryComponent],\n  imports: [\n    CommonModule,\n    CompetencyCategoriesRoutingModule,\n    SharedComponentModule,\n    SharedMaterialModule\n  ]\n})\nexport class CompetencyCategoriesModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { lib_competency_category } from 'app/shared/model/library.model';\nimport { DialogService } from 'app/shared/service/dialog.service';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { environment } from 'environments/environment';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-competency-category-entry',\n  templateUrl: './competency-category-entry.component.html',\n  styleUrls: ['./competency-category-entry.component.scss']\n})\nexport class CompetencyCategoryEntryComponent implements OnInit {\n  public CompetencyCategoryForm: FormGroup;\n  public lib_competency_categories: lib_competency_category[];\n  public showLoadingProgressBar$: Observable<boolean>;\n  public baseUrl = environment.apiUrl+\"Library/\";\n  public curRecordId: number = 0;\n  competencyCategoryDetail: lib_competency_category;\n  constructor(\n    private fb: FormBuilder,\n    private frmglobaldataserve:FormGlobalDataService,\n    private dialogserve:DialogService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.initData();\n    this.frmglobaldataserve.setLoadingProgressBar(false);\n  }\n\n  initData(){\n    this.curRecordId = +this.route.snapshot.params['id'];\n    if(this.curRecordId != 0){\n      this.competencyCategory();\n    }else{\n      this.buildCompetencyCategoryDetail();\n    }\n  }\n\n  competencyCategory(){\n    this.frmglobaldataserve.getRecord(\"Library/GetCompetencyCategory?id=\"+this.curRecordId)\n      .subscribe((data:lib_competency_category) => {\n        this.competencyCategoryDetail = data;\n        ;\n        this.buildCompetencyCategoryDetail(this.competencyCategoryDetail);\n      })\n  }\n\n  buildCompetencyCategoryDetail(competencyCategoryDetail?: lib_competency_category){\n    this.CompetencyCategoryForm = this.fb.group({\n      competencyId:[competencyCategoryDetail?competencyCategoryDetail.competencyId:0],\n      description:[competencyCategoryDetail?competencyCategoryDetail.description:''],\n      is_active:[competencyCategoryDetail?competencyCategoryDetail.is_active:true],\n\n    });\n  }\n\n  eventHandler(btnclick:string){\n    if(btnclick == \"Save\"){\n      if(this.CompetencyCategoryForm.valid)\n        this.saveRecord();\n    }else if(btnclick == \"Delete\"){\n      this.dialogserve.openConfirmation(\"Are you sure you want to delete this record?\")\n        .afterClosed().subscribe(result => {\n          if(result == true){\n            this.CompetencyCategoryForm.patchValue({'is_deleted':true,'deleted_by':'Axl','deleted_date':this.formatDate(new Date())});\n            this.deleteRecord();\n          }\n        });\n    }\n  }\n\n  deleteRecord(){\n    this.frmglobaldataserve.updateRecord(this.CompetencyCategoryForm.value,\"Library/PostCompetencyCategory\")\n      .subscribe(\n          (response) => {\n            console.log(\"Record Deleted Successfully: \"+ response);\n            this.router.navigateByUrl(\"pages/settings/libraries/competency-categories/list\");\n          },(error) => {\n            console.log(\"Error Deleting the Record: \"+JSON.stringify(this.CompetencyCategoryForm.value));\n          }\n      )\n  }\n\n  saveRecord(){\n    this.frmglobaldataserve.updateRecord(this.CompetencyCategoryForm.value,\"Library/PostCompetencyCategory\")\n      .subscribe(\n          (response) => {\n            this.router.navigateByUrl(\"pages/settings/libraries/competency-categories/\"+response).then(x => {\n              this.initData(),\n              this.frmglobaldataserve.openSnackBar();\n            },(error) =>{\n              console.log(\"Error saving the Record: \"+ JSON.stringify(this.CompetencyCategoryForm.value));\n            })\n          }\n      );\n  }\n\n  private formatDate(date) {\n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  }\n}\n","<axl-app-crud (appcrudbtnclick)=\"eventHandler($event)\"></axl-app-crud>\n<div class=\"container\">\n    <form [formGroup]=\"CompetencyCategoryForm\" *ngIf=\"this.CompetencyCategoryForm\">\n        <nb-card>\n            <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n            <nb-card-header>\n              Core Competency Form\n            </nb-card-header>\n        </nb-card>\n        <nb-card>\n            <nb-card-body>\n                <div class=\"row\">\n                    <div class=\"col-sm-10\">\n                        <div class=\"form-group\">\n                            <input formControlName=\"description\" type=\"text\" nbInput fullWidth placeholder=\"Description\">\n                        </div>\n                    </div>\n                    <div class=\"col-sm-2\">\n                        <div class=\"form-group\">\n                            <nb-checkbox style=\"float: right;\" status=\"basic\" formControlName=\"is_active\">Active</nb-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n        </nb-card>\n    </form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { lib_competency_category, lib_request_type } from 'app/shared/model/library.model';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { environment } from 'environments/environment';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-competency-category-list',\n  templateUrl: './competency-category-list.component.html',\n  styleUrls: ['./competency-category-list.component.scss']\n})\nexport class CompetencyCategoryListComponent implements OnInit {\n  public baseUrl = environment.apiUrl+\"Library/\";\n  public showLoadingProgressBar$: Observable<boolean>\n  private paginator: MatPaginator;\n  displayedColumns: string[] = ['competencyId','description','is_active'];\n  @ViewChild(MatPaginator, {static:true}) set matPaginator(mp:MatPaginator)\n  {\n    this.paginator = mp;\n    this.gridDataSource.paginator = this.paginator;\n  }\n  gridDataSource = new MatTableDataSource();\n  competencyCategoryList: lib_competency_category[] = [];\n  constructor(\n    private router:Router,\n    private frmglobaldataserve: FormGlobalDataService,\n    private dialog:MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.refreshTheList();\n  }\n\n  refreshTheList(){\n    var urlstr = this.baseUrl+'GetAllCompetencyCategory/';\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.frmglobaldataserve.loadList(urlstr)\n      .subscribe((res: lib_competency_category[]) => {\n        this.competencyCategoryList = res;\n        this.gridDataSource.data = res;\n        this.frmglobaldataserve.setLoadingProgressBar(false);\n      },\n      () => {})\n  }\n\n  eventHandler(btnevent:string){\n    if(btnevent == \"Refresh\")\n    {\n      console.log(\"Refresh\");\n      this.refreshTheList();\n    }\n    else if(btnevent == \"Add\"){\n      console.log(\"Add\");\n      this.router.navigateByUrl(\"pages/settings/libraries/competency-categories/\"+0);\n    }\n  }\n\n  onUserRowSelect(id :number):void{\n    this.router.navigateByUrl(\"pages/settings/libraries/competency-categories/\"+id);\n  }\n}\n","<axl-app-list  (applistbtnclick)='eventHandler($event)'></axl-app-list>\n<div class=\"container\">\n    <nb-card>\n        <nb-card-header>\n            Competency Categories\n        </nb-card-header>\n        <nb-card>\n            <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n        </nb-card>\n        <nb-card-body>\n            <table mat-table #table class=\"mat-elevation-z8\" [dataSource]=\"gridDataSource\" matSort>\n                <!-- Leave ID Column -->\n                <ng-container matColumnDef=\"competencyId\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Competency Category ID </th>\n                <td mat-cell *matCellDef=\"let erow\" > {{erow.competencyId}} </td>\n                </ng-container>  \n                <!-- Employee Code Column -->\n                <ng-container matColumnDef=\"description\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Description </th>\n                <td mat-cell *matCellDef=\"let erow\" > {{erow.description}} </td>\n                </ng-container>\n                <!-- Leave Type Column -->\n                <ng-container matColumnDef=\"is_active\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Active </th>\n                <td mat-cell *matCellDef=\"let erow\">{{erow.is_active}}</td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onUserRowSelect(row.competencyId)\"></tr>\n            </table>  \n            <mat-paginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n        </nb-card-body>\n    </nb-card>\n</div>"]}