{"version":3,"sources":["webpack:///src/app/pages/setting/libraries/departments/department-entry/department-entry.component.ts","webpack:///src/app/pages/setting/libraries/departments/department-entry/department-entry.component.html","webpack:///src/app/pages/setting/libraries/departments/department-list/department-list.component.ts","webpack:///src/app/pages/setting/libraries/departments/department-list/department-list.component.html","webpack:///src/app/pages/setting/libraries/departments/departments-routing.module.ts","webpack:///src/app/pages/setting/libraries/departments/departments.module.ts"],"names":["DepartmentEntryComponent","fb","frmglobaldataserve","dialogserve","route","router","baseUrl","apiUrl","curRecordId","showLoadingProgressBar$","getShowLoadingSpinner","setLoadingProgressBar","initData","snapshot","params","department","buildRequestTypeDetail","getRecord","subscribe","data","departmentDetail","requestTypeDetail","DepartmentForm","group","departmentId","description","is_active","btnclick","valid","saveRecord","openConfirmation","afterClosed","result","patchValue","formatDate","Date","deleteRecord","updateRecord","value","response","console","log","navigateByUrl","error","JSON","stringify","then","x","openSnackBar","date","d","month","getMonth","day","getDate","year","getFullYear","length","join","eventHandler","selector","templateUrl","styleUrls","DepartmentListComponent","dialog","displayedColumns","gridDataSource","requestTypeList","refreshTheList","urlstr","loadList","res","btnevent","id","mp","paginator","matPaginator","routes","path","component","pathMatch","DepartmentsRoutingModule","forChild","imports","exports","DepartmentsModule","declarations"],"mappings":"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","file":"departments-departments-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { lib_department } from 'app/shared/model/library.model';\nimport { DialogService } from 'app/shared/service/dialog.service';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { environment } from 'environments/environment';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-department-entry',\n  templateUrl: './department-entry.component.html',\n  styleUrls: ['./department-entry.component.scss']\n})\nexport class DepartmentEntryComponent implements OnInit {\n  public DepartmentForm: FormGroup;\n  public lib_departments: lib_department[];\n  public showLoadingProgressBar$: Observable<boolean>;\n  public baseUrl = environment.apiUrl+\"Library/\";\n  public curRecordId: number = 0;\n  departmentDetail: lib_department;\n  constructor(\n    private fb: FormBuilder,\n    private frmglobaldataserve:FormGlobalDataService,\n    private dialogserve:DialogService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.initData();\n    this.frmglobaldataserve.setLoadingProgressBar(false);\n  }\n\n  initData(){\n    this.curRecordId = +this.route.snapshot.params['id'];\n    if(this.curRecordId != 0){\n      this.department();\n    }else{\n      this.buildRequestTypeDetail();\n    }\n  }\n\n  department(){\n    this.frmglobaldataserve.getRecord(\"Library/GetDepartment?id=\"+this.curRecordId)\n      .subscribe((data:lib_department) => {\n        this.departmentDetail = data;\n        ;\n        this.buildRequestTypeDetail(this.departmentDetail);\n      })\n  }\n\n  buildRequestTypeDetail(requestTypeDetail?: lib_department){\n    this.DepartmentForm = this.fb.group({\n      departmentId:[requestTypeDetail?requestTypeDetail.departmentId:0],\n      description:[requestTypeDetail?requestTypeDetail.description:''],\n      is_active:[requestTypeDetail?requestTypeDetail.is_active:true]\n    });\n  }\n\n  eventHandler(btnclick:string){\n    if(btnclick == \"Save\"){\n      if(this.DepartmentForm.valid)\n        this.saveRecord();\n    }else if(btnclick == \"Delete\"){\n      this.dialogserve.openConfirmation(\"Are you sure you want to delete this record?\")\n        .afterClosed().subscribe(result => {\n          if(result == true){\n            this.DepartmentForm.patchValue({'is_deleted':true,'deleted_by':'Axl','deleted_date':this.formatDate(new Date())});\n            this.deleteRecord();\n          }\n        });\n    }\n  }\n\n  deleteRecord(){\n    this.frmglobaldataserve.updateRecord(this.DepartmentForm.value,\"Library/PostDepartment\")\n      .subscribe(\n          (response) => {\n            console.log(\"Record Deleted Successfully: \"+ response);\n            this.router.navigateByUrl(\"pages/settings/libraries/departments/list\");\n          },(error) => {\n            console.log(\"Error Deleting the Record: \"+JSON.stringify(this.DepartmentForm.value));\n          }\n      )\n  }\n\n  saveRecord(){\n    this.frmglobaldataserve.updateRecord(this.DepartmentForm.value,\"Library/PostDepartment\")\n      .subscribe(\n          (response) => {\n            this.router.navigateByUrl(\"pages/settings/libraries/departments/\"+response).then(x => {\n              this.initData(),\n              this.frmglobaldataserve.openSnackBar();\n            },(error) =>{\n              console.log(\"Error saving the Record: \"+ JSON.stringify(this.DepartmentForm.value));\n            })\n          }\n      );\n  }\n\n  private formatDate(date) {\n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  }\n}\n","<axl-app-crud (appcrudbtnclick)=\"eventHandler($event)\"></axl-app-crud>\n<div class=\"container\">\n    <form [formGroup]=\"DepartmentForm\" *ngIf=\"this.DepartmentForm\">\n        <nb-card>\n            <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n            <nb-card-header>\n              Department Form\n            </nb-card-header>\n        </nb-card>\n        <nb-card>\n            <nb-card-body>\n                <div class=\"row\">\n                    <div class=\"col-sm-10\">\n                        <div class=\"form-group\">\n                            <input formControlName=\"description\" type=\"text\" nbInput fullWidth placeholder=\"Description\">\n                        </div>\n                    </div>\n                    <div class=\"col-sm-2\">\n                        <div class=\"form-group\">\n                            <nb-checkbox style=\"float: right;\" status=\"basic\" formControlName=\"is_active\">Active</nb-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n        </nb-card>\n    </form>\n</div>","import { Route } from '@angular/compiler/src/core';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { lib_department } from 'app/shared/model/library.model';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { environment } from 'environments/environment';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-department-list',\n  templateUrl: './department-list.component.html',\n  styleUrls: ['./department-list.component.scss']\n})\nexport class DepartmentListComponent implements OnInit {\n  public baseUrl = environment.apiUrl+\"Library/\";\n  public showLoadingProgressBar$: Observable<boolean>\n  private paginator: MatPaginator;\n  displayedColumns: string[] = ['departmentId','description','is_active'];\n  @ViewChild(MatPaginator, {static:true}) set matPaginator(mp:MatPaginator)\n  {\n    this.paginator = mp;\n    this.gridDataSource.paginator = this.paginator;\n  }\n  gridDataSource = new MatTableDataSource();\n  requestTypeList: lib_department[] = [];\n  constructor(\n    private router:Router,\n    private frmglobaldataserve: FormGlobalDataService,\n    private dialog:MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.refreshTheList();\n  }\n\n  refreshTheList(){\n    var urlstr = this.baseUrl+'GetAllDepartment/';\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.frmglobaldataserve.loadList(urlstr)\n      .subscribe((res: lib_department[]) => {\n        this.requestTypeList = res;\n        this.gridDataSource.data = res;\n        this.frmglobaldataserve.setLoadingProgressBar(false);\n      },\n      () => {})\n  }\n\n  eventHandler(btnevent:string){\n    if(btnevent == \"Refresh\")\n    {\n      console.log(\"Refresh\");\n      this.refreshTheList();\n    }\n    else if(btnevent == \"Add\"){\n      console.log(\"Add\");\n      this.router.navigateByUrl(\"pages/settings/libraries/departments/\"+0);\n    }\n  }\n\n  onUserRowSelect(id :number):void{\n    this.router.navigateByUrl(\"pages/settings/libraries/departments/\"+id);\n  }\n}\n","<axl-app-list  (applistbtnclick)='eventHandler($event)'></axl-app-list>\n<div class=\"container\">\n    <nb-card>\n        <nb-card-header>\n            Departments\n        </nb-card-header>\n        <nb-card>\n            <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n        </nb-card>\n        <nb-card-body>\n            <table mat-table #table class=\"mat-elevation-z8\" [dataSource]=\"gridDataSource\" matSort>\n                <!-- Leave ID Column -->\n                <ng-container matColumnDef=\"departmentId\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Department ID </th>\n                <td mat-cell *matCellDef=\"let erow\" > {{erow.departmentId}} </td>\n                </ng-container>  \n                <!-- Employee Code Column -->\n                <ng-container matColumnDef=\"description\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Description </th>\n                <td mat-cell *matCellDef=\"let erow\" > {{erow.description}} </td>\n                </ng-container>\n                <!-- Leave Type Column -->\n                <ng-container matColumnDef=\"is_active\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Active </th>\n                <td mat-cell *matCellDef=\"let erow\">{{erow.is_active}}</td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onUserRowSelect(row.departmentId)\"></tr>\n            </table>  \n            <mat-paginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n        </nb-card-body>\n    </nb-card>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DepartmentEntryComponent } from './department-entry/department-entry.component';\nimport { DepartmentListComponent } from './department-list/department-list.component';\n\nconst routes: Routes = [\n  {\n    path:'list',\n    component:DepartmentListComponent,\n  },\n  {\n    path:':id',\n    component:DepartmentEntryComponent,\n    pathMatch:'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DepartmentsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DepartmentsRoutingModule } from './departments-routing.module';\nimport { DepartmentListComponent } from './department-list/department-list.component';\nimport { DepartmentEntryComponent } from './department-entry/department-entry.component';\nimport { SharedComponentModule } from 'app/shared/component/shared-component.module';\nimport { SharedMaterialModule } from 'app/shared/shared-material/shared-material.module';\n\n\n@NgModule({\n  declarations: [DepartmentListComponent, DepartmentEntryComponent],\n  imports: [\n    CommonModule,\n    DepartmentsRoutingModule,\n    SharedComponentModule,\n    SharedMaterialModule\n  ]\n})\nexport class DepartmentsModule { }\n"]}