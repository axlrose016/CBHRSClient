{"version":3,"sources":["./src/app/pages/learning_and_development/ldna/ldna-entry/ldna-entry.component.ts","./src/app/pages/learning_and_development/ldna/ldna-entry/ldna-entry.component.html","./src/app/pages/learning_and_development/ldna/ldna-list/ldna-list.component.ts","./src/app/pages/learning_and_development/ldna/ldna-list/ldna-list.component.html","./src/app/pages/learning_and_development/ldna/ldna-routing.module.ts","./src/app/pages/learning_and_development/ldna/ldna.module.ts"],"names":[],"mappings":"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","file":"ldna-ldna-module-es2015.js","sourcesContent":["import { Component, Injectable, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LDNADetails, LDNAResults } from 'app/shared/model/learningAndDevelopment.model';\nimport { lib_competency_category, lib_core_competency, lib_department } from 'app/shared/model/library.model';\nimport { DialogService } from 'app/shared/service/dialog.service';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { LibraryService } from 'app/shared/service/library.service';\nimport { environment } from 'environments/environment';\nimport { Guid } from 'guid-typescript';\nimport { url } from 'inspector';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-ldna-entry',\n  templateUrl: './ldna-entry.component.html',\n  styleUrls: ['./ldna-entry.component.scss']\n})\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LdnaEntryComponent implements OnInit {\n  public baseUrl = environment.apiUrl+\"Library/\";\n  public curRecordId: string = null;\n  public LDNAForm: FormGroup;\n  public showLoadingProgressBar$: Observable<boolean>;\n  public lib_department: lib_department[];\n  public lib_core_competency: lib_core_competency[];\n  public lib_competency_category: lib_competency_category[];\n  public selectedCoreCompetency: number;\n  ldnaDetail: LDNADetails = {\n    ldnaResults:[],\n  };\n  constructor(\n    private dialogserve:DialogService,\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private frmglobaldataserve: FormGlobalDataService,\n    private libraries_svc : LibraryService\n  ) { \n    this.libraries_svc.loadAllLibrary();\n  }\n\n  ngOnInit(): void {\n    this.lib_core_competency = this.libraries_svc.lib_core_competencies_svc;\n    this.lib_competency_category = this.libraries_svc.lib_competency_categories_svc;\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.initData();\n    this.frmglobaldataserve.setLoadingProgressBar(false);\n  }\n\n  initData(){\n      this.lib_department = JSON.parse(sessionStorage.getItem('lib_department'));\n      this.curRecordId = this.route.snapshot.params['id'];\n      if(this.curRecordId != \"0\"){\n        this.getLDNA();\n      }else{\n        this.buildLDNADetail();\n      }\n      //this.getCoreCompetency();\n  }\n\n  getLDNA(){\n    this.frmglobaldataserve.getRecord(\"LDNA/GetLDNA/\"+this.curRecordId)\n      .subscribe((data: LDNADetails) => {\n        this.ldnaDetail = data;\n        this.buildLDNADetail(this.ldnaDetail);\n      })\n  }\n\n  eventHandler(btnclick:string){\n    if(btnclick == \"Save\"){\n      if(this.LDNAForm.valid)\n        this.saveRecord();\n    }else if(btnclick == \"Delete\"){\n    }\n  }\n\n  saveRecord(){\n    this.frmglobaldataserve.updateRecord(this.LDNAForm.value,\"LDNA/PostLDNA\")\n      .subscribe(\n        (response) =>{\n          console.log(\"Record Saved Successfully: \"+ response);\n          this.router.navigateByUrl(\"pages/learning-and-development/ldna/\"+response).then(x =>{\n            this.initData(),\n            this.frmglobaldataserve.openSnackBar();\n          },(error) =>{\n            console.log(\"Error Saving the Record: \"+ JSON.stringify(this.LDNAForm.value));\n          });\n        }\n      )\n  }\n\n  buildLDNADetail(ldnaDetail?:LDNADetails){\n    this.LDNAForm = this.fb.group({\n      ldnaId:[ldnaDetail?ldnaDetail.ldnaId: Guid.raw],\n      departmentId:[ldnaDetail?ldnaDetail.departmentId:0],\n      ldnaResults:this.fb.array([]),\n    });\n\n    this.ldnaDetail.ldnaResults.forEach(i => {\n      this.createLDNAResultFormGroup(i);\n    });\n  }\n\n  openCoreCompetencyDialog(){\n    this.dialogserve.openFormDialog('CoreCompetency');\n  }\n\n  ngDoCheck(){\n    if(this.dialogserve.selectedCoreCompetency$ != undefined && this.dialogserve.doCheckController$.value == true){\n          this.createCoreCompetencyFormGroup(<lib_core_competency>this.dialogserve.selectedCoreCompetency$);\n          this.dialogserve.setDoCheckController(false);\n        };\n  }\n\n  createCoreCompetencyFormGroup(libCoreCompetency:lib_core_competency){\n    let coreCompetencyFG = this.fb.group({\n      coreCompetencyId:[libCoreCompetency?libCoreCompetency.coreCompetencyId: 0],\n      description:[libCoreCompetency?libCoreCompetency.description:''],\n      libCompetencyCategory: this.fb.array([]),\n    });\n\n    libCoreCompetency.libCompetencyCategory.forEach(i => {\n      this.createLDNAResultFormGroup(i, libCoreCompetency, i.description);\n    });\n  }\n\n  createLDNAResultFormGroup(ldnaResult?:LDNAResults, libCoreCompetency?: lib_core_competency, competencyDesc?: string){\n    let ldnaResultFG:FormGroup = this.fb.group({\n      ldnaResultId:[ldnaResult.ldnaResultId? ldnaResult.ldnaResultId: Guid.raw],\n      coreCompetencyId:[ldnaResult.coreCompetencyId? ldnaResult.coreCompetencyId : libCoreCompetency.coreCompetencyId? libCoreCompetency.coreCompetencyId : null],\n      coreCompetencyDesc:[libCoreCompetency? libCoreCompetency.description: null],\n      competencyId:[ldnaResult.competencyId? ldnaResult.competencyId: null],\n      competencyDesc:[competencyDesc? competencyDesc : null],\n      permanent:[ldnaResult.permanent? ldnaResult.permanent:0],\n      contractual:[ldnaResult.contractual? ldnaResult.contractual:0]\n    });\n    this.ldnaResultFormArray.push(ldnaResultFG);\n  }\n\n  get ldnaResultFormArray(): FormArray{\n    return this.LDNAForm.get(\"ldnaResults\") as FormArray;\n  }  \n}\n","<axl-app-crud (appcrudbtnclick)=\"eventHandler($event)\"></axl-app-crud>\n<div class=\"container\">\n    <form [formGroup]=\"LDNAForm\" *ngIf=\"this.LDNAForm\">\n        <nb-card>\n            <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n            <nb-card-header>\n              LDNA Form\n            </nb-card-header>\n        </nb-card>\n        <nb-card>\n            <nb-card-body>\n                <nb-select formControlName=\"departmentId\" fullWidth placeholder=\"Department\"  [(selected)]=\"selectedDepartment\">\n                    <nb-option *ngFor=\"let department of lib_department; let i = index\" [value]=\"department.departmentId\">\n                        {{department.description}}\n                    </nb-option>\n                </nb-select>\n            </nb-card-body>\n        </nb-card>\n        <nb-card>\n            <nb-card-body>\n              <div style=\"padding-bottom: 5px;\">\n                <button (click)=\"openCoreCompetencyDialog();\" nbButton status=\"success\"><nb-icon icon=\"search-outline\"></nb-icon>Search Core Competency</button>\n              </div>\n              <table>\n                  <tr>\n                    <th style=\"padding-right: 50px;\">Parent Competency</th>\n                    <th style=\"padding-right: 135px;\">Competency Category</th>\n                    <th style=\"padding-right: 20px;\">Permanent</th>\n                    <th style=\"padding-right: 20px;\">Contractual</th>\n                  </tr>\n                  <tr *ngFor=\"let category of ldnaResultFormArray.controls;let i = index; let last = last;\"[formGroup]=\"category\">\n                      <td>\n                        <nb-select formControlName=\"coreCompetencyId\" fullWidth placeholder=\"Core Competency\"  [(selected)]=\"selectedCoreCompetency\">\n                          <nb-option *ngFor=\"let coreCompetency of lib_core_competency; let i = index\" [value]=\"coreCompetency.coreCompetencyId\">\n                              {{coreCompetency.description}}\n                          </nb-option>\n                        </nb-select>\n                      </td>\n                      <td>\n                        <nb-select formControlName=\"competencyId\" fullWidth placeholder=\"Competency Category\"  [(selected)]=\"selectedCompetencyCategory\">\n                          <nb-option *ngFor=\"let competencyCategory of lib_competency_category; let i = index\" [value]=\"competencyCategory.competencyId\">\n                              {{competencyCategory.description}}\n                          </nb-option>\n                        </nb-select>\n                      </td>\n                      <td>\n                        <mat-form-field style=\"width: 100px;\">\n                            <input type=\"number\" formControlName=\"permanent\" style=\"text-align: right;\" matInput/>\n                        </mat-form-field>\n                      </td>\n                      <td>\n                        <mat-form-field style=\"width: 100px;\">\n                            <input type=\"number\" formControlName=\"contractual\" style=\"text-align: right;\" matInput/>\n                        </mat-form-field>\n                      </td>\n                  </tr>\n              </table>\n            </nb-card-body>\n        </nb-card>\n    </form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { LDNAConsolidatedReport, LDNADetails } from 'app/shared/model/learningAndDevelopment.model';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { environment } from 'environments/environment';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'ngx-ldna-list',\n  templateUrl: './ldna-list.component.html',\n  styleUrls: ['./ldna-list.component.scss']\n})\nexport class LdnaListComponent implements OnInit {\n  public baseUrl = environment.apiUrl+\"LDNA/\";\n  public showLoadingProgressBar$: Observable<boolean>;\n  private paginator: MatPaginator;\n  displayedColumns:string[] = ['ldnaId','departmentDesc']\n  gridDataSource = new MatTableDataSource();\n  @ViewChild(MatPaginator, {static:true}) set matPaginator(mp: MatPaginator)\n  {\n    this.paginator = mp;\n    this.gridDataSource.paginator = this.paginator;\n  }\n  ldnaList: LDNADetails[] = [];\n  ldnaConsoReport: LDNAConsolidatedReport[] = [];\n  constructor(\n    private router: Router,\n    private frmglobaldataserve: FormGlobalDataService,\n    private dialog: MatDialog,\n  ) { \n  }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.refreshTheList();\n  }\n  \n  refreshTheList(){\n    var urlstr = this.baseUrl+'GetLDNAList/';\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.frmglobaldataserve.loadList(urlstr)\n      .subscribe((res: LDNADetails[]) => {\n        this.ldnaList = res;\n        this.gridDataSource.data = res;\n        this.frmglobaldataserve.setLoadingProgressBar(false);\n      },\n      () => {})\n  }\n\n  eventHandler(btnevent: string){\n    if(btnevent == \"Refresh\"){\n      this.refreshTheList();\n    }\n    else if(btnevent == \"Add\"){\n      this.router.navigateByUrl(\"pages/learning-and-development/ldna/\"+0);\n    }\n  }\n\n  onUserRowSelect(id:Guid):void{\n    this.router.navigateByUrl(\"pages/learning-and-development/ldna/\"+id);\n  }\n\n  applyFilter(event:Event){\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.gridDataSource.filter = filterValue.trim().toLocaleLowerCase();\n  }\n\n  exportTableList(){\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.frmglobaldataserve.loadList(this.baseUrl+'ExportLDNAConsolidated/')\n    .subscribe((res: LDNAConsolidatedReport[]) => {\n      this.ldnaConsoReport = res;\n      this.frmglobaldataserve.setLoadingProgressBar(false);\n      var fileName = \"LDNAMasterList_\"+Date.now+'.xlsx';\n      let dataToExport = this.ldnaConsoReport\n        .map(x => ({\n          CoreCompetency: x.coreCompetency,\n          CompetencyCategory: x.competencyCategory,\n          PMED_Permanent: x.pmeD_Permanent,\n          PMED_Contractual: x.pmeD_Contractual,\n          Regulation_Licensing_and_Enforcement_Division_Permanent: x.regulation_Licensing_and_Enforcement_Division_Permanent, \n          Regulation_Licensing_and_Enforcement_Division_Contractual: x.regulation_Licensing_and_Enforcement_Division_Contractual,\n          District_Provincial_Health_Teams_Permanent: x.district_Provincial_Health_Teams_Permanent,\n          District_Provincial_Health_Teams_Contractual: x.district_Provincial_Health_Teams_Contractual\n        }));\n      this.frmglobaldataserve.exportToXlsx(dataToExport,'LDNAMasterList',fileName);\n    },\n    () => {})\n  }\n}\n","<axl-app-list  (applistbtnclick)='eventHandler($event)'></axl-app-list>\n<div class=\"container\">\n    <nb-card>\n        <nb-card-header>\n            LDNA\n        </nb-card-header>\n        <mat-tab-group>\n            <mat-tab label=\"List\">\n                <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n                    <nb-card>\n                        <nb-card-body>\n                            <mat-form-field appearance=\"standard\" style=\"float:right; width: 100%;\">\n                                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search..\" #input>\n                                <mat-icon matSuffix>search</mat-icon>\n                              </mat-form-field>\n\n                            <table mat-table #table class=\"mat-elevation-z8\" [dataSource]=\"gridDataSource\" matSort>\n                                <ng-container matColumnDef=\"ldnaId\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> LDNA ID </th>\n                                    <td mat-cell *matCellDef=\"let erow\" > {{erow.ldnaId}} </td>\n                                </ng-container>  \n\n                                <ng-container matColumnDef=\"departmentDesc\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Department</th>\n                                    <td mat-cell *matCellDef=\"let erow\" > {{erow.departmentDesc}} </td>\n                                </ng-container> \n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onUserRowSelect(row.ldnaId)\"></tr>\n                            </table>\n                            <mat-paginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n                        </nb-card-body>\n                    </nb-card>\n            </mat-tab>\n            <mat-tab label=\"Reports\">\n                <nb-card>\n                  <nb-card-header>Master List</nb-card-header>\n                  <nb-card-body>\n                      <div class=\"row\">\n                          <div class=\"col-sx\">\n                              <a class=\"button button1\" (click)=\"exportTableList()\">Export   <i class=\"far fa-file-excel\"></i></a>\n                          </div>\n                          <div class=\"col-lg\">\n                              <span><p>Report Details: Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n                              Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\n                              </p></span> \n                          </div>\n                      </div>\n                  </nb-card-body>\n                </nb-card>\n              </mat-tab>\n        </mat-tab-group>\n    </nb-card>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LdnaEntryComponent } from './ldna-entry/ldna-entry.component';\nimport { LdnaListComponent } from './ldna-list/ldna-list.component';\n\nconst routes: Routes = [\n  {\n    path:'list',\n    component:LdnaListComponent,\n  },\n  {\n    path:':id',\n    component:LdnaEntryComponent,\n    pathMatch:'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LdnaRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LdnaRoutingModule } from './ldna-routing.module';\nimport { LdnaListComponent } from './ldna-list/ldna-list.component';\nimport { LdnaEntryComponent } from './ldna-entry/ldna-entry.component';\nimport { SharedComponentModule } from 'app/shared/component/shared-component.module';\nimport { SharedMaterialModule } from 'app/shared/shared-material/shared-material.module';\n\n\n@NgModule({\n  declarations: [LdnaListComponent, LdnaEntryComponent],\n  imports: [\n    CommonModule,\n    LdnaRoutingModule,\n    SharedComponentModule,\n    SharedMaterialModule\n  ]\n})\nexport class LdnaModule { }\n"],"sourceRoot":"webpack:///"}