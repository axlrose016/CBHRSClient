{"version":3,"sources":["./src/app/pages/performance/organizational-goal/organizational-goal-entry/organizational-goal-entry.component.ts","./src/app/pages/performance/organizational-goal/organizational-goal-entry/organizational-goal-entry.component.html","./src/app/pages/performance/organizational-goal/organizational-goal-list/organizational-goal-list.component.ts","./src/app/pages/performance/organizational-goal/organizational-goal-list/organizational-goal-list.component.html","./src/app/pages/performance/organizational-goal/organizational-goal-routing.module.ts","./src/app/pages/performance/organizational-goal/organizational-goal.module.ts"],"names":[],"mappings":"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","file":"organizational-goal-organizational-goal-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrganizationalGoalDetail } from 'app/shared/model/performance.model';\nimport { DialogService } from 'app/shared/service/dialog.service';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-organizational-goal-entry',\n  templateUrl: './organizational-goal-entry.component.html',\n  styleUrls: ['./organizational-goal-entry.component.scss']\n})\nexport class OrganizationalGoalEntryComponent implements OnInit {\n\n  public OrgGoalForm: FormGroup;\n  public showLoadingProgressBar$: Observable<boolean>;\n  public curRecordId: string = null;\n  orgGoalDetail: OrganizationalGoalDetail;\n  constructor(\n    private dialogserve: DialogService,\n    private frmglobaldataserve: FormGlobalDataService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.initData();\n    this.frmglobaldataserve.setLoadingProgressBar(false);\n  }\n\n  initData(){\n    this.curRecordId = this.route.snapshot.params['id'];\n    if(this.curRecordId != \"0\"){\n      this.getOrgGoal();\n    }else{\n      this.buildOrgGoalDetail();\n    }\n  }\n\n    getOrgGoal(){\n      this.frmglobaldataserve.getRecord(\"PerformanceMgnt/GetOrgGoal/\"+this.curRecordId)\n        .subscribe((data: OrganizationalGoalDetail) => {\n          this.orgGoalDetail = data;\n          this.buildOrgGoalDetail(this.orgGoalDetail);\n        });\n    }\n\n    buildOrgGoalDetail(orgGoalDetail?: OrganizationalGoalDetail){\n      this.OrgGoalForm = this.fb.group({\n        orgGoalId:[orgGoalDetail? orgGoalDetail.orgGoalId: Guid.raw],\n        mandateOfOffice:[orgGoalDetail? orgGoalDetail.mandateOfOffice:''],\n        visionOfOffice:[orgGoalDetail? orgGoalDetail.visionOfOffice:''],\n        missionOfOffice:[orgGoalDetail? orgGoalDetail.missionOfOffice:''],\n        stratigicGoalsOfOffice:[orgGoalDetail? orgGoalDetail.stratigicGoalsOfOffice:'']\n      })\n    }\n\n    eventHandler(btnclick:string){\n      if(btnclick == \"Save\"){\n        if(this.OrgGoalForm.valid)\n          this.saveRecord();\n      }else if(btnclick == \"Delete\")\n        this.dialogserve.openConfirmation(\"Are you sure you want to delete this record?\")\n          .afterClosed().subscribe(result => {\n            if(result == true){\n              this.OrgGoalForm.patchValue({'is_deleted':true,'deleted_by':localStorage.getItem('secN'),'deleted_date':this.frmglobaldataserve.formatDate(new Date())});\n              this.deleteRecord();\n            }\n          })\n    }\n\n    saveRecord(){\n      this.frmglobaldataserve.updateRecord(this.OrgGoalForm.value,\"PerformanceMgnt/PostOrgGoal\")\n        .subscribe(\n          (response) => {\n            console.log(\"Record Deleted Successfully: \" + response);\n            this.router.navigateByUrl(\"pages/performance/organizational-goals/list\");\n          },(error) => {\n            console.log(\"Error Deleting the Record: \"+ JSON.stringify(this.OrgGoalForm.value));\n          }\n        )\n    }\n\n    deleteRecord(){\n      this.frmglobaldataserve.updateRecord(this.OrgGoalForm.value,\"PerformanceMgnt/PostOrgGoal\")\n        .subscribe(\n          (response) => {\n            console.log(\"Record Deleted Successfully: \" + response);\n            this.router.navigateByUrl(\"pages/performance/organizational-goals/list\");\n          },(error) => {\n            console.log(\"Error Deleting the Record: \"+ JSON.stringify(this.OrgGoalForm.value));\n          }\n        )\n    }\n  }\n","<axl-app-crud (appcrudbtnclick)=\"eventHandler($event)\"></axl-app-crud>\n<div class=\"container\">\n    <form [formGroup]=\"OrgGoalForm\" *ngIf=\"this.OrgGoalForm\">\n        <nb-card>\n            <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n            <nb-card-header>\n                Organizational Goal\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"row\">\n                    <div class=\"col-sm-9\">\n                        <div class=\"form-group\">\n                            <mat-form-field class=\"example-full-width\" style=\"width:100%\" appearance=\"fill\">\n                                <mat-label>Mandates of the office</mat-label>\n                                <textarea formControlName=\"mandateOfOffice\" matInput placeholder=\"...\"></textarea>\n                            </mat-form-field>\n                            <mat-form-field class=\"example-full-width\" style=\"width:100%\" appearance=\"fill\">\n                                <mat-label>Vision of the office</mat-label>\n                                <textarea formControlName=\"visionOfOffice\" matInput placeholder=\"...\"></textarea>\n                            </mat-form-field>\n                            <mat-form-field class=\"example-full-width\" style=\"width:100%\" appearance=\"fill\">\n                                <mat-label>Mission of the office</mat-label>\n                                <textarea formControlName=\"missionOfOffice\" matInput placeholder=\"...\"></textarea>\n                            </mat-form-field>\n                            <mat-form-field class=\"example-full-width\" style=\"width:100%\" appearance=\"fill\">\n                                <mat-label>Strategic goals of the office</mat-label>\n                                <textarea formControlName=\"stratigicGoalsOfOffice\" matInput placeholder=\"...\"></textarea>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>  \n            </nb-card-body>\n        </nb-card>\n    </form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { OrganizationalGoalList } from 'app/shared/model/performance.model';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { environment } from 'environments/environment';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-organizational-goal-list',\n  templateUrl: './organizational-goal-list.component.html',\n  styleUrls: ['./organizational-goal-list.component.scss']\n})\nexport class OrganizationalGoalListComponent implements OnInit {\n  public baseUrl = environment.apiUrl+\"PerformanceMgnt/\";\n  public showLoadingProgressBar$: Observable<boolean>;\n  private paginator: MatPaginator;\n  displayedColumns: string[] = ['orgGoalId','missionOfOffice','visionOfOffice']\n  @ViewChild(MatPaginator, {static:true}) set matPaginator(mp: MatPaginator)\n  {\n    this.paginator = mp;\n    this.gridDataSource\n  }\n  gridDataSource = new MatTableDataSource();\n  orgGoalList:OrganizationalGoalList[] = [];\n  constructor(\n    private router:Router,\n    private frmglobaldataserve: FormGlobalDataService,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.refreshTheList();\n  }\n\n  refreshTheList()\n  {\n    var urlstr = this.baseUrl+'GetOrgGoalList/';\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.frmglobaldataserve.loadList(urlstr)\n      .subscribe((res: OrganizationalGoalList[]) => {\n        this.orgGoalList = res;\n        this.gridDataSource.data = res;\n        this.frmglobaldataserve.setLoadingProgressBar(false);\n      },\n      () => {})\n  }\n\n  eventHandler(btnevent:string){\n    if(btnevent == \"Refresh\"){\n      this.refreshTheList();\n    }else if(btnevent == \"Add\"){\n      this.router.navigateByUrl(\"pages/performance/organizational-goals/\"+0);\n    }\n  }\n  \n  onUserRowSelect(id:Guid):void{\n    this.router.navigateByUrl(\"pages/performance/organizational-goals/\"+id);\n  }\n\n  applyFilter(event: Event){\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.gridDataSource.filter = filterValue.trim().toLocaleLowerCase();\n  }\n\n}\n","<axl-app-list  (applistbtnclick)='eventHandler($event)'></axl-app-list>\n<div class=\"container\">\n    <nb-card>\n        <nb-card-header>\n            Organizational Goal\n        </nb-card-header>\n        <mat-tab-group>\n            <mat-tab label=\"List\">\n                <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n                    <nb-card>\n                        <nb-card-body>\n                            <mat-form-field appearance=\"standard\" style=\"float:right; width: 100%;\">\n                                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search..\" #input>\n                                <mat-icon matSuffix>search</mat-icon>\n                            </mat-form-field>\n\n                            <table mat-table #table class=\"mat-elevation-z8\" [dataSource]=\"gridDataSource\" matSort>\n                                <ng-container matColumnDef=\"orgGoalId\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Organizational Goal ID </th>\n                                    <td mat-cell *matCellDef=\"let erow\" > {{erow.orgGoalId}} </td>\n                                </ng-container>  \n                \n                                <ng-container matColumnDef=\"missionOfOffice\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Mission of Office </th>\n                                    <td mat-cell *matCellDef=\"let erow\" > {{erow.missionOfOffice}} </td>\n                                </ng-container>  \n\n                                <ng-container matColumnDef=\"visionOfOffice\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Vission of Office </th>\n                                    <td mat-cell *matCellDef=\"let erow\" > {{erow.visionOfOffice}} </td>\n                                </ng-container>  \n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onUserRowSelect(row.orgGoalId)\"></tr>\n                            </table>\n                            <mat-paginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n                        </nb-card-body>\n                    </nb-card>\n            </mat-tab>\n        </mat-tab-group>\n    </nb-card>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrganizationalGoalEntryComponent } from './organizational-goal-entry/organizational-goal-entry.component';\nimport { OrganizationalGoalListComponent } from './organizational-goal-list/organizational-goal-list.component';\n\nconst routes: Routes = [\n  {\n    path:'list',\n    component:OrganizationalGoalListComponent\n  },\n  {\n    path:':id',\n    component:OrganizationalGoalEntryComponent,\n    pathMatch:'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrganizationalGoalRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OrganizationalGoalRoutingModule } from './organizational-goal-routing.module';\nimport { OrganizationalGoalListComponent } from './organizational-goal-list/organizational-goal-list.component';\nimport { SharedMaterialModule } from 'app/shared/shared-material/shared-material.module';\nimport { SharedComponentModule } from 'app/shared/component/shared-component.module';\nimport { OrganizationalGoalEntryComponent } from './organizational-goal-entry/organizational-goal-entry.component';\n\n\n@NgModule({\n  declarations: [OrganizationalGoalListComponent, OrganizationalGoalEntryComponent],\n  imports: [\n    CommonModule,\n    OrganizationalGoalRoutingModule,\n    SharedComponentModule,\n    SharedMaterialModule\n  ]\n})\nexport class OrganizationalGoalModule { }\n"],"sourceRoot":"webpack:///"}