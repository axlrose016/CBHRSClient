{"version":3,"sources":["webpack:///src/app/pages/recruitment/job-classification/job-classification-entry/job-classification-entry.component.ts","webpack:///src/app/pages/recruitment/job-classification/job-classification-entry/job-classification-entry.component.html","webpack:///src/app/pages/recruitment/job-classification/job-classification-list/job-classification-list.component.ts","webpack:///src/app/pages/recruitment/job-classification/job-classification-list/job-classification-list.component.html","webpack:///src/app/pages/recruitment/job-classification/job-classification-routing.module.ts","webpack:///src/app/pages/recruitment/job-classification/job-classification.module.ts"],"names":["JobClassificationEntryComponent","dialogserve","frmglobaldataserve","router","route","fb","curRecordId","showLoadingProgressBar$","getShowLoadingSpinner","setLoadingProgressBar","initData","snapshot","params","getJobClass","buildJobClassDetail","getRecord","subscribe","data","jobClassDetail","JobClassForm","group","jobClassificationId","raw","occupationalServCode","numerical_suffix","duties_and_responsibilities","salary_grade","is_active","btnclick","valid","saveRecord","openConfirmation","afterClosed","result","patchValue","localStorage","getItem","formatDate","Date","deleteRecord","updateRecord","value","response","console","log","navigateByUrl","then","x","openSnackBar","error","JSON","stringify","eventHandler","selector","templateUrl","styleUrls","JobClassificationListComponent","dialog","baseUrl","apiUrl","displayedColumns","jobClassificationList","gridDataSource","refreshTheList","btnevent","id","event","filterValue","target","filter","trim","toLocaleLowerCase","urlstr","loadList","res","mp","paginator","applyFilter","matPaginator","routes","path","component","pathMatch","JobClassificationRoutingModule","forChild","imports","exports","JobClassificationModule","declarations"],"mappings":"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","file":"job-classification-job-classification-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { JobClassificationDetail } from 'app/shared/model/recruitement.model';\nimport { DialogService } from 'app/shared/service/dialog.service';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-job-classification-entry',\n  templateUrl: './job-classification-entry.component.html',\n  styleUrls: ['./job-classification-entry.component.scss']\n})\nexport class JobClassificationEntryComponent implements OnInit {\n\n  public JobClassForm: FormGroup;\n  public showLoadingProgressBar$: Observable<boolean>;\n  public curRecordId: string = null;\n  jobClassDetail: JobClassificationDetail;\n  constructor(\n    private dialogserve: DialogService,\n    private frmglobaldataserve: FormGlobalDataService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.initData();\n    this.frmglobaldataserve.setLoadingProgressBar(false);\n  }\n\n  initData(){\n    this.curRecordId = this.route.snapshot.params['id'];\n    if(this.curRecordId != \"0\"){\n      this.getJobClass();\n    }else{\n      this.buildJobClassDetail();\n    }\n  }\n\n  getJobClass(){\n    this.frmglobaldataserve.getRecord(\"Setting/GetJobClassification/\"+this.curRecordId)\n      .subscribe((data: JobClassificationDetail) =>{\n        this.jobClassDetail = data;\n        this.buildJobClassDetail(this.jobClassDetail);\n      });\n  }\n\n  buildJobClassDetail(jobClassDetail?: JobClassificationDetail){\n    debugger;\n    this.JobClassForm = this.fb.group({\n      jobClassificationId:[jobClassDetail? jobClassDetail.jobClassificationId: Guid.raw],\n      occupationalServCode:[jobClassDetail? jobClassDetail.occupationalServCode: 0],\n      numerical_suffix:[jobClassDetail? jobClassDetail.numerical_suffix:0],\n      duties_and_responsibilities:[jobClassDetail? jobClassDetail.duties_and_responsibilities:''],\n      salary_grade:[jobClassDetail? jobClassDetail.salary_grade:0],\n      is_active:[jobClassDetail? jobClassDetail.is_active:false],\n    })\n  }\n\n  eventHandler(btnclick:string){\n    if(btnclick == \"Save\"){\n      if(this.JobClassForm.valid)\n        this.saveRecord();\n    }else if(btnclick == \"Delete\")\n      this.dialogserve.openConfirmation(\"Are you sure you want to delete this record?\")\n        .afterClosed().subscribe(result => {\n          if(result == true){\n            this.JobClassForm.patchValue({'is_deleted':true,'deleted_by':localStorage.getItem('secN'),'deleted_date':this.frmglobaldataserve.formatDate(new Date())});\n            this.deleteRecord();\n          }\n        })\n  }\n\n  saveRecord(){\n    this.frmglobaldataserve.updateRecord(this.JobClassForm.value,\"Setting/PostJobClassification\")\n      .subscribe(\n        (response) =>\n        {\n          console.log(\"Record Saved Successfully: \"+response);\n          this.router.navigateByUrl(\"pages/recruitment/job-classification/\"+response).then(x => {\n            this.initData(),\n            this.frmglobaldataserve.openSnackBar();\n          },(error) =>\n          {\n            console.log(\"Error Saving the record: \"+ JSON.stringify(this.JobClassForm.value));\n          })\n        }\n      )\n  }\n\n  deleteRecord(){\n    this.frmglobaldataserve.updateRecord(this.JobClassForm.value,\"Setting/PostJobClassification\")\n      .subscribe(\n        (response) => {\n          console.log(\"Record Deleted Successfully: \" + response);\n          this.router.navigateByUrl(\"pages/recruitment/job-classification/list\");\n        },(error) => {\n          console.log(\"Error Deleting the Record: \"+ JSON.stringify(this.JobClassForm.value));\n        }\n      )\n  }\n\n}\n","<axl-app-crud (appcrudbtnclick)=\"eventHandler($event)\"></axl-app-crud>\n<div class=\"container\">\n    <form [formGroup]=\"JobClassForm\" *ngIf=\"this.JobClassForm\">\n        <nb-card>\n            <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n            <nb-card-header>\n                Job Classification Form\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"row\">\n                    <div class=\"col-sm-9\">\n                        <div class=\"form-group\">\n                            <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\n                                <mat-label>Select Occupational Service</mat-label>\n                                <select formControlName=\"occupationalServCode\" matNativeControl required>\n                                    <option [ngValue]=1>General Administrative Service</option>\n                                    <option [ngValue]=2>Financial Service</option>\n                                    <option [ngValue]=3>Planning Service</option>\n                                    <option [ngValue]=4>Architecture and Engineering Service</option>\n                                    <option [ngValue]=5>Transportation, Communication and Public Utilities Service</option>\n                                    <option [ngValue]=6>Crafts, Trades and Related Service</option>\n                                    <option [ngValue]=7>Social Sciences and Welfare Service</option>\n                                    <option [ngValue]=8>Information, Art and Recreation Service</option>\n                                    <option [ngValue]=9>Medicine and Health Service</option>\n                                    <option [ngValue]=10>Education, Library, Museum and Archival Service</option>\n                                    <option [ngValue]=11>Agrarian, Agricultural and Enviromnental Service</option>\n                                    <option [ngValue]=12>Trade, Tourism and Industry Service</option>\n                                    <option [ngValue]=13>Mathematics, Physical and Biological Sciences Service</option>\n                                    <option [ngValue]=14>Defense and Security Service</option>\n                                    <option [ngValue]=15>Legal and Judicial Service</option>\n                                    <option [ngValue]=16>Foreign Relations Service</option>\n                                    <option [ngValue]=17>Miscellaneous Service</option>\n                                    <option [ngValue]=18>Executive Service</option>\n                                    <option [ngValue]=19>Legislative Service</option>\n                                    <option [ngValue]=20>Corporate Governance</option>\n                                </select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>  \n                <div class=\"row\">\n                    <div class=\"col-sm-9\">\n                        <div class=\"form-group\">\n                            <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\n                                <mat-label>Select Numerical Suffix and/or Mixed Adjectival Used</mat-label>\n                                <select formControlName=\"numerical_suffix\" matNativeControl required>\n                                    <option [ngValue]=1>I</option>\n                                    <option [ngValue]=2>II</option>\n                                    <option [ngValue]=3>III</option>\n                                    <option [ngValue]=4>IV</option>\n                                    <option [ngValue]=5>V</option>\n                                    <option [ngValue]=6>VI</option>\n                                    <option [ngValue]=7>VII</option>\n                                    <option [ngValue]=8>VIII</option>\n                                    <option [ngValue]=9>Junior</option>\n                                    <option [ngValue]=10>Senior</option>\n                                    <option [ngValue]=11>Supervising</option>\n                                    <option [ngValue]=12>Chief</option>\n                                    <option [ngValue]=13>Director</option>\n                                </select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-9\">\n                        <div class=\"form-group\">\n                            <mat-form-field class=\"example-full-width\" style=\"width:100%\" appearance=\"fill\">\n                                <mat-label>Enter General Duties and Responsibilities of a Class of Position</mat-label>\n                                <textarea formControlName=\"duties_and_responsibilities\" matInput placeholder=\"...\"></textarea>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-9\">\n                        <div class=\"form-group\">\n                            <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\n                                <mat-label>Select Numerical Suffix and/or Mixed Adjectival Used</mat-label>\n                                <select formControlName=\"salary_grade\" matNativeControl required>\n                                    <option [ngValue]=1>1</option>\n                                    <option [ngValue]=2>2</option>\n                                    <option [ngValue]=3>3</option>\n                                    <option [ngValue]=4>4</option>\n                                    <option [ngValue]=5>5</option>\n                                    <option [ngValue]=6>6</option>\n                                    <option [ngValue]=7>7</option>\n                                    <option [ngValue]=8>8</option>\n                                    <option [ngValue]=9>9</option>\n                                    <option [ngValue]=10>10</option>\n                                    <option [ngValue]=11>11</option>\n                                    <option [ngValue]=12>12</option>\n                                    <option [ngValue]=13>13</option>\n                                    <option [ngValue]=14>14</option>\n                                    <option [ngValue]=15>15</option>\n                                    <option [ngValue]=16>16</option>\n                                    <option [ngValue]=17>17</option>\n                                    <option [ngValue]=18>18</option>\n                                    <option [ngValue]=19>19</option>\n                                    <option [ngValue]=20>20</option>\n                                    <option [ngValue]=21>21</option>\n                                    <option [ngValue]=22>22</option>\n                                    <option [ngValue]=23>23</option>\n                                    <option [ngValue]=24>24</option>\n                                    <option [ngValue]=25>25</option>\n                                    <option [ngValue]=26>26</option>\n                                    <option [ngValue]=27>27</option>\n                                    <option [ngValue]=28>28</option>\n                                    <option [ngValue]=29>29</option>\n                                    <option [ngValue]=30>30</option>\n                                    <option [ngValue]=31>31</option>\n                                    <option [ngValue]=32>32</option>\n                                    <option [ngValue]=33>33</option>\n                                </select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div> \n            </nb-card-body>\n        </nb-card>\n    </form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { JobClassificationList_vw } from 'app/shared/model/recruitement.model';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { environment } from 'environments/environment';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-job-classification-list',\n  templateUrl: './job-classification-list.component.html',\n  styleUrls: ['./job-classification-list.component.scss']\n})\nexport class JobClassificationListComponent implements OnInit {\n\n  public baseUrl = environment.apiUrl+\"Setting/\";\n  public showLoadingProgressBar$: Observable<boolean>;\n  private paginator: MatPaginator;\n    salary_grade?:number;\n  displayedColumns: string[] = ['jobClassificationId','occupationalServCode','salary_grade']\n  jobClassificationList:JobClassificationList_vw[] = [];\n  @ViewChild(MatPaginator, {static:true}) set matPaginator(mp: MatPaginator)\n  {\n    this.paginator = mp;\n    this.gridDataSource\n  }\n  gridDataSource = new MatTableDataSource();\n\n  constructor(\n    private router:Router,\n    private frmglobaldataserve: FormGlobalDataService,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.refreshTheList();\n  }\n\n  eventHandler(btnevent:string){\n    if(btnevent == \"Refresh\"){\n      this.refreshTheList();\n    }else if(btnevent == \"Add\"){\n      this.router.navigateByUrl(\"pages/recruitment/job-classification/\"+0);\n    }\n  }\n  \n  onUserRowSelect(id:Guid):void{\n    this.router.navigateByUrl(\"pages/recruitment/job-classification/\"+id);\n  }\n\n  applyFilter(event: Event){\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.gridDataSource.filter = filterValue.trim().toLocaleLowerCase();\n  }\n\n  refreshTheList(){\n    debugger;\n    var urlstr = this.baseUrl+'GetJobClassificationList/';\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.frmglobaldataserve.loadList(urlstr)\n      .subscribe((res: JobClassificationList_vw[]) => {\n        this.jobClassificationList = res;\n        this.gridDataSource.data = res;\n        this.frmglobaldataserve.setLoadingProgressBar(false);\n      },\n      () => {})\n  }\n\n}\n","<axl-app-list  (applistbtnclick)='eventHandler($event)'></axl-app-list>\n<div class=\"container\">\n    <nb-card>\n        <nb-card-header>\n            Job Classification\n        </nb-card-header>\n        <mat-tab-group>\n            <mat-tab label=\"List\">\n                <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n                    <nb-card>\n                        <nb-card-body>\n                            <mat-form-field appearance=\"standard\" style=\"float:right; width: 100%;\">\n                                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search..\" #input>\n                                <mat-icon matSuffix>search</mat-icon>\n                              </mat-form-field>\n\n                            <table mat-table #table class=\"mat-elevation-z8\" [dataSource]=\"gridDataSource\" matSort>\n                                <ng-container matColumnDef=\"jobClassificationId\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Job Classification ID </th>\n                                    <td mat-cell *matCellDef=\"let erow\" > {{erow.jobClassificationId}} </td>\n                                </ng-container>  \n\n                                <ng-container matColumnDef=\"occupationalServCode\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 300px;\"> Occupational Service Code </th>\n                                    <td mat-cell *matCellDef=\"let erow\" > {{erow.occupationalServCode}} </td>\n                                </ng-container> \n\n                                <ng-container matColumnDef=\"salary_grade\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Salary Grade </th>\n                                    <td mat-cell *matCellDef=\"let erow\" > {{erow.salary_grade}} </td>\n                                </ng-container>\n                \n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onUserRowSelect(row.jobClassificationId)\"></tr>\n                            </table>\n                            <mat-paginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n                        </nb-card-body>\n                    </nb-card>\n            </mat-tab>\n        </mat-tab-group>\n    </nb-card>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { JobClassificationEntryComponent } from './job-classification-entry/job-classification-entry.component';\nimport { JobClassificationListComponent } from './job-classification-list/job-classification-list.component';\n\nconst routes: Routes = [\n  {\n    path:'list',\n    component:JobClassificationListComponent,\n  },\n  {\n    path:':id',\n    component:JobClassificationEntryComponent,\n    pathMatch:'full'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class JobClassificationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { JobClassificationRoutingModule } from './job-classification-routing.module';\nimport { JobClassificationListComponent } from './job-classification-list/job-classification-list.component';\nimport { JobClassificationEntryComponent } from './job-classification-entry/job-classification-entry.component';\nimport { SharedComponentModule } from 'app/shared/component/shared-component.module';\nimport { SharedMaterialModule } from 'app/shared/shared-material/shared-material.module';\n\n\n@NgModule({\n  declarations: [JobClassificationListComponent, JobClassificationEntryComponent],\n  imports: [\n    CommonModule,\n    JobClassificationRoutingModule,\n    SharedComponentModule,\n    SharedMaterialModule\n  ]\n})\nexport class JobClassificationModule { }\n"]}