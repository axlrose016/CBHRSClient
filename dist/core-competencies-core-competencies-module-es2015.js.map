{"version":3,"sources":["./src/app/pages/setting/libraries/core-competencies/core-competencies-routing.module.ts","./src/app/pages/setting/libraries/core-competencies/core-competencies.module.ts","./src/app/pages/setting/libraries/core-competencies/core-competency-entry/core-competency-entry.component.ts","./src/app/pages/setting/libraries/core-competencies/core-competency-entry/core-competency-entry.component.html","./src/app/pages/setting/libraries/core-competencies/core-competency-list/core-competency-list.component.ts","./src/app/pages/setting/libraries/core-competencies/core-competency-list/core-competency-list.component.html"],"names":[],"mappings":"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","file":"core-competencies-core-competencies-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CoreCompetencyEntryComponent } from './core-competency-entry/core-competency-entry.component';\nimport { CoreCompetencyListComponent } from './core-competency-list/core-competency-list.component';\n\nconst routes: Routes = [\n  {\n    path:'list',\n    component:CoreCompetencyListComponent,\n  },\n  {\n    path:':id',\n    component:CoreCompetencyEntryComponent,\n    pathMatch:'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CoreCompetenciesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CoreCompetenciesRoutingModule } from './core-competencies-routing.module';\nimport { CoreCompetencyListComponent } from './core-competency-list/core-competency-list.component';\nimport { CoreCompetencyEntryComponent } from './core-competency-entry/core-competency-entry.component';\nimport { SharedMaterialModule } from 'app/shared/shared-material/shared-material.module';\nimport { SharedComponentModule } from 'app/shared/component/shared-component.module';\n\n\n@NgModule({\n  declarations: [CoreCompetencyListComponent, CoreCompetencyEntryComponent],\n  imports: [\n    CommonModule,\n    CoreCompetenciesRoutingModule,\n    SharedMaterialModule,\n    SharedComponentModule\n  ]\n})\nexport class CoreCompetenciesModule { }\n","import { ThrowStmt } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { lib_competency_category, lib_core_competency } from 'app/shared/model/library.model';\nimport { DialogService } from 'app/shared/service/dialog.service';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { environment } from 'environments/environment';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-core-competency-entry',\n  templateUrl: './core-competency-entry.component.html',\n  styleUrls: ['./core-competency-entry.component.scss']\n})\nexport class CoreCompetencyEntryComponent implements OnInit {\n\n  public CoreCompetencyForm: FormGroup;\n  public showLoadingProgressBar$: Observable<boolean>;\n  public baseUrl = environment.apiUrl+\"Library/\";\n  public curRecordId: number = 0;\n  public selectedCompetency: number;\n  lib_core_competency: lib_core_competency = {\n    libCompetencyCategory:[]\n  };\n  constructor(\n    private fb: FormBuilder,\n    private frmglobaldataserve:FormGlobalDataService,\n    private dialogserve:DialogService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.initData();\n    this.frmglobaldataserve.setLoadingProgressBar(false);\n  }\n\n  initData(){\n    this.curRecordId = +this.route.snapshot.params['id'];\n    if(this.curRecordId != 0){\n      this.coreCompetency();\n    }else{\n      this.buildCoreCompetencyDetail();\n    }\n  }\n\n  coreCompetency(){\n    this.frmglobaldataserve.getRecord(\"Library/GetCoreCompetency?id=\"+this.curRecordId)\n      .subscribe((data:lib_core_competency) => {\n        this.lib_core_competency = data;\n        ;\n        this.buildCoreCompetencyDetail(this.lib_core_competency);\n      })\n  }\n\n  buildCoreCompetencyDetail(coreCompetencyDetail?: lib_core_competency){\n    this.CoreCompetencyForm = this.fb.group({\n      coreCompetencyId:[coreCompetencyDetail?coreCompetencyDetail.coreCompetencyId:0],\n      description:[coreCompetencyDetail?coreCompetencyDetail.description:''],\n      is_active:[coreCompetencyDetail?coreCompetencyDetail.is_active:true],\n      libCompetencyCategory: this.fb.array([])\n    });\n    if(this.lib_core_competency.libCompetencyCategory != undefined){\n      this.lib_core_competency.libCompetencyCategory.forEach(i => {\n        this.createLibCompetencyFormGroup(i, false);\n    });\n    }\n  }\n\n  createLibCompetencyFormGroup(lib_Competency_Category: lib_competency_category, isTriggered:boolean){\n    let lib_Competency_CategoryFG: FormGroup = this.fb.group({\n      competencyId:[lib_Competency_Category? lib_Competency_Category.competencyId:0],\n      description:[lib_Competency_Category? lib_Competency_Category.description:''],\n    });\n    if(isTriggered){this.selectedCompetency = this.libCompetencyCategoryFormArray.length;}\n    this.libCompetencyCategoryFormArray.push(lib_Competency_CategoryFG);\n  }\n\n  get libCompetencyCategoryFormArray(): FormArray{\n    return this.CoreCompetencyForm.get(\"libCompetencyCategory\") as FormArray;\n  }\n\n  eventHandler(btnclick:string){\n    if(btnclick == \"Save\"){\n      if(this.CoreCompetencyForm.valid)\n        this.saveRecord();\n    }else if(btnclick == \"Delete\"){\n      this.dialogserve.openConfirmation(\"Are you sure you want to delete this record?\")\n        .afterClosed().subscribe(result => {\n          if(result == true){\n            this.CoreCompetencyForm.patchValue({'is_deleted':true,'deleted_by':'Axl','deleted_date':this.formatDate(new Date())});\n            this.deleteRecord();\n          }\n        });\n    }\n  }\n\n  deleteRecord(){\n    this.frmglobaldataserve.updateRecord(this.CoreCompetencyForm.value,\"Library/PostCoreCompetency\")\n      .subscribe(\n          (response) => {\n            console.log(\"Record Deleted Successfully: \"+ response);\n            this.router.navigateByUrl(\"pages/settings/libraries/core-competencies/list\");\n          },(error) => {\n            console.log(\"Error Deleting the Record: \"+JSON.stringify(this.CoreCompetencyForm.value));\n          }\n      )\n  }\n\n  saveRecord(){\n    this.frmglobaldataserve.updateRecord(this.CoreCompetencyForm.value,\"Library/PostCoreCompetency\")\n      .subscribe(\n          (response) => {\n            this.router.navigateByUrl(\"pages/settings/libraries/core-competencies/\"+response).then(x => {\n              this.initData(),\n              this.frmglobaldataserve.openSnackBar();\n            },(error) =>{\n              console.log(\"Error saving the Record: \"+ JSON.stringify(this.CoreCompetencyForm.value));\n            })\n          }\n      );\n  }\n\n  private formatDate(date) {\n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  }\n  \n  openCompetencyDialog(){\n    this.dialogserve.openFormDialog('CompetencyCategory');\n  }\n\n  ngDoCheck(){\n  if(this.dialogserve.selectedCompetencyCategory$ != undefined && this.dialogserve.doCheckController$.value == true){\n        this.createLibCompetencyFormGroup(<lib_competency_category>this.dialogserve.selectedCompetencyCategory$,false);\n        this.dialogserve.setDoCheckController(false);\n      };\n  }\n\n  ngOnDestroy(){\n    this.CoreCompetencyForm.reset();\n    this.dialogserve.selectedCompetencyCategory$ = null;\n  }\n}\n","<axl-app-crud (appcrudbtnclick)=\"eventHandler($event)\"></axl-app-crud>\n<div class=\"container\">\n    <form [formGroup]=\"CoreCompetencyForm\" *ngIf=\"this.CoreCompetencyForm\">\n        <nb-card>\n            <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n            <nb-card-header>\n              Core Competency Form\n            </nb-card-header>\n        </nb-card>\n        <nb-card>\n            <nb-card-body>\n                <div class=\"row\">\n                    <div class=\"col-sm-10\">\n                        <div class=\"form-group\">\n                            <input formControlName=\"description\" type=\"text\" nbInput fullWidth placeholder=\"Description\">\n                        </div>\n                    </div>\n                    <div class=\"col-sm-2\">\n                        <div class=\"form-group\">\n                            <nb-checkbox style=\"float: right;\" status=\"basic\" formControlName=\"is_active\">Active</nb-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n        </nb-card>\n        <nb-card>\n            <nb-card-body>\n              <div style=\"padding-bottom: 5px;\">\n                <button (click)=\"openCompetencyDialog();\" nbButton status=\"success\"><nb-icon icon=\"search-outline\"></nb-icon>Search Category</button>\n              </div>\n                <table>\n                  <tr>\n                    <th style=\"padding-right: 135px;\">Action</th>\n                    <th style=\"padding-right: 135px;\">Competency Category ID</th>  \n                    <th style=\"padding-right: 5px;\">Description</th> \n                  </tr>\n                <tr *ngFor=\"let lib_competency_category of libCompetencyCategoryFormArray.controls;let i = index;let last = last;\" [formGroup]=\"lib_competency_category\">\n                  <td>\n                    &nbsp;<button mat-raised-button style=\"background-color:#ff3d71; color:white;\"><nb-icon icon=\"trash-outline\"></nb-icon>Delete</button>\n                  </td>\n                  <td>\n                    <mat-form-field style=\"width: 120px;\" *ngIf=\"selectedCompetency == i\">\n                      <input formControlName=\"competencyId\" matInput/>\n                    </mat-form-field>\n                    <span *ngIf=\"selectedCompetency != i\">{{lib_competency_category.value.competencyId}}</span>\n                  </td>\n                  <td>\n                    <mat-form-field style=\"width: 300px;\" *ngIf=\"selectedCompetency == i\">\n                      <input formControlName=\"description\" matInput/>\n                    </mat-form-field>\n                    <span *ngIf=\"selectedCompetency != i\">{{lib_competency_category.value.description}}</span>\n                  </td>\n                </tr> \n                </table>\n            </nb-card-body>\n          </nb-card>\n    </form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { lib_core_competency } from 'app/shared/model/library.model';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { environment } from 'environments/environment';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-core-competency-list',\n  templateUrl: './core-competency-list.component.html',\n  styleUrls: ['./core-competency-list.component.scss']\n})\nexport class CoreCompetencyListComponent implements OnInit {\n  public baseUrl = environment.apiUrl+\"Library/\";\n  public showLoadingProgressBar$: Observable<boolean>\n  private paginator: MatPaginator;\n  displayedColumns: string[] = ['coreCompetencyId','description','is_active'];\n  @ViewChild(MatPaginator, {static:true}) set matPaginator(mp:MatPaginator)\n  {\n    this.paginator = mp;\n    this.gridDataSource.paginator = this.paginator;\n  }\n  gridDataSource = new MatTableDataSource();\n  coreCompetencyList: lib_core_competency[] = [];\n  constructor(\n    private router:Router,\n    private frmglobaldataserve: FormGlobalDataService,\n    private dialog:MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.refreshTheList();\n  }\n\n  refreshTheList(){\n    var urlstr = this.baseUrl+'GetAllCoreCompetency/';\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.frmglobaldataserve.loadList(urlstr)\n      .subscribe((res: lib_core_competency[]) => {\n        this.coreCompetencyList = res;\n        this.gridDataSource.data = res;\n        this.frmglobaldataserve.setLoadingProgressBar(false);\n      },\n      () => {})\n  }\n\n  eventHandler(btnevent:string){\n    if(btnevent == \"Refresh\")\n    {\n      console.log(\"Refresh\");\n      this.refreshTheList();\n    }\n    else if(btnevent == \"Add\"){\n      console.log(\"Add\");\n      this.router.navigateByUrl(\"pages/settings/libraries/core-competencies/\"+0);\n    }\n  }\n\n  onUserRowSelect(id :number):void{\n    this.router.navigateByUrl(\"pages/settings/libraries/core-competencies/\"+id);\n  }\n}\n","<axl-app-list  (applistbtnclick)='eventHandler($event)'></axl-app-list>\n<div class=\"container\">\n    <nb-card>\n        <nb-card-header>\n            Core Competencies\n        </nb-card-header>\n        <nb-card>\n            <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n        </nb-card>\n        <nb-card-body>\n            <table mat-table #table class=\"mat-elevation-z8\" [dataSource]=\"gridDataSource\" matSort>\n                <!-- Leave ID Column -->\n                <ng-container matColumnDef=\"coreCompetencyId\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Core Competency ID </th>\n                <td mat-cell *matCellDef=\"let erow\" > {{erow.coreCompetencyId}} </td>\n                </ng-container>  \n                <!-- Employee Code Column -->\n                <ng-container matColumnDef=\"description\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Description </th>\n                <td mat-cell *matCellDef=\"let erow\" > {{erow.description}} </td>\n                </ng-container>\n                <!-- Leave Type Column -->\n                <ng-container matColumnDef=\"is_active\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Active </th>\n                <td mat-cell *matCellDef=\"let erow\">{{erow.is_active}}</td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onUserRowSelect(row.coreCompetencyId)\"></tr>\n            </table>  \n            <mat-paginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n        </nb-card-body>\n    </nb-card>\n</div>"],"sourceRoot":"webpack:///"}