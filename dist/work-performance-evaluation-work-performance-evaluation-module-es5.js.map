{"version":3,"sources":["webpack:///src/app/pages/learning_and_development/workplace-application-plan/workplace-application-plan-entry/workplace-application-plan-entry.component.ts","webpack:///src/app/pages/learning_and_development/workplace-application-plan/workplace-application-plan-entry/workplace-application-plan-entry.component.html","webpack:///src/app/pages/performance/work-performance-evaluation/work-performance-evaluation-routing.module.ts","webpack:///src/app/pages/performance/work-performance-evaluation/work-performance-evaluation.module.ts","webpack:///src/app/pages/performance/work-performance-evaluation/work-performance-evaluaton-entry/work-performance-evaluaton-entry.component.ts","webpack:///src/app/pages/performance/work-performance-evaluation/work-performance-evaluaton-entry/work-performance-evaluaton-entry.component.html","webpack:///src/app/pages/performance/work-performance-evaluation/work-performance-evaluaton-list/work-performance-evaluaton-list.component.ts","webpack:///src/app/pages/performance/work-performance-evaluation/work-performance-evaluaton-list/work-performance-evaluaton-list.component.html"],"names":["WorkplaceApplicationPlanEntryComponent","dialogserve","frmglobaldataserve","router","route","fb","curRecordId","wapDetail","applicationPlanAndAccomplishments","showLoadingProgressBar$","getShowLoadingSpinner","setLoadingProgressBar","initData","snapshot","params","getWAP","buildWapDetail","selectedPDS$","WAPForm","controls","patchValue","reset","getRecord","subscribe","data","group","wapId","raw","personDetails","personId","firstName","lastName","middleName","birthDate","placeOfBirth","bloodType","mobileNo","title","provider","date_conduct","learningOutcome","alignment","startDate","endDate","objective","output","array","forEach","i","createAPAFormGroup","apa","isTriggered","apaFG","apaId","milestone","whatNeedsToBeDone","targetDate","meansOfVerification","dateAddressed","progress","whatWasDone","whatWasNotDone","ReasonForNonAccomplish","catchUpActivities","selectedAPA","apaFormArray","length","push","btnclick","valid","saveRecord","openConfirmation","afterClosed","result","formatDate","Date","deleteRecord","updateRecord","value","response","console","log","navigateByUrl","then","x","openSnackBar","error","JSON","stringify","table","selectedIndex","openFormDialog","get","eventHandler","selector","templateUrl","styleUrls","routes","path","component","pathMatch","WorkPerformanceEvaluationRoutingModule","forChild","imports","exports","WorkPerformanceEvaluationModule","declarations","WorkPerformanceEvaluatonEntryComponent","WorkPerformanceEvaluatonListComponent"],"mappings":"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","file":"work-performance-evaluation-work-performance-evaluation-module-es5.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PersonlistDialogComponent } from 'app/shared/component/dialog/personlist-dialog/personlist-dialog.component';\nimport { ApplicationPlanAndAccomplishmentsDetails, WorkplaceApplicationPlanDetail } from 'app/shared/model/learningAndDevelopment.model';\nimport { PersonPDSDetail } from 'app/shared/model/PersonPDS.model';\nimport { DialogService } from 'app/shared/service/dialog.service';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-workplace-application-plan-entry',\n  templateUrl: './workplace-application-plan-entry.component.html',\n  styleUrls: ['./workplace-application-plan-entry.component.scss']\n})\nexport class WorkplaceApplicationPlanEntryComponent implements OnInit {\n\n  public WAPForm: FormGroup;\n  public showLoadingProgressBar$: Observable<boolean>;\n  public curRecordId: string = null;\n  public selectedAPA: number;\n  wapDetail: WorkplaceApplicationPlanDetail = {\n    applicationPlanAndAccomplishments:[]\n  }\n  constructor(\n    private dialogserve: DialogService,\n    private frmglobaldataserve: FormGlobalDataService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.initData();\n    this.frmglobaldataserve.setLoadingProgressBar(false);\n  }\n\n  initData(){\n    this.curRecordId = this.route.snapshot.params['id'];\n    if(this.curRecordId != \"0\"){\n      this.getWAP();\n    }else{\n      this.buildWapDetail();\n    }\n  }\n\n  ngDoCheck(){\n    if(this.dialogserve.selectedPDS$ != null){\n      this.WAPForm.controls['personDetails'].patchValue(this.dialogserve.selectedPDS$);\n    }\n  }\n\n  ngOnDestroy(){\n    this.WAPForm.reset();\n    this.dialogserve.selectedPDS$ = null;\n  }\n\n  getWAP(){\n    this.frmglobaldataserve.getRecord(\"WorkplaceApplicationPlan/GetWAP/\"+ this.curRecordId)\n      .subscribe((data: WorkplaceApplicationPlanDetail) => {\n        this.wapDetail = data;\n        ;\n        this.buildWapDetail(this.wapDetail);\n      });\n  }\n\n  buildWapDetail(wapDetail?: WorkplaceApplicationPlanDetail){\n    this.WAPForm = this.fb.group({\n      wapId:[wapDetail? wapDetail.wapId: Guid.raw],\n      personDetails: this.fb.group({\n        personId: [wapDetail? wapDetail.personDetails.personId: ''],\n        firstName: [wapDetail? wapDetail.personDetails.firstName: ''],\n        lastName: [wapDetail? wapDetail.personDetails.lastName: ''],\n        middleName: [wapDetail? wapDetail.personDetails.middleName: ''],\n        birthDate:[wapDetail? wapDetail.personDetails.birthDate:''],\n        placeOfBirth:[wapDetail? wapDetail.personDetails.placeOfBirth:''],\n        bloodType:[wapDetail? wapDetail.personDetails.bloodType:''],\n        mobileNo:[wapDetail? wapDetail.personDetails.mobileNo:''],\n      }),\n      title:[wapDetail? wapDetail.title: ''],\n      provider:[wapDetail? wapDetail.provider: ''],\n      date_conduct:[wapDetail? wapDetail.date_conduct: null],\n      learningOutcome:[wapDetail? wapDetail.learningOutcome: ''],\n      alignment:[wapDetail? wapDetail.alignment: ''],\n      startDate:[wapDetail? wapDetail.startDate: null],\n      endDate:[wapDetail? wapDetail.endDate:null],\n      objective:[wapDetail? wapDetail.objective: ''],\n      output:[wapDetail? wapDetail.output:''],\n      applicationPlanAndAccomplishments: this.fb.array([]),\n    });\n\n    this.wapDetail.applicationPlanAndAccomplishments.forEach(i => {\n      this.createAPAFormGroup(i, false);\n    });\n  }\n\n  createAPAFormGroup(apa:ApplicationPlanAndAccomplishmentsDetails,isTriggered:boolean){\n    let apaFG: FormGroup = this.fb.group({\n      apaId:[apa? apa.apaId:'00000000-0000-0000-0000-000000000000'],\n      milestone:[apa? apa.milestone:0],\n      whatNeedsToBeDone:[apa? apa.whatNeedsToBeDone:''],\n      targetDate:[apa? apa.targetDate: null],\n      meansOfVerification:[apa? apa.meansOfVerification:''],\n      dateAddressed:[apa? apa.dateAddressed:null],\n      progress:[apa? apa.progress:0],\n      whatWasDone:[apa? apa.whatWasDone:''],\n      whatWasNotDone:[apa? apa.whatWasNotDone:''],\n      ReasonForNonAccomplish:[apa? apa.ReasonForNonAccomplish:''],\n      catchUpActivities:[apa?apa.catchUpActivities:'']\n    });\n    if(isTriggered){this.selectedAPA = this.apaFormArray.length;}\n    this.apaFormArray.push(apaFG);\n    ;\n  }\n\n  get apaFormArray(): FormArray{\n    return this.WAPForm.get(\"applicationPlanAndAccomplishments\") as FormArray;\n  }\n\n  eventHandler(btnclick:string){\n    if(btnclick == \"Save\"){\n      if(this.WAPForm.valid)\n      this.saveRecord();\n    }else if(btnclick == \"Delete\"){\n      this.dialogserve.openConfirmation(\"Are you sure you want to delete this record?\")\n        .afterClosed().subscribe(result => {\n          if(result == true){\n            this.WAPForm.patchValue({'is_deleted':true,'deleted_by':'Axl','deleted_date':this.frmglobaldataserve.formatDate(new Date())});\n            this.deleteRecord();\n          }\n        });\n    }\n  }\n\n  saveRecord(){\n    this.frmglobaldataserve.updateRecord(this.WAPForm.value,\"WorkplaceApplicationPlan/PostWAP\")\n      .subscribe(\n        (response) =>\n        {\n          console.log(\"Record Saved Successfully: \"+response);\n          this.router.navigateByUrl(\"pages/learning-and-development/workplace-application-plan/\"+response).then(x => {\n            this.initData(),\n            this.frmglobaldataserve.openSnackBar();\n          },(error) =>\n          {\n            console.log(\"Error Saving the record: \"+ JSON.stringify(this.WAPForm.value));\n          })\n        }\n      )\n  }\n\n  deleteRecord(){\n    this.frmglobaldataserve.updateRecord(this.WAPForm.value,\"WorkplaceApplicationPlan/PostWAP\")\n      .subscribe(\n        (response) => {\n          console.log(\"Record Deleted Successfully: \" + response);\n          this.router.navigateByUrl(\"pages/learning-and-development/workplace-application-plan/list\");\n        },(error) => {\n          console.log(\"Error Deleting the Record: \"+ JSON.stringify(this.WAPForm.value));\n        }\n      )\n  }\n\n  saveTableRecord(table:string){\n    switch(table){\n      case \"apa\":\n        this.selectedAPA = null;\n        break;\n      default:\n        break;\n    }\n  }\n\n  editTableRecord(table:string, selectedIndex:number){\n    switch(table){\n      case \"apa\":\n        this.selectedAPA = selectedIndex;\n        break;\n      default:\n        break;\n    }\n  }\n\n  openParticipantDialog(){\n    this.dialogserve.openFormDialog('PersonProfile');\n  }\n}\n","<axl-app-crud (appcrudbtnclick)=\"eventHandler($event)\"></axl-app-crud>\n<div class=\"container\">\n<form [formGroup]=\"WAPForm\" *ngIf=\"this.WAPForm\">\n<nb-card>\n    <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n    <nb-card-header>\n        I. Course/Learning and Development (L&D) Intervention\n    </nb-card-header>\n    <nb-card-body>\n        <div class=\"row\">\n            <div class=\"col-sm-9\">\n                <div class=\"form-group\">\n                    <input formControlName=\"title\" type=\"text\" nbInput fullWidth placeholder=\"Title\">\n                    <input formControlName=\"provider\" type=\"text\" nbInput fullWidth placeholder=\"Provider\">\n                    <textarea formControlName=\"learningOutcome\" nbInput fullWidth placeholder=\"Textarea\"></textarea>\n                  </div>\n            </div>\n            <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <input nbInput  [matDatepicker]=\"dtConduct\" placeholder=\"Date Conduct\"  formControlName=\"date_conduct\" style=\"color: black\">\n                  <mat-datepicker-toggle matSuffix [for]=\"dtConduct\"></mat-datepicker-toggle>\n                  <mat-datepicker touchUi #dtConduct></mat-datepicker>\n                </div>\n            </div>\n        </div>  \n    </nb-card-body>\n</nb-card>\n<nb-card>\n    <nb-card-header>\n        II. Participant’s Information\n        <button (click)=\"openParticipantDialog();\" nbButton status=\"success\" style=\"float: right;\"><nb-icon icon=\"search-outline\"></nb-icon>Search Participant’s</button>\n    </nb-card-header>\n    <nb-card-body>\n        <div class=\"row\" formGroupName=\"personDetails\">\n            <div class=\"col-sm-4\">\n                <div class=\"form-group\">\n                    <input formControlName=\"personId\" type=\"text\" nbInput fullWidth placeholder=\"Name\">\n                    <input formControlName=\"firstName\" type=\"text\" nbInput fullWidth placeholder=\"Name\">\n                    <input formControlName=\"middleName\" type=\"text\" nbInput fullWidth placeholder=\"Office and Division/Unit\">\n                    <input formControlName=\"lastName\" type=\"text\" nbInput fullWidth placeholder=\"Salary Grade\">\n                </div>\n            </div>\n            <div class=\"col-sm-4\">\n                <div class=\"form-group\">\n                    <input nbInput  [matDatepicker]=\"dtBirthDate\" placeholder=\"Birth Date\"  formControlName=\"birthDate\" style=\"color: black\">\n                    <mat-datepicker-toggle matSuffix [for]=\"dtBirthDate\"></mat-datepicker-toggle>\n                    <mat-datepicker touchUi #dtBirthDate></mat-datepicker>\n                    <input formControlName=\"placeOfBirth\" type=\"text\" nbInput fullWidth placeholder=\"Place Of Birth\">\n                </div>\n            </div>\n            <div class=\"col-sm-4\">\n                <div class=\"form-group\">\n                    <input formControlName=\"bloodType\" type=\"text\" nbInput fullWidth placeholder=\"Supervisor Name\">\n                    <input formControlName=\"mobileNo\" type=\"text\" nbInput fullWidth placeholder=\"Supervisor Position\">\n                </div>\n            </div>\n        </div>  \n    </nb-card-body>\n</nb-card>\n<nb-card>\n    <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n    <nb-card-header>\n        III. Application Plan and Accomplishment\n    </nb-card-header>\n    <nb-card-body>\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <input nbInput  [matDatepicker]=\"dtStartDate\" placeholder=\"Start Date\"  formControlName=\"startDate\" style=\"color: black\">\n                  <mat-datepicker-toggle matSuffix [for]=\"dtStartDate\"></mat-datepicker-toggle>\n                  <mat-datepicker touchUi #dtStartDate></mat-datepicker>\n                </div>\n            </div>\n            <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <input nbInput  [matDatepicker]=\"dtEndDate\" placeholder=\"End Date\"  formControlName=\"endDate\" style=\"color: black\">\n                  <mat-datepicker-toggle matSuffix [for]=\"dtEndDate\"></mat-datepicker-toggle>\n                  <mat-datepicker touchUi #dtEndDate></mat-datepicker>\n                </div>\n            </div>\n        </div> \n        <div class=\"row\">\n          <div class=\"col-sm-12\">\n            <div class=\"form-group\">\n              <textarea formControlName=\"objective\" nbInput fullWidth placeholder=\"Objectives\"></textarea>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-12\">\n            <div class=\"form-group\">\n              <textarea formControlName=\"output\" nbInput fullWidth placeholder=\"Output\"></textarea>\n            </div>\n          </div>\n        </div>\n    </nb-card-body>\n</nb-card>\n<nb-card>\n    <nb-card>\n      <nb-card-body>\n        <div style=\"padding-bottom: 5px;\">\n          <button (click)=\"createAPAFormGroup(null,true);\"  mat-raised-button style=\"background-color:#3366ff; color:white;\"><nb-icon icon=\"person-add-outline\"></nb-icon>&nbsp;&nbsp;Add Plan and Accomplishment</button>\n        </div>\n        <table>\n          <tr>\n            <th>Action</th>\n            <th>Milestone %</th>\n            <th>What needs to be done?</th>\n            <th>Target Date</th>\n            <th>Means of verification</th>\n            <th>Date Assessed</th>\n            <th>Progress%</th>\n            <th>What was done?</th>\n            <th>What was not done?</th>\n            <th>Reason for non-accomplish</th>\n            <th>Catch-up Activities</th>\n          </tr>\n          <tr *ngFor=\"let apa of apaFormArray.controls;let i = index;let last = last;\" [formGroup]=\"apa\">\n            <td>\n              <button (click)=\"editTableRecord('apa',i);\" *ngIf=\"selectedAPA != i\" mat-raised-button style=\"background-color:#3366ff; color:white;\"><nb-icon icon=\"edit-2-outline\"></nb-icon>Edit&nbsp;&nbsp;</button>\n              <button (click)=\"saveTableRecord('apa',i);\" *ngIf=\"selectedAPA == i\" mat-raised-button style=\"background-color: #00d68f; color:white;\"><nb-icon icon=\"save-outline\"></nb-icon>Save</button>\n            </td>\n            <td>\n              <mat-form-field style=\"width: 90px;\" *ngIf=\"selectedAPA == i\">\n                <input type=\"number\" formControlName=\"milestone\" matInput/>\n              </mat-form-field>\n              <span *ngIf=\"selectedAPA != i\">{{apa.value.milestone}}</span>\n            </td>\n            <td>\n              <mat-form-field style=\"height: 53px;\" *ngIf=\"selectedAPA == i\">\n                <textarea matInput\n                          formControlName=\"whatNeedsToBeDone\"\n                          cdkTextareaAutosize\n                          #autosize=\"cdkTextareaAutosize\"\n                          cdkAutosizeMinRows=\"1\"\n                          cdkAutosizeMaxRows=\"5\"></textarea>\n              </mat-form-field>\n              <span *ngIf=\"selectedAPA != i\">{{apa.value.whatNeedsToBeDone}}</span>\n            </td>\n            <td>\n              <mat-form-field style=\"width: 100px;\" *ngIf=\"selectedAPA == i\">\n                <input matInput [matDatepicker]=\"dttargetDate\" formControlName=\"targetDate\" style=\"color: black\">\n                <mat-datepicker-toggle matSuffix [for]=\"dttargetDate\"></mat-datepicker-toggle>\n                <mat-datepicker touchUi #dttargetDate></mat-datepicker>\n              </mat-form-field>\n              <span *ngIf=\"selectedAPA != i\">{{apa.value.targetDate | date:'MM/dd/yyyy'}}</span>\n            </td>\n            <td>\n              <mat-form-field style=\"height: 53px;\" *ngIf=\"selectedAPA == i\">\n                <textarea matInput\n                          formControlName=\"meansOfVerification\"\n                          cdkTextareaAutosize\n                          #autosize=\"cdkTextareaAutosize\"\n                          cdkAutosizeMinRows=\"1\"\n                          cdkAutosizeMaxRows=\"5\"></textarea>\n              </mat-form-field>\n              <span *ngIf=\"selectedAPA != i\">{{apa.value.meansOfVerification}}</span>\n            </td>\n            <td>\n              <mat-form-field style=\"width: 100px;\" *ngIf=\"selectedAPA == i\">\n                <input matInput [matDatepicker]=\"dtAddressed\" formControlName=\"dateAddressed\" style=\"color: black\">\n                <mat-datepicker-toggle matSuffix [for]=\"dtAddressed\"></mat-datepicker-toggle>\n                <mat-datepicker touchUi #dtAddressed></mat-datepicker>\n              </mat-form-field>\n              <span *ngIf=\"selectedAPA != i\">{{apa.value.dateAddressed | date:'MM/dd/yyyy'}}</span>\n            </td>\n            <td>\n              <mat-form-field style=\"width: 90px;\" *ngIf=\"selectedAPA == i\">\n                <input type=\"number\" formControlName=\"progress\" matInput/>\n              </mat-form-field>\n              <span *ngIf=\"selectedAPA != i\">{{apa.value.progress}}</span>\n            </td>\n            <td>\n              <mat-form-field style=\"height: 53px;\" *ngIf=\"selectedAPA == i\">\n                <textarea matInput\n                          formControlName=\"whatWasDone\"\n                          cdkTextareaAutosize\n                          #autosize=\"cdkTextareaAutosize\"\n                          cdkAutosizeMinRows=\"1\"\n                          cdkAutosizeMaxRows=\"5\"></textarea>\n              </mat-form-field>\n              <span *ngIf=\"selectedAPA != i\">{{apa.value.whatWasDone}}</span>\n            </td>\n            <td>\n              <mat-form-field style=\"height: 53px;\" *ngIf=\"selectedAPA == i\">\n                <textarea matInput\n                          formControlName=\"whatWasNotDone\"\n                          cdkTextareaAutosize\n                          #autosize=\"cdkTextareaAutosize\"\n                          cdkAutosizeMinRows=\"1\"\n                          cdkAutosizeMaxRows=\"5\"></textarea>\n              </mat-form-field>\n              <span *ngIf=\"selectedAPA != i\">{{apa.value.whatWasNotDone}}</span>\n            </td>\n            <td>\n              <mat-form-field style=\"height: 53px;\" *ngIf=\"selectedAPA == i\">\n                <textarea matInput\n                          formControlName=\"ReasonForNonAccomplish\"\n                          cdkTextareaAutosize\n                          #autosize=\"cdkTextareaAutosize\"\n                          cdkAutosizeMinRows=\"1\"\n                          cdkAutosizeMaxRows=\"5\"></textarea>\n              </mat-form-field>\n              <span *ngIf=\"selectedAPA != i\">{{apa.value.ReasonForNonAccomplish}}</span>\n            </td>\n            <td>\n              <mat-form-field style=\"height: 53px;\" *ngIf=\"selectedAPA == i\">\n                <textarea matInput\n                          formControlName=\"catchUpActivities\"\n                          cdkTextareaAutosize\n                          #autosize=\"cdkTextareaAutosize\"\n                          cdkAutosizeMinRows=\"1\"\n                          cdkAutosizeMaxRows=\"5\"></textarea>\n              </mat-form-field>\n              <span *ngIf=\"selectedAPA != i\">{{apa.value.catchUpActivities}}</span>\n            </td>\n          </tr>\n        </table>\n      </nb-card-body>\n    </nb-card>\n  </nb-card>\n</form>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WorkplaceApplicationPlanEntryComponent } from 'app/pages/learning_and_development/workplace-application-plan/workplace-application-plan-entry/workplace-application-plan-entry.component';\nimport { UnderConstructionComponent } from 'app/pages/miscellaneous/under-construction/under-construction.component';\nimport { WorkPerformanceEvaluatonListComponent } from './work-performance-evaluaton-list/work-performance-evaluaton-list.component';\n\nconst routes: Routes = [\n  {\n    path:'list',\n    component:UnderConstructionComponent\n  },\n  {\n    path:':id',\n    component:WorkplaceApplicationPlanEntryComponent,\n    pathMatch:'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WorkPerformanceEvaluationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WorkPerformanceEvaluationRoutingModule } from './work-performance-evaluation-routing.module';\nimport { WorkPerformanceEvaluatonListComponent } from './work-performance-evaluaton-list/work-performance-evaluaton-list.component';\nimport { WorkPerformanceEvaluatonEntryComponent } from './work-performance-evaluaton-entry/work-performance-evaluaton-entry.component';\n\n\n@NgModule({\n  declarations: [WorkPerformanceEvaluatonListComponent, WorkPerformanceEvaluatonEntryComponent],\n  imports: [\n    CommonModule,\n    WorkPerformanceEvaluationRoutingModule\n  ]\n})\nexport class WorkPerformanceEvaluationModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-work-performance-evaluaton-entry',\n  templateUrl: './work-performance-evaluaton-entry.component.html',\n  styleUrls: ['./work-performance-evaluaton-entry.component.scss']\n})\nexport class WorkPerformanceEvaluatonEntryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>work-performance-evaluaton-entry works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-work-performance-evaluaton-list',\n  templateUrl: './work-performance-evaluaton-list.component.html',\n  styleUrls: ['./work-performance-evaluaton-list.component.scss']\n})\nexport class WorkPerformanceEvaluatonListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>work-performance-evaluaton-list works!</p>\n"]}