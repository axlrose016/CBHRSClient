{"version":3,"sources":["webpack:///src/app/pages/performance/complaints-center/complaints-center-routing.module.ts","webpack:///src/app/pages/performance/complaints-center/complaints-center.module.ts","webpack:///src/app/pages/performance/complaints-center/complaints-entry/complaints-entry.component.ts","webpack:///src/app/pages/performance/complaints-center/complaints-entry/complaints-entry.component.html","webpack:///src/app/pages/performance/complaints-center/complaints-list/complaints-list.component.ts","webpack:///src/app/pages/performance/complaints-center/complaints-list/complaints-list.component.html"],"names":["routes","path","component","pathMatch","ComplaintsCenterRoutingModule","forChild","imports","exports","ComplaintsCenterModule","declarations","ComplaintsEntryComponent","dialogserve","frmglobaldataserve","router","route","fb","curRecordId","showLoadingProgressBar$","getShowLoadingSpinner","setLoadingProgressBar","initData","snapshot","params","getComplaint","buildComplaintDetail","selectedPDS$","selectedPerson","ComplaintForm","controls","patchValue","personId","firstName","lastName","selectedPDSOther$","reset","getRecord","subscribe","data","complaintDetail","group","complaintId","raw","officeId","typeOfComplaint","grievanceDetails","complaineeId","emailAddressComplainant","emailAddressSupervisor","complaintName","complaineeName","btnclick","valid","saveRecord","openConfirmation","afterClosed","result","localStorage","getItem","formatDate","Date","deleteRecord","openFormDialog","updateRecord","value","response","console","log","navigateByUrl","then","x","openSnackBar","error","JSON","stringify","eventHandler","selector","templateUrl","styleUrls","ComplaintsListComponent","dialog","baseUrl","apiUrl","displayedColumns","gridDataSource","complaintList","refreshTheList","btnevent","id","event","filterValue","target","filter","trim","toLocaleLowerCase","urlstr","loadList","res","mp","paginator","applyFilter","matPaginator"],"mappings":"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","file":"complaints-center-complaints-center-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ComplaintsEntryComponent } from './complaints-entry/complaints-entry.component';\nimport { ComplaintsListComponent } from './complaints-list/complaints-list.component';\n\nconst routes: Routes = [\n  {\n    path:'list',\n    component:ComplaintsListComponent\n  },\n  {\n    path:':id',\n    component:ComplaintsEntryComponent,\n    pathMatch:'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComplaintsCenterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComplaintsCenterRoutingModule } from './complaints-center-routing.module';\nimport { ComplaintsListComponent } from './complaints-list/complaints-list.component';\nimport { ComplaintsEntryComponent } from './complaints-entry/complaints-entry.component';\nimport { SharedComponentModule } from 'app/shared/component/shared-component.module';\nimport { SharedMaterialModule } from 'app/shared/shared-material/shared-material.module';\n\n\n@NgModule({\n  declarations: [ComplaintsListComponent, ComplaintsEntryComponent],\n  imports: [\n    CommonModule,\n    ComplaintsCenterRoutingModule,\n    SharedComponentModule,\n    SharedMaterialModule\n  ]\n})\nexport class ComplaintsCenterModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ComplaintDetail } from 'app/shared/model/performance.model';\nimport { PersonPDSDetail } from 'app/shared/model/PersonPDS.model';\nimport { DialogService } from 'app/shared/service/dialog.service';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-complaints-entry',\n  templateUrl: './complaints-entry.component.html',\n  styleUrls: ['./complaints-entry.component.scss']\n})\nexport class ComplaintsEntryComponent implements OnInit {\n  public ComplaintForm: FormGroup;\n  public showLoadingProgressBar$: Observable<boolean>;\n  public curRecordId: string = null;\n  complaintDetail: ComplaintDetail;\n  pdsDetail: PersonPDSDetail;\n  constructor(\n    private dialogserve: DialogService,\n    private frmglobaldataserve: FormGlobalDataService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.initData();\n    this.frmglobaldataserve.setLoadingProgressBar(false);\n  }\n\n  initData(){\n    this.curRecordId = this.route.snapshot.params['id'];\n    if(this.curRecordId != \"0\"){\n      this.getComplaint();\n    }else{\n      this.buildComplaintDetail();\n    }\n  }\n\n  ngDoCheck(){\n    debugger;\n    if(this.dialogserve.selectedPDS$ != null){\n      var selectedPerson = <PersonPDSDetail>this.dialogserve.selectedPDS$;\n      this.ComplaintForm.controls['personId'].patchValue(selectedPerson.personId);\n      this.ComplaintForm.controls['complaintName'].patchValue(selectedPerson.firstName + \" \" + selectedPerson.lastName);\n    }\n    if(this.dialogserve.selectedPDSOther$ != null){\n      var selectedPerson = <PersonPDSDetail>this.dialogserve.selectedPDSOther$;\n      this.ComplaintForm.controls['complaineeId'].patchValue(selectedPerson.personId);\n      this.ComplaintForm.controls['complaineeName'].patchValue(selectedPerson.firstName + \" \" + selectedPerson.lastName);\n    }\n  }\n\n  ngOnDestroy(){\n    this.ComplaintForm.reset();\n    this.dialogserve.selectedPDS$ = null;\n    this.dialogserve.selectedPDSOther$ = null;\n  }\n\n  getComplaint(){\n    this.frmglobaldataserve.getRecord(\"PerformanceMgnt/GetComplaintDetail/\"+this.curRecordId)\n      .subscribe((data: ComplaintDetail) =>{\n        this.complaintDetail = data;\n        this.buildComplaintDetail(this.complaintDetail);\n      });\n  }\n\n  buildComplaintDetail(complaintDetail?: ComplaintDetail){\n    this.ComplaintForm = this.fb.group({\n      complaintId:[complaintDetail? complaintDetail.complaintId: Guid.raw],\n      officeId:[complaintDetail? complaintDetail.officeId:null],\n      personId:[complaintDetail? complaintDetail.personId: null],\n      typeOfComplaint:[complaintDetail? complaintDetail.typeOfComplaint:null],\n      grievanceDetails:[complaintDetail? complaintDetail.grievanceDetails:''],\n      complaineeId:[complaintDetail? complaintDetail.complaineeId:null],\n      emailAddressComplainant:[complaintDetail? complaintDetail.emailAddressComplainant:''],\n      emailAddressSupervisor:[complaintDetail? complaintDetail.emailAddressSupervisor:''],\n      complaintName:[complaintDetail? complaintDetail.complaintName:''],\n      complaineeName:[complaintDetail? complaintDetail.complaineeName:'']\n    })\n  }\n\n  // buildPDSDetail(pdsDetail?: PersonPDSDetail){\n  //   this.personDetailForm = this.fb.group({\n  //     firstName:[pdsDetail? pdsDetail.firstName:''],\n  //     middleName:[pdsDetail? pdsDetail.middleName:''],\n  //     lastName:[pdsDetail? pdsDetail.lastName:'']\n  //   })\n  // }\n\n  // buildComplaineeDetail(complaineeDetail?: PersonPDSDetail){\n  //   this.complaineeForm = this.fb.group({\n  //     firstName:[complaineeDetail? complaineeDetail.firstName:''],\n  //     middleName:[complaineeDetail? complaineeDetail.middleName:''],\n  //     lastName:[complaineeDetail? complaineeDetail.lastName:'']\n  //   })\n  // }\n\n  eventHandler(btnclick:string){\n    if(btnclick == \"Save\"){\n      if(this.ComplaintForm.valid)\n        this.saveRecord();\n    }else if(btnclick == \"Delete\")\n      this.dialogserve.openConfirmation(\"Are you sure you want to delete this record?\")\n        .afterClosed().subscribe(result => {\n          if(result == true){\n            this.ComplaintForm.patchValue({'is_deleted':true,'deleted_by':localStorage.getItem('secN'),'deleted_date':this.frmglobaldataserve.formatDate(new Date())});\n            this.deleteRecord();\n          }\n        })\n  }\n\n  openParticipantDialog(){\n    this.dialogserve.openFormDialog('PersonProfile');\n  }\n\n  openComplaineeDialog(){\n    this.dialogserve.openFormDialog('PersonProfile',true);\n  }\n\n  saveRecord(){\n    this.frmglobaldataserve.updateRecord(this.ComplaintForm.value,\"PerformanceMgnt/PostComplaintDetail\")\n      .subscribe(\n        (response) =>\n        {\n          console.log(\"Record Saved Successfully: \"+response);\n          this.router.navigateByUrl(\"pages/performance/complaints-center/\"+response).then(x => {\n            this.initData(),\n            this.frmglobaldataserve.openSnackBar();\n          },(error) =>\n          {\n            console.log(\"Error Saving the record: \"+ JSON.stringify(this.ComplaintForm.value));\n          })\n        }\n      )\n  }\n\n  deleteRecord(){\n    this.frmglobaldataserve.updateRecord(this.ComplaintForm.value,\"PerformanceMgnt/PostComplaintDetail\")\n      .subscribe(\n        (response) => {\n          console.log(\"Record Deleted Successfully: \" + response);\n          this.router.navigateByUrl(\"pages/performance/complaints-center/list\");\n        },(error) => {\n          console.log(\"Error Deleting the Record: \"+ JSON.stringify(this.ComplaintForm.value));\n        }\n      )\n  }\n\n}\n","<axl-app-crud (appcrudbtnclick)=\"eventHandler($event)\"></axl-app-crud>\n<div class=\"container\">\n    <form [formGroup]=\"ComplaintForm\" *ngIf=\"this.ComplaintForm\">\n    <nb-card>\n        <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n        <nb-card-header>\n            Complaint Form\n        </nb-card-header>\n        <nb-card-body>\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <div class=\"form-group\">\n                        <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\n                            <mat-label>Select your office</mat-label>\n                            <select formControlName=\"officeId\" matNativeControl required>\n                              <option [ngValue]=1>Administration and Financial Management Team (AFMT)</option>  \n                              <option [ngValue]=2>Field Implementation and Coordination Team ( NCR and Luzon)</option> \n                              <option [ngValue]=3>Health Policy and Systems Development Team</option> \n                              <option [ngValue]=4>Procurement and Supply Chain Management Team</option> \n                              <option [ngValue]=5>Health Regulation Team</option> \n                              <option [ngValue]=6>Health Facilities and Infrastructure Development Team</option> \n                              <option [ngValue]=7>Field Implementation and Coordination Team (Visayas and Mindanao)</option> \n                              <option [ngValue]=8>Field Implementation and Coordination Team ( NCR and North Luzon)</option> \n                              <option [ngValue]=9>Health Emergency Management Bureau</option> \n                              <option [ngValue]=10>Internal Audit Service</option> \n                              <option [ngValue]=11>Legal Service (LS)</option> \n                              <option [ngValue]=12>Bureau of International Health Cooperation (BIHC)</option> \n                              <option [ngValue]=13>Bureau of Local Health Systems Development</option> \n                              <option [ngValue]=14>Health Policy Development and Planning Bureau (HPDPB)</option> \n                              <option [ngValue]=15>Health Human Resource Development Bureau (HHRDB)</option> \n                              <option [ngValue]=16>Disease Prevention and Control Bureau (DPCB)</option> \n                              <option [ngValue]=17>Health Promotion Bureau</option> \n                              <option [ngValue]=18>Epidemiology Bureau</option> \n                              <option [ngValue]=19>Health Facilities Enhancement Program Management Office</option> \n                              <option [ngValue]=20>Health Facility Development Bureau</option> \n                              <option [ngValue]=21>Knowledge Management and Information Technology Service</option> \n                              <option [ngValue]=21>Bureau of Quarantine</option> \n                              <option [ngValue]=22>Supply Chain Management Service</option> \n                              <option [ngValue]=23>Procurement Service</option> \n                              <option [ngValue]=24>Financial and Management Service</option> \n                              <option [ngValue]=25>Administrative Service</option> \n                              <option [ngValue]=26>Malasakit Program Office</option> \n                              <option [ngValue]=27>Pharmaceutical Division</option> \n                              <option [ngValue]=28>Health Facilities and Services Regulatory Bureau (HFSRB)</option> \n                              <option [ngValue]=29>Bureau of Quarantine (BOQ)</option> \n                            </select>\n                          </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"col-sm-12\">\n                    <nb-card>\n                        <nb-card-header>\n                            Complainant Information\n                            <button (click)=\"openParticipantDialog();\" nbButton status=\"success\" style=\"float: right;\"><nb-icon icon=\"search-outline\"></nb-icon>Search Complainant</button>\n                        </nb-card-header>\n                        <nb-card-body>\n                            <div class=\"row\">\n                                <div class=\"col-sm-4\">\n                                    <div class=\"form-group\">\n                                        <input formControlName=\"complaintName\" type=\"text\" nbInput fullWidth placeholder=\"Full Name\">\n                                    </div>\n                                </div>\n                            </div>  \n                        </nb-card-body>\n                    </nb-card>\n                </div>\n                <div class=\"col-sm-12\">\n                    <div class=\"form-group\">\n                        <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\n                            <mat-label>Select your office</mat-label>\n                            <select formControlName=\"typeOfComplaint\" matNativeControl required>\n                                <option [ngValue]=1>Lack of Communication</option>\n                                <option [ngValue]=2>Ambiguously-Defined Employee Roles</option>\n                                <option [ngValue]=3>Bosses Playing Favorites</option>\n                                <option [ngValue]=4>Bullying and Hostile Work Environments</option>\n                                <option [ngValue]=5>Not Having Time for Employees</option>\n                                <option [ngValue]=6>Employees complaining About the Supervisor: Taking Credit for Other’s Ideas</option>\n                                <option [ngValue]=7>Work/Life Balance Concerns</option>\n                                <option [ngValue]=8>Unrealistic expectations regarding work</option>\n                                <option [ngValue]=9>Cultivating Any Type of Hostile Work Environment</option>\n                                <option [ngValue]=10>Micromanagement</option>\n                                <option [ngValue]=11>No Opportunity for Advancement</option>\n                                <option [ngValue]=12>Excessive demands that are impossible to meet</option>\n                                <option [ngValue]=13>Demeaning demands far below the employee’s capability</option>\n                                <option [ngValue]=14>Intrusion into the employee’s personal life</option>\n                                <option [ngValue]=15>Interpersonal Challenges</option>\n                                <option [ngValue]=16>Physical assaults of a sexual nature</option>\n                                <option [ngValue]=17>Unwelcome sexual advances, propositions, or other sexual comments</option>\n                                <option [ngValue]=18>Sharing sexual photos (pornography)</option>\n                                <option [ngValue]=19>Posting sexual posters</option>\n                                <option [ngValue]=20>Sexual comments, jokes, questions</option>\n                                <option [ngValue]=21>Inappropriate sexual touching</option>\n                                <option [ngValue]=22>Inappropriate sexual gestures</option>\n                                <option [ngValue]=23>Invading personal space in a sexual way</option>\n                                <option [ngValue]=24>Quid pro quo sexual harassment</option>\n                                <option [ngValue]=25>Preferential treatment or promises of preferential treatment to an employee for submitting to sexual conduct</option>\n                                <option [ngValue]=26>Exposing an employee to unwanted sexual attention or activity, or making their employees more difficult due to their sex.</option>\n                                <option [ngValue]=27>Sexual or discriminatory displays or publications anywhere in the workplace.</option>\n                                <option [ngValue]=28>Retaliation for sexual harassment complaints.</option>\n                                <option [ngValue]=29>Racial slurs</option>\n                                <option [ngValue]=30>Racial insults</option>\n                                <option [ngValue]=31>Racial jokes</option>\n                                <option [ngValue]=32>Degrading comments</option>\n                                <option [ngValue]=33>Disgust</option>\n                                <option [ngValue]=34>Intolerance of differences</option>\n                                <option [ngValue]=35>Gender Harassment</option>\n                                <option [ngValue]=36>Third-party harassment</option>\n                                <option [ngValue]=37>Verbal harassment</option>\n                                <option [ngValue]=38>Intolerance toward religious holidays</option>\n                                <option [ngValue]=39>Intolerance toward religious traditions</option>\n                                <option [ngValue]=40>Intolerance toward religious customs</option>\n                                <option [ngValue]=41>Cruel religious jokes</option>\n                                <option [ngValue]=42>Degrading stereotypical comments</option>\n                                <option [ngValue]=43>Pressures to convert religions</option>\n                                <option [ngValue]=44>Teased and insulted</option>\n                                <option [ngValue]=45>Left out of activities or meetings</option>\n                                <option [ngValue]=46>Unfairly criticized</option>\n                                <option [ngValue]=47>Disability-Based Harassment</option>\n                                <option [ngValue]=48>Sexual Orientation-Based Harassment</option>\n                                <option [ngValue]=49>Age-Based Harassment</option>\n                                <option [ngValue]=50>Inappropriate comments</option>\n                                <option [ngValue]=51>Offensive jokes</option>\n                                <option [ngValue]=52>Personal humiliation</option>\n                                <option [ngValue]=53>Critical remarks</option>\n                                <option [ngValue]=54>Ostracizing behaviors</option>\n                                <option [ngValue]=55>Intimidation tactics</option>\n                                <option [ngValue]=56>Direct threats of intent to inflict harm</option>\n                                <option [ngValue]=57>Physical attacks (hitting, shoving, kicking)</option>\n                                <option [ngValue]=58>Threatening behavior (shaking fists angrily)</option>\n                                <option [ngValue]=59>Destroying property to intimidate</option>\n                                <option [ngValue]=60>Isolating or denying the victim’s presence</option>\n                                <option [ngValue]=61>Belittling or trivializing the victim’s thoughts</option>\n                                <option [ngValue]=62>Discrediting or spreading rumors about the victim</option>\n                                <option [ngValue]=63>Opposing or challenging everything the victim says</option>\n                                <option [ngValue]=64>Share humiliating things about the victim by mass email or mass chat</option>\n                                <option [ngValue]=65>Spread lies or gossip about the victim on social media</option>\n                                <option [ngValue]=66>Send harassing instant messages or text messages directly to the victim</option>\n                                <option [ngValue]=67>Cyberbullying</option>\n                                <option [ngValue]=68>Retaliation harassment/ like someone else to get revenge and to prevent the victim from behaving in such a way again</option>\n                            </select>\n                          </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"col-sm-12\">\n                    <nb-card>\n                        <nb-card-header>\n                            Complainee Information\n                            <button (click)=\"openComplaineeDialog();\" nbButton status=\"success\" style=\"float: right;\"><nb-icon icon=\"search-outline\"></nb-icon>Search Complainee</button>\n                        </nb-card-header>\n                        <nb-card-body>\n                            <div class=\"row\">\n                                <div class=\"col-sm-4\">\n                                    <div class=\"form-group\">\n                                        <input formControlName=\"complaineeName\" type=\"text\" nbInput fullWidth placeholder=\"Full Name\">\n                                    </div>\n                                </div>\n                            </div>  \n                        </nb-card-body>\n                    </nb-card>\n                </div>\n                <div class=\"col-sm-12\">\n                    <div class=\"form-group\">\n                        Provide Email Address (complainant)\n                        <input placeholder=\"...\" type=\"text\" nbInput fullWidth formControlName=\"emailAddressComplainant\">\n                    </div>\n                </div>\n                <div class=\"col-sm-12\">\n                    <div class=\"form-group\">\n                        Provide Email Address of your supervisor or any with higher position from your office\n                        <input placeholder=\"...\" type=\"text\" nbInput fullWidth formControlName=\"emailAddressSupervisor\">\n                    </div>\n                </div>\n                <div class=\"col-sm-12\">\n                    <div class=\"form-group\">\n                        <span><p>\n                            Take Note:<br>\n                            Before you file your complaint:<br>\n                            You know who the person is to address your complaint to.<br>\n                            You know the form that your complaint should take?<br>\n                            You are aware of what you want to accomplish.<br>\n                            <br>\n                            The complaint in writing:<br>\n                            <br>\n                            You have stated your purpose clearly.<br>\n                            The reason you are making the complaint is obvious.<br>\n                            You have demonstrated the importance.<br>\n                            You have requested what you would like to see happen.<br>\n                            You have asked for a timely reply.<br>\n                            Your complaint is short and to the point.<br>\n                            You were polite.<br>\n                            You refrained from criticism and personal attacks.<br>\n                            You demonstrated that you have support.<br>\n                            You have determined the appropriateness of humor.<br>\n                            You are prepared to raise the stakes if necessary.<br>\n                            You have a copy of the complaint.<br>\n                        </p></span>\n                    </div>\n                </div>\n            </div>  \n        </nb-card-body>\n    </nb-card>\n    </form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { ComplaintList } from 'app/shared/model/performance.model';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { environment } from 'environments/environment';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-complaints-list',\n  templateUrl: './complaints-list.component.html',\n  styleUrls: ['./complaints-list.component.scss']\n})\nexport class ComplaintsListComponent implements OnInit {\n  public baseUrl = environment.apiUrl+\"PerformanceMgnt/\";\n  public showLoadingProgressBar$: Observable<boolean>;\n  private paginator: MatPaginator;\n  displayedColumns: string[] = ['complaintId','officeId','complaintName','typeOfComplaint']\n  @ViewChild(MatPaginator,{static:true}) set matPaginator(mp:MatPaginator){\n    this.paginator = mp;\n    this.gridDataSource\n  }\n  gridDataSource = new MatTableDataSource();\n  complaintList: ComplaintList[] = [];\n  constructor(\n    private router:Router,\n    private frmglobaldataserve: FormGlobalDataService,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.refreshTheList();\n  }\n\n  eventHandler(btnevent:string){\n    if(btnevent == \"Refresh\"){\n      this.refreshTheList();\n    }else if(btnevent == \"Add\"){\n      this.router.navigateByUrl(\"pages/performance/complaints-center/\"+0);\n    }\n  }\n  \n  onUserRowSelect(id:Guid):void{\n    this.router.navigateByUrl(\"pages/performance/complaints-center/\"+id);\n  }\n\n  applyFilter(event: Event){\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.gridDataSource.filter = filterValue.trim().toLocaleLowerCase();\n  }\n\n  refreshTheList()\n  {\n    var urlstr = this.baseUrl+'GetComplaintList/';\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.frmglobaldataserve.loadList(urlstr)\n      .subscribe((res: ComplaintList[]) => {\n        this.complaintList = res;\n        this.gridDataSource.data = res;\n        this.frmglobaldataserve.setLoadingProgressBar(false);\n      },\n      () => {})\n  }\n}\n","<axl-app-list  (applistbtnclick)='eventHandler($event)'></axl-app-list>\n<div class=\"container\">\n    <nb-card>\n        <nb-card-header>\n            Complaints Center\n        </nb-card-header>\n        <mat-tab-group>\n            <mat-tab label=\"List\">\n                <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n                    <nb-card>\n                        <nb-card-body>\n                            <mat-form-field appearance=\"standard\" style=\"float:right; width: 100%;\">\n                                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search..\" #input>\n                                <mat-icon matSuffix>search</mat-icon>\n                              </mat-form-field>\n\n                            <table mat-table #table class=\"mat-elevation-z8\" [dataSource]=\"gridDataSource\" matSort>\n                                <ng-container matColumnDef=\"complaintId\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Complaint ID </th>\n                                    <td mat-cell *matCellDef=\"let erow\" > {{erow.complaintId}} </td>\n                                </ng-container>  \n\n                                <ng-container matColumnDef=\"officeId\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Office ID </th>\n                                    <td mat-cell *matCellDef=\"let erow\" > {{erow.officeId}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"complaintName\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Complaint Name </th>\n                                    <td mat-cell *matCellDef=\"let erow\" > {{erow.complaintName}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"typeOfComplaint\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Type of Complaint </th>\n                                    <td mat-cell *matCellDef=\"let erow\" > {{erow.typeOfComplaint}} </td>\n                                </ng-container>\n                \n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onUserRowSelect(row.complaintId)\"></tr>\n                            </table>\n                            <mat-paginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n                        </nb-card-body>\n                    </nb-card>\n            </mat-tab>\n        </mat-tab-group>\n    </nb-card>\n</div>"]}