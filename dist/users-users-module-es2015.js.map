{"version":3,"sources":["./src/app/pages/setting/users/user-entry/user-entry.component.ts","./src/app/pages/setting/users/user-entry/user-entry.component.html","./src/app/pages/setting/users/user-list/user-list.component.ts","./src/app/pages/setting/users/user-list/user-list.component.html","./src/app/pages/setting/users/users-routing.module.ts","./src/app/pages/setting/users/users.module.ts"],"names":[],"mappings":"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","file":"users-users-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { lib_user_level } from 'app/shared/model/library.model';\nimport { UserDetails } from 'app/shared/model/user.model';\nimport { DialogService } from 'app/shared/service/dialog.service';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-user-entry',\n  templateUrl: './user-entry.component.html',\n  styleUrls: ['./user-entry.component.scss']\n})\nexport class UserEntryComponent implements OnInit {\n  public showLoadingProgressBar$: Observable<boolean>;\n  public curRecordId: number = 0;\n  userDetail: UserDetails;\n  public UserForm: FormGroup;\n\n  public lib_user_levels: lib_user_level[];\n  constructor(\n    private router:Router,\n    private frmglobaldataserve: FormGlobalDataService,\n    private fb: FormBuilder,\n    private dialogserve: DialogService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.initData();\n    this.frmglobaldataserve.setLoadingProgressBar(false);\n  }\n\n  initData(){\n    this.getUserLevels();\n    this.curRecordId = this.route.snapshot.params['id'];\n    if(this.curRecordId != 0){\n      this.getUser();\n    }else{\n      this.buildUserDetail();\n    }\n  }\n\n  getUser(){\n    this.frmglobaldataserve.getRecord(\"User/GetUser/\"+this.curRecordId)\n      .subscribe((data: UserDetails) => {\n        this.userDetail = data;\n        this.buildUserDetail(this.userDetail);\n      })\n  }\n\n  getUserLevels(){\n    ;\n    this.frmglobaldataserve.getRecord(\"Library/GetAllUserLevel\")\n      .subscribe((data: lib_user_level[]) => {\n        this.lib_user_levels = data;\n      });\n  }\n\n  buildUserDetail(userDetail?: UserDetails){\n    this.UserForm = this.fb.group({\n      userId:[userDetail? userDetail.userId:0],\n      userName:[userDetail? userDetail.userName:''],\n      user_level:[userDetail? userDetail.user_level:null],\n      salt:[userDetail? userDetail.salt:''],\n      hash_code:[userDetail? userDetail.hash_code:''],\n      deleted_by:[userDetail? userDetail.deleted_by:''],\n      deleted_date:[userDetail? userDetail.deleted_date: null],\n      is_deleted:[userDetail? userDetail.is_deleted: null]\n    });\n  }\n\n  eventHandler(btnclick:string){\n    if(btnclick == \"Save\"){\n      if(this.UserForm.valid) \n        this.saveRecord();\n    }else if(btnclick == \"Delete\"){\n      this.dialogserve.openConfirmation(\"Are you sure you want to delete this record?\")\n        .afterClosed().subscribe(result => {\n          if(result == true){\n            this.UserForm.patchValue({'is_deleted':true,'deleted_by':'Axl','deleted_date':this.formatDate(new Date())});\n            this.deleteRecord();\n          }\n        });\n    }\n  }\n\n  deleteRecord(){\n    this.frmglobaldataserve.updateRecord(this.UserForm.value,\"User/PostUser\")\n      .subscribe(\n        (response) => {\n          console.log(\"Record Deleted Successfully: \" + response);\n          this.router.navigateByUrl(\"pages/settings/users/list\");\n        },(error) => {\n          console.log(\"Error Deleting the Record: \" +JSON.stringify(this.UserForm.value));\n        }\n      )\n  }\n\n  saveRecord(){\n    this.frmglobaldataserve.updateRecord(this.UserForm.value,\"User/PostUser\")\n      .subscribe(\n          (response) => {\n            ;\n            this.router.navigateByUrl(\"pages/settings/users/\"+response).then(x => {\n              this.initData(),\n              this.frmglobaldataserve.openSnackBar();\n            },(error) =>{\n              console.log(\"Error saving the Record: \"+ JSON.stringify(this.UserForm.value));\n            })\n          }\n      );\n  }\n\n  private formatDate(date) {\n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  }\n}\n","<axl-app-crud (appcrudbtnclick)=\"eventHandler($event)\"></axl-app-crud>\n<div class=\"container\">\n    <form [formGroup]=\"UserForm\" *ngIf=\"this.UserForm\">\n        <nb-card>\n            <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n            <nb-card-header>\n              User Form\n            </nb-card-header>\n        </nb-card>\n        <nb-card>\n            <nb-card-body>\n                <div class=\"row\">\n                    <div class=\"col-sm-6\">\n                        <div class=\"form-group\">\n                            <input formControlName=\"userId\" type=\"text\" nbInput fullWidth placeholder=\"User ID\">\n                            <input formControlName=\"userName\" type=\"text\" nbInput fullWidth placeholder=\"User Name\">\n                            <nb-select formControlName=\"user_level\" fullWidth placeholder=\"User Level\" [(selected)]=\"selectedUserLevel\">\n                                <nb-option *ngFor=\"let user_lvl of lib_user_levels; let i = index\" [value]=\"user_lvl.userLevelId\">\n                                    {{user_lvl.description}}\n                                </nb-option>\n                            </nb-select>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n        </nb-card>\n    </form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { UserList } from 'app/shared/model/user.model';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { environment } from 'environments/environment';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n  public baseUrl = environment.apiUrl+\"User/\";\n  public showLoadingProgressBar$: Observable<boolean>;\n  private paginator: MatPaginator;\n  displayedColumns: string[] = ['userId','userName','user_level'];\n  @ViewChild(MatPaginator, {static:true}) set matPaginator(mp:MatPaginator)\n  {\n    this.paginator = mp;\n    this.gridDataSource.paginator = this.paginator;\n  }\n  gridDataSource = new MatTableDataSource();\n  userList:UserList[]=[];\n  constructor(\n    private router: Router,\n    private frmglobaldataserve: FormGlobalDataService,\n    public dialog:MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.refreshTheList();\n  }\n\n  refreshTheList(){\n    var urlstr = this.baseUrl+'GetAllUserList_vw/';\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.frmglobaldataserve.loadList(urlstr)\n      .subscribe((res: UserList[]) => {\n        this.userList = res;\n        this.gridDataSource.data = res;\n        this.frmglobaldataserve.setLoadingProgressBar(false);\n      },\n      () => {})\n  }\n  \n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.gridDataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  eventHandler(btnevent:string){\n    if(btnevent == \"Refresh\"){\n      this.refreshTheList();\n    }\n    else if(btnevent == \"Add\"){\n      this.router.navigateByUrl(\"pages/settings/users/\"+0);\n    }\n  }\n\n  onUserRowSelect(id: Guid):void{\n    this.router.navigateByUrl(\"pages/settings/users/\"+id);\n  }\n\n  exportTableList(){\n    var fileName = \"User_List_\"+Date.now+'.xlsx';\n    let dataToExport = this.userList\n      .map(x => ({\n        UserId: x.userId,\n        UserName: x.userName,\n        UserLevel: x.user_level\n      }));\n    this.frmglobaldataserve.exportToXlsx(dataToExport,'User_List',fileName);\n  }\n}\n","<axl-app-list  (applistbtnclick)='eventHandler($event)'></axl-app-list>\n<div class=\"container\">\n  <nb-card>\n    <nb-card-header>\n      Users\n    </nb-card-header>\n    <mat-tab-group>\n      <mat-tab label=\"List\">\n      <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n        <nb-card>\n          <nb-card-body>\n            <mat-form-field appearance=\"standard\" style=\"float:right; width: 100%;\">\n              <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search..\" #input>\n              <mat-icon matSuffix>search</mat-icon>\n            </mat-form-field>\n            <table mat-table #table class=\"mat-elevation-z8\" [dataSource]=\"gridDataSource\" matSort>\n                <ng-container matColumnDef=\"userId\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> User ID </th>\n                    <td mat-cell *matCellDef=\"let erow\" > {{erow.userId}} </td>\n                </ng-container>  \n                <ng-container matColumnDef=\"userName\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> User Name </th>\n                    <td mat-cell *matCellDef=\"let erow\" > {{erow.userName}} </td>\n                </ng-container>  \n                <ng-container matColumnDef=\"user_level\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 400px;\"> User Level </th>\n                    <td mat-cell *matCellDef=\"let erow\" > {{erow.user_level}} </td>\n                </ng-container>  \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onUserRowSelect(row.userId)\"></tr>\n            </table>    \n          </nb-card-body>\n        </nb-card>\n      </mat-tab>\n      <mat-tab label=\"Reports\">\n        <nb-card>\n          <nb-card-header>Master List</nb-card-header>\n          <nb-card-body>\n              <div class=\"row\">\n                  <div class=\"col-sx\">\n                      <a class=\"button button1\" (click)=\"exportTableList()\">Export   <i class=\"far fa-file-excel\"></i></a>\n                  </div>\n                  <div class=\"col-lg\">\n                      <span><p>Report Details: Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n                      Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\n                      </p></span> \n                  </div>\n              </div>\n          </nb-card-body>\n        </nb-card>\n      </mat-tab>\n    </mat-tab-group>\n  </nb-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserEntryComponent } from './user-entry/user-entry.component';\nimport { UserListComponent } from './user-list/user-list.component';\n\nconst routes: Routes = [\n  {\n    path:'list',\n    component:UserListComponent,\n  },\n  {\n    path:':id',\n    component:UserEntryComponent,\n    pathMatch:'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserEntryComponent } from './user-entry/user-entry.component';\nimport { SharedMaterialModule } from 'app/shared/shared-material/shared-material.module';\nimport { SharedComponentModule } from 'app/shared/component/shared-component.module';\n\n\n@NgModule({\n  declarations: [UserListComponent, UserEntryComponent],\n  imports: [\n    CommonModule,\n    UsersRoutingModule,\n    SharedComponentModule,\n    SharedMaterialModule\n  ]\n})\nexport class UsersModule { }\n"],"sourceRoot":"webpack:///"}