{"version":3,"sources":["./src/app/pages/setting/libraries/request-types/request-type-entry/request-type-entry.component.ts","./src/app/pages/setting/libraries/request-types/request-type-entry/request-type-entry.component.html","./src/app/pages/setting/libraries/request-types/request-type-list/request-type-list.component.ts","./src/app/pages/setting/libraries/request-types/request-type-list/request-type-list.component.html","./src/app/pages/setting/libraries/request-types/request-type-routing.module.ts","./src/app/pages/setting/libraries/request-types/request-type.module.ts"],"names":[],"mappings":"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","file":"request-types-request-type-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { lib_request_type } from 'app/shared/model/library.model';\nimport { DialogService } from 'app/shared/service/dialog.service';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { environment } from 'environments/environment';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-request-type-entry',\n  templateUrl: './request-type-entry.component.html',\n  styleUrls: ['./request-type-entry.component.scss']\n})\nexport class RequestTypeEntryComponent implements OnInit {\n  public RequestTypeForm: FormGroup;\n  public lib_request_types: lib_request_type[];\n  public showLoadingProgressBar$: Observable<boolean>;\n  public baseUrl = environment.apiUrl+\"Library/\";\n  public curRecordId: number = 0;\n  requestTypeDetail: lib_request_type;\n  constructor(\n    private fb: FormBuilder,\n    private frmglobaldataserve:FormGlobalDataService,\n    private dialogserve:DialogService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.initData();\n    this.frmglobaldataserve.setLoadingProgressBar(false);\n  }\n\n  initData(){\n    this.curRecordId = +this.route.snapshot.params['id'];\n    if(this.curRecordId != 0){\n      this.requestType();\n    }else{\n      this.buildRequestTypeDetail();\n    }\n  }\n\n  requestType(){\n    this.frmglobaldataserve.getRecord(\"Library/GetRequestType?id=\"+this.curRecordId)\n      .subscribe((data:lib_request_type) => {\n        this.requestTypeDetail = data;\n        ;\n        this.buildRequestTypeDetail(this.requestTypeDetail);\n      })\n  }\n\n  buildRequestTypeDetail(requestTypeDetail?: lib_request_type){\n    this.RequestTypeForm = this.fb.group({\n      requestTypeId:[requestTypeDetail?requestTypeDetail.requestTypeId:0],\n      description:[requestTypeDetail?requestTypeDetail.description:''],\n      is_active:[requestTypeDetail?requestTypeDetail.is_active:true]\n    });\n  }\n\n  eventHandler(btnclick:string){\n    if(btnclick == \"Save\"){\n      if(this.RequestTypeForm.valid)\n        this.saveRecord();\n    }else if(btnclick == \"Delete\"){\n      this.dialogserve.openConfirmation(\"Are you sure you want to delete this record?\")\n        .afterClosed().subscribe(result => {\n          if(result == true){\n            this.RequestTypeForm.patchValue({'is_deleted':true,'deleted_by':'Axl','deleted_date':this.formatDate(new Date())});\n            this.deleteRecord();\n          }\n        });\n    }\n  }\n\n  deleteRecord(){\n    this.frmglobaldataserve.updateRecord(this.RequestTypeForm.value,\"Library/PostRequestType\")\n      .subscribe(\n          (response) => {\n            console.log(\"Record Deleted Successfully: \"+ response);\n            this.router.navigateByUrl(\"pages/settings/libraries/request-types/list\");\n          },(error) => {\n            console.log(\"Error Deleting the Record: \"+JSON.stringify(this.RequestTypeForm.value));\n          }\n      )\n  }\n\n  saveRecord(){\n    this.frmglobaldataserve.updateRecord(this.RequestTypeForm.value,\"Library/PostRequestType\")\n      .subscribe(\n          (response) => {\n            this.router.navigateByUrl(\"pages/settings/libraries/request-types/\"+response).then(x => {\n              this.initData(),\n              this.frmglobaldataserve.openSnackBar();\n            },(error) =>{\n              console.log(\"Error saving the Record: \"+ JSON.stringify(this.RequestTypeForm.value));\n            })\n          }\n      );\n  }\n\n  private formatDate(date) {\n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  }\n}\n","<axl-app-crud (appcrudbtnclick)=\"eventHandler($event)\"></axl-app-crud>\n<div class=\"container\">\n    <form [formGroup]=\"RequestTypeForm\" *ngIf=\"this.RequestTypeForm\">\n        <nb-card>\n            <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n            <nb-card-header>\n              Request Type Form\n            </nb-card-header>\n        </nb-card>\n        <nb-card>\n            <nb-card-body>\n                <div class=\"row\">\n                    <div class=\"col-sm-10\">\n                        <div class=\"form-group\">\n                            <input formControlName=\"description\" type=\"text\" nbInput fullWidth placeholder=\"Description\">\n                        </div>\n                    </div>\n                    <div class=\"col-sm-2\">\n                        <div class=\"form-group\">\n                            <nb-checkbox style=\"float: right;\" status=\"basic\" formControlName=\"is_active\">Active</nb-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n        </nb-card>\n    </form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { lib_request_type } from 'app/shared/model/library.model';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { environment } from 'environments/environment';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-request-type-list',\n  templateUrl: './request-type-list.component.html',\n  styleUrls: ['./request-type-list.component.scss']\n})\nexport class RequestTypeListComponent implements OnInit {\n  public baseUrl = environment.apiUrl+\"Library/\";\n  public showLoadingProgressBar$: Observable<boolean>\n  private paginator: MatPaginator;\n  displayedColumns: string[] = ['requestTypeId','description','is_active'];\n  @ViewChild(MatPaginator, {static:true}) set matPaginator(mp:MatPaginator)\n  {\n    this.paginator = mp;\n    this.gridDataSource.paginator = this.paginator;\n  }\n  gridDataSource = new MatTableDataSource();\n  requestTypeList: lib_request_type[] = [];\n  constructor(\n    private router:Router,\n    private frmglobaldataserve: FormGlobalDataService,\n    private dialog:MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.refreshTheList();\n  }\n\n  refreshTheList(){\n    var urlstr = this.baseUrl+'GetAllRequestType/';\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.frmglobaldataserve.loadList(urlstr)\n      .subscribe((res: lib_request_type[]) => {\n        this.requestTypeList = res;\n        this.gridDataSource.data = res;\n        this.frmglobaldataserve.setLoadingProgressBar(false);\n      },\n      () => {})\n  }\n\n  eventHandler(btnevent:string){\n    if(btnevent == \"Refresh\")\n    {\n      console.log(\"Refresh\");\n      this.refreshTheList();\n    }\n    else if(btnevent == \"Add\"){\n      console.log(\"Add\");\n      this.router.navigateByUrl(\"pages/settings/libraries/request-types/\"+0);\n    }\n  }\n\n  onUserRowSelect(id :number):void{\n    this.router.navigateByUrl(\"pages/settings/libraries/request-types/\"+id);\n  }\n}\n","<axl-app-list  (applistbtnclick)='eventHandler($event)'></axl-app-list>\n<div class=\"container\">\n    <nb-card>\n        <nb-card-header>\n            Request Types\n        </nb-card-header>\n        <nb-card>\n            <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n        </nb-card>\n        <nb-card-body>\n            <table mat-table #table class=\"mat-elevation-z8\" [dataSource]=\"gridDataSource\" matSort>\n                <!-- Leave ID Column -->\n                <ng-container matColumnDef=\"requestTypeId\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Request Type ID </th>\n                <td mat-cell *matCellDef=\"let erow\" > {{erow.requestTypeId}} </td>\n                </ng-container>  \n                <!-- Employee Code Column -->\n                <ng-container matColumnDef=\"description\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Description </th>\n                <td mat-cell *matCellDef=\"let erow\" > {{erow.description}} </td>\n                </ng-container>\n                <!-- Leave Type Column -->\n                <ng-container matColumnDef=\"is_active\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Active </th>\n                <td mat-cell *matCellDef=\"let erow\">{{erow.is_active}}</td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onUserRowSelect(row.requestTypeId)\"></tr>\n            </table>  \n            <mat-paginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n        </nb-card-body>\n    </nb-card>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RequestTypeEntryComponent } from './request-type-entry/request-type-entry.component';\nimport { RequestTypeListComponent } from './request-type-list/request-type-list.component';\n\nconst routes: Routes = [\n  {\n    path:'list',\n    component:RequestTypeListComponent,\n  },\n  {\n    path:':id',\n    component:RequestTypeEntryComponent,\n    pathMatch:'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RequestTypeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RequestTypeRoutingModule } from './request-type-routing.module';\nimport { RequestTypeListComponent } from './request-type-list/request-type-list.component';\nimport { RequestTypeEntryComponent } from './request-type-entry/request-type-entry.component';\nimport { SharedComponentModule } from 'app/shared/component/shared-component.module';\nimport { SharedMaterialModule } from 'app/shared/shared-material/shared-material.module';\n\n\n@NgModule({\n  declarations: [RequestTypeListComponent, RequestTypeEntryComponent],\n  imports: [\n    CommonModule,\n    RequestTypeRoutingModule,\n    SharedComponentModule,\n    SharedMaterialModule\n  ]\n})\nexport class RequestTypeModule { }\n"],"sourceRoot":"webpack:///"}