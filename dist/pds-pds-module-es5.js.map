{"version":3,"sources":["webpack:///src/app/pages/forms/pds/pds-entry/pds-entry.component.ts","webpack:///src/app/pages/forms/pds/pds-entry/pds-entry.component.html","webpack:///src/app/pages/forms/pds/pds-list/pds-list.component.ts","webpack:///src/app/pages/forms/pds/pds-list/pds-list.component.html","webpack:///src/app/pages/forms/pds/pds-routing.module.ts","webpack:///src/app/pages/forms/pds/pds.module.ts"],"names":["PdsEntryComponent","gd","fb","frmglobaldataserve","dialogserve","route","router","libraryserve","selectedItem","curRecordId","baseUrl","apiUrl","personPDSDetail","personFamily","personTrainings","personEducations","personEligibilities","personWorkExperiences","user_level","userLevelId","currUserId","localStorage","getItem","showLoadingProgressBar$","getShowLoadingSpinner","setLoadingProgressBar","initData","lib_regions","JSON","parse","sessionStorage","snapshot","params","getPDS","buildPersonPDSDetail","target","newValue","getProvinceByRegion","getCityByProvince","getBrgyByCity","region","getRecord","subscribe","data","lib_provinces_filtered","province","lib_cities_filtered","city","lib_barangays_filtered","err","PDSForm","group","personId","raw","userId","firstName","middleName","lastName","extName","sex","birthDate","placeOfBirth","maritalStatus","citizenship","bloodType","height","weight","gsis","philHealth","sss","pagIbig","tin","region_code","prov_code","city_code","brgy_code","purok","zipCode","telNo","mobileNo","email","is_deleted","deleted_by","deleted_date","array","forEach","i","createTrainingFormGroup","createEducationFormGroup","createEligibilitiesFormGroup","createWorkExperiencesFormGroup","createFamilyFormGroup","isTriggered","personFamilyFG","personFamilyId","occupation","employer","businessAddress","relationship","selectedFamilyRecord","personFamilyFormArray","length","push","personTraining","personTrainingFG","personTrainingId","seminarTitle","dateFrom","dateTo","numHours","conductedBy","selectedTrainingRecord","personTrainingFormArray","personEducationFG","personEducationId","nameOfSchool","schoolLevelId","yearGraduated","startDate","endDate","degreeCourse","highestAttaind","scholarshipAwardHonor","selectedEducationRecord","personEducationFormArray","PersonEligibilityFG","personEligibilityId","eligibilityTitle","rating","dateOfExamination","placeOfExamination","licenseNumber","licensceReleaseDate","selectedEligibilityRecord","personEligibilityFormArray","PersonWorkExperienceFG","personWorkExperienceId","positionTitle","companyName","monthlySalary","salaryGrade","salaryStep","appointmentStatusId","isGovt","selectedWorkExpRecord","personWorkExperienceFormArray","btnclick","valid","saveRecord","openConfirmation","afterClosed","result","patchValue","formatDate","Date","x","findIndex","w","at","deleteRecord","updateRecord","value","response","console","log","navigateByUrl","then","setItem","openSnackBar","error","stringify","table","selectedIndex","date","d","month","getMonth","day","getDate","year","getFullYear","join","get","eventHandler","selector","templateUrl","styleUrls","providedIn","_familyExportTble","PdsListComponent","datePipe","dialog","displayedColumns","gridDataSource","personFamilyList","event","window","confirm","resolve","reject","id","refreshTheList","urlstr","loadList","res","btnevent","fileName","now","dataToExport","map","PersonId","FirstName","MiddleName","LastName","ExtName","Sex","BirthDate","PlaceOfBirth","MaritalStatus","citil_status","Citizenship","BloodType","blood_type","exportToXlsx","filterValue","filter","trim","toLowerCase","mp","paginator","applyFilter","exportTableList","matPaginator","routes","module","canActivate","path","component","pathMatch","PdsRoutingModule","forChild","imports","exports","PdsModule","declarations"],"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","file":"pds-pds-module-es5.js","sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { ThrowStmt } from '@angular/compiler';\nimport { ChangeDetectorRef, Component, ElementRef, Inject, Injectable, KeyValueDiffers, OnInit, ViewChild } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { lib_brgy, lib_city, lib_province, lib_region } from 'app/shared/model/library.model';\nimport { PersonEducation, PersonEligibility, PersonFamily, PersonPDSDetail, PersonTrainings, PersonWorkExperience } from 'app/shared/model/PersonPDS.model';\nimport { DialogService } from 'app/shared/service/dialog.service';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { GlobalVariablesService } from 'app/shared/service/globalVariables.service';\nimport { LibraryService } from 'app/shared/service/library.service';\nimport { environment } from 'environments/environment';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\nimport { findIndex } from 'rxjs/operators';\n@Component({\n  selector: 'ngx-pds-entry',\n  templateUrl: './pds-entry.component.html',\n  styleUrls: ['./pds-entry.component.scss']\n})\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PdsEntryComponent implements OnInit {\n  selectedItem = '';\n  deleteConfirm: boolean;\n  differ: any;\n  public PDSForm: FormGroup;\n  public curRecordId: string = null;\n  public selectedTrainingRecord: number;\n  public selectedFamilyRecord: number;\n  public selectedWorkExpRecord:number;\n  public selectedEducationRecord:number;\n  public selectedEligibilityRecord:number;\n  public currUserId:string;\n  public lib_regions: lib_region[];\n  public lib_provinces_filtered: lib_province[];\n  public lib_cities_filtered: lib_city[];\n  public lib_barangays_filtered: lib_brgy[];\n  public showLoadingProgressBar$: Observable<boolean>;\n  @ViewChild('familyExportTable') _familyExportTble: ElementRef;\n  public baseUrl = environment.apiUrl+\"Person/\";\n  personPDSDetail: PersonPDSDetail = {\n    personFamily:[],\n    personTrainings:[],\n    personEducations:[],\n    personEligibilities:[],\n    personWorkExperiences:[],\n  }\n\n  constructor(\n    private gd: GlobalVariablesService,\n    private fb: FormBuilder,\n    private frmglobaldataserve: FormGlobalDataService,\n    private dialogserve: DialogService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private libraryserve: LibraryService) {\n     }\n\n  ngOnInit(): void {\n    if(this.gd.user_level.userLevelId == 3){\n      this.currUserId = localStorage.getItem('secI')\n    }else{\n      this.currUserId = \"00000000-0000-0000-0000-000000000000\"\n    }\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.initData();\n    this.frmglobaldataserve.setLoadingProgressBar(false);\n  }\n\n  initData()\n  {\n    this.lib_regions = JSON.parse(sessionStorage.getItem('lib_region'));\n    this.curRecordId = this.route.snapshot.params['id'];\n    if(this.curRecordId != \"0\"){\n      this.getPDS();\n    }else{\n      this.buildPersonPDSDetail();\n    }\n  }\n  \n  onAddressChange(target:string,newValue) {\n    if(target == \"region\"){\n      this.getProvinceByRegion(newValue);\n    }else if(target == \"province\"){\n      this.getCityByProvince(newValue);\n    }else if(target == \"city\"){\n      this.getBrgyByCity(newValue);\n    }\n  }\n\n  getProvinceByRegion(region:string){\n    ;\n    this.frmglobaldataserve.getRecord(\"Library/GetProvinceByRegion?region_code=\"+region)\n      .subscribe((data: lib_province[]) => {\n        this.lib_provinces_filtered = data;\n      });\n  }\n\n  getCityByProvince(province: string){\n    this.frmglobaldataserve.getRecord(\"Library/GetCityByProvince?prov_code=\"+province)\n      .subscribe((data: lib_city[]) =>{\n        this.lib_cities_filtered = data;\n      });\n  }\n\n  getBrgyByCity(city: string){\n    this.frmglobaldataserve.getRecord(\"Library/GetBrgyByCity?city_code=\"+city)\n      .subscribe((data: lib_brgy[]) => {\n        this.lib_barangays_filtered = data;\n      });\n  }\n\n  getPDS(){\n    debugger;\n    this.frmglobaldataserve.getRecord(\"Person/GetPDS/\"+this.curRecordId)\n      .subscribe((data:PersonPDSDetail) => {\n        this.personPDSDetail = data;\n          this.buildPersonPDSDetail(this.personPDSDetail);\n      },(err) => {          \n        this.buildPersonPDSDetail();\n      });\n  }\n\n  buildPersonPDSDetail(personPDSDetail?: PersonPDSDetail){\n    this.PDSForm = this.fb.group({\n      personId:[personPDSDetail?personPDSDetail.personId: Guid.raw],\n      userId:[personPDSDetail?personPDSDetail.userId: this.curRecordId],\n      firstName:[personPDSDetail?personPDSDetail.firstName:''],\n      middleName:[personPDSDetail?personPDSDetail.middleName:''],\n      lastName:[personPDSDetail?personPDSDetail.lastName:''],\n      extName:[personPDSDetail?personPDSDetail.extName:''],\n      sex:[personPDSDetail?personPDSDetail.sex:''],\n      birthDate:[personPDSDetail?personPDSDetail.birthDate:''],\n      placeOfBirth:[personPDSDetail?personPDSDetail.placeOfBirth:''],\n      maritalStatus:[personPDSDetail?personPDSDetail.maritalStatus:''],\n      citizenship:[personPDSDetail?personPDSDetail.citizenship:''],\n      bloodType:[personPDSDetail?personPDSDetail.bloodType:''],\n      height:[personPDSDetail?personPDSDetail.height:''],\n      weight:[personPDSDetail?personPDSDetail.weight:''],\n      gsis:[personPDSDetail?personPDSDetail.gsis:''],\n      philHealth:[personPDSDetail?personPDSDetail.philHealth:''],\n      sss:[personPDSDetail?personPDSDetail.sss:''],\n      pagIbig:[personPDSDetail?personPDSDetail.pagIbig:''],\n      tin:[personPDSDetail?personPDSDetail.tin:''],\n      region_code:[personPDSDetail?personPDSDetail.region_code:''],\n      prov_code:[personPDSDetail?personPDSDetail.prov_code:''],\n      city_code:[personPDSDetail?personPDSDetail.city_code:''],\n      brgy_code:[personPDSDetail?personPDSDetail.brgy_code:''],\n      purok:[personPDSDetail?personPDSDetail.purok:''],\n      zipCode:[personPDSDetail?personPDSDetail.zipCode:''],\n      telNo:[personPDSDetail?personPDSDetail.telNo:''],\n      mobileNo:[personPDSDetail?personPDSDetail.mobileNo:''],\n      email:[personPDSDetail?personPDSDetail.email:''],\n      is_deleted:[personPDSDetail?personPDSDetail.is_deleted:false],\n      deleted_by:[personPDSDetail?personPDSDetail.deleted_by:''],\n      deleted_date:[personPDSDetail?personPDSDetail.deleted_date:null],\n      personFamily: this.fb.array([]),\n      personTrainings: this.fb.array([]),\n      personEducations: this.fb.array([]),\n      personEligibilities: this.fb.array([]),\n      personWorkExperiences: this.fb.array([]),\n    });\n    this.personPDSDetail.personTrainings.forEach(i => {\n      this.createTrainingFormGroup(i, false);\n    });\n    this.personPDSDetail.personEducations.forEach(i => {\n      this.createEducationFormGroup(i, false);\n    });\n    this.personPDSDetail.personEligibilities.forEach(i => {\n      this.createEligibilitiesFormGroup(i,false);\n    });\n    this.personPDSDetail.personWorkExperiences.forEach(i => {\n      this.createWorkExperiencesFormGroup(i,false);\n    });\n    this.personPDSDetail.personFamily.forEach(i => {\n      this.createFamilyFormGroup(i,false);\n    });\n    this.getProvinceByRegion(this.personPDSDetail.region_code);\n    this.getCityByProvince(this.personPDSDetail.prov_code);\n    this.getBrgyByCity(this.personPDSDetail.city_code);\n  }\n\n    createFamilyFormGroup(personFamily: PersonFamily,isTriggered: boolean){\n      let personFamilyFG: FormGroup = this.fb.group({\n        personFamilyId:[personFamily? personFamily.personFamilyId: '00000000-0000-0000-0000-000000000000'],\n        firstName:[personFamily? personFamily.firstName: ''],\n        middleName:[personFamily? personFamily.middleName: ''],\n        lastName:[personFamily? personFamily.lastName:''],\n        extName:[personFamily? personFamily.extName:''],\n        birthDate:[personFamily? personFamily.birthDate:''],\n        occupation:[personFamily? personFamily.occupation:''],\n        employer:[personFamily? personFamily.employer:''],\n        businessAddress:[personFamily? personFamily.businessAddress:''],\n        telNo:[personFamily? personFamily.telNo:''],\n        relationship:[personFamily? personFamily.relationship:''],  \n        is_deleted:[personFamily?personFamily.is_deleted:false],\n        deleted_by:[personFamily?personFamily.deleted_by:''],\n        deleted_date:[personFamily?personFamily.deleted_date:null],\n      });\n      if(isTriggered){this.selectedFamilyRecord = this.personFamilyFormArray.length;}\n      this.personFamilyFormArray.push(personFamilyFG);\n    }\n    createTrainingFormGroup(personTraining:PersonTrainings, isTriggered:boolean){\n      let personTrainingFG: FormGroup = this.fb.group({\n        personTrainingId:[personTraining? personTraining.personTrainingId:'00000000-0000-0000-0000-000000000000'],\n        seminarTitle:[personTraining? personTraining.seminarTitle:''],\n        dateFrom:[personTraining? personTraining.dateFrom:''],\n        dateTo:[personTraining? personTraining.dateTo:''],\n        numHours:[personTraining? personTraining.numHours:''],\n        conductedBy:[personTraining? personTraining.conductedBy:''],  \n        is_deleted:[personTraining?personTraining.is_deleted:false],\n        deleted_by:[personTraining?personTraining.deleted_by:''],\n        deleted_date:[personTraining?personTraining.deleted_date:null],\n        \n      });\n      if(isTriggered){this.selectedTrainingRecord = this.personTrainingFormArray.length;}\n      this.personTrainingFormArray.push(personTrainingFG);\n    }\n    createEducationFormGroup(personEducations:PersonEducation, isTriggered:boolean){\n      let personEducationFG: FormGroup = this.fb.group({\n        personEducationId:[personEducations? personEducations.personEducationId:  '00000000-0000-0000-0000-000000000000'],\n        nameOfSchool:[personEducations? personEducations.nameOfSchool:''],\n        schoolLevelId:[personEducations? personEducations.schoolLevelId:''],\n        yearGraduated:[personEducations? personEducations.yearGraduated:''],\n        startDate:[personEducations? personEducations.startDate:''],\n        endDate:[personEducations? personEducations.endDate:null],\n        degreeCourse:[personEducations? personEducations.degreeCourse:''],\n        highestAttaind:[personEducations? personEducations.highestAttaind:''],\n        scholarshipAwardHonor:[personEducations? personEducations.scholarshipAwardHonor:''],  \n        is_deleted:[personEducations?personEducations.is_deleted:false],\n        deleted_by:[personEducations?personEducations.deleted_by:''],\n        deleted_date:[personEducations?personEducations.deleted_date:null],\n      });\n      if(isTriggered){this.selectedEducationRecord = this.personEducationFormArray.length;}\n      this.personEducationFormArray.push(personEducationFG);\n    }\n    createEligibilitiesFormGroup(personEligibilities:PersonEligibility, isTriggered:boolean){\n      let PersonEligibilityFG: FormGroup = this.fb.group({\n        personEligibilityId:[personEligibilities? personEligibilities.personEligibilityId:  '00000000-0000-0000-0000-000000000000'],\n        eligibilityTitle:[personEligibilities? personEligibilities.eligibilityTitle:''],\n        rating:[personEligibilities? personEligibilities.rating:''],\n        dateOfExamination:[personEligibilities? personEligibilities.dateOfExamination:''],\n        placeOfExamination:[personEligibilities? personEligibilities.placeOfExamination:''],\n        licenseNumber:[personEligibilities? personEligibilities.licenseNumber:''],\n        licensceReleaseDate:[personEligibilities? personEligibilities.licensceReleaseDate:''],  \n        is_deleted:[personEligibilities?personEligibilities.is_deleted:false],\n        deleted_by:[personEligibilities?personEligibilities.deleted_by:''],\n        deleted_date:[personEligibilities?personEligibilities.deleted_date:null],\n      });\n      if(isTriggered){ this.selectedEligibilityRecord = this.personEligibilityFormArray.length; }\n      this.personEligibilityFormArray.push(PersonEligibilityFG);\n    }\n    createWorkExperiencesFormGroup(personWorkExperiences: PersonWorkExperience, isTriggered: boolean){\n      let PersonWorkExperienceFG: FormGroup = this.fb.group({\n        personWorkExperienceId:[personWorkExperiences? personWorkExperiences.personWorkExperienceId: '00000000-0000-0000-0000-000000000000'],\n        positionTitle:[personWorkExperiences? personWorkExperiences.positionTitle:''],\n        companyName:[personWorkExperiences? personWorkExperiences.companyName:''],\n        startDate:[personWorkExperiences? personWorkExperiences.startDate:''],\n        endDate:[personWorkExperiences? personWorkExperiences.endDate:null],\n        monthlySalary:[personWorkExperiences? personWorkExperiences.monthlySalary:''],\n        salaryGrade:[personWorkExperiences? personWorkExperiences.salaryGrade:''],\n        salaryStep:[personWorkExperiences? personWorkExperiences.salaryStep:''],\n        appointmentStatusId:[personWorkExperiences? personWorkExperiences.appointmentStatusId:''],\n        isGovt:[personWorkExperiences? personWorkExperiences.isGovt:false],  \n        is_deleted:[personWorkExperiences?personWorkExperiences.is_deleted:false],\n        deleted_by:[personWorkExperiences?personWorkExperiences.deleted_by:''],\n        deleted_date:[personWorkExperiences?personWorkExperiences.deleted_date:null],\n      });\n      if(isTriggered){this.selectedWorkExpRecord = this.personWorkExperienceFormArray.length;}\n      this.personWorkExperienceFormArray.push(PersonWorkExperienceFG);\n    }\n    get personTrainingFormArray(): FormArray{\n      return this.PDSForm.get(\"personTrainings\") as FormArray;\n    }\n    get personEducationFormArray(): FormArray{\n      return this.PDSForm.get(\"personEducations\") as FormArray;\n    }\n    get personEligibilityFormArray(): FormArray{\n      return this.PDSForm.get(\"personEligibilities\") as FormArray;\n    }\n    get personWorkExperienceFormArray(): FormArray{\n      return this.PDSForm.get(\"personWorkExperiences\") as FormArray;\n    }\n    get personFamilyFormArray(): FormArray{\n      return this.PDSForm.get(\"personFamily\") as FormArray;\n    }\n\n    eventHandler(btnclick:string){\n      if(btnclick == \"Save\"){\n        if(this.PDSForm.valid)\n          this.saveRecord();\n      }else if(btnclick == \"Delete\"){\n        this.dialogserve.openConfirmation(\"Are you sure you want to delete this record?\")\n        .afterClosed().subscribe(result => {\n          if(result == true){\n            //#region Mark as Deleted the Person Details\n            this.PDSForm.patchValue({'is_deleted':true,'deleted_by':'Axl','deleted_date':this.formatDate(new Date())});\n            //#endregion\n            //#region  Mark as Deleted the Child Entities\n            this.personPDSDetail.personFamily.forEach(i => {\n              let x = this.personPDSDetail.personFamily.findIndex(w => w.personFamilyId == i.personFamilyId);\n              this.personFamilyFormArray.at(x).patchValue({\"is_deleted\":true,\"deleted_by\":'Axl',\"deleted_date\":new Date()});\n            });\n            this.personPDSDetail.personEducations.forEach(i => {\n              let x = this.personPDSDetail.personEducations.findIndex(w => w.personEducationId == i.personEducationId);\n              this.personEducationFormArray.at(x).patchValue({\"is_deleted\":true,\"deleted_by\":'Axl',\"deleted_date\":new Date()});\n            });\n            this.personPDSDetail.personEligibilities.forEach(i => {\n              let x = this.personPDSDetail.personEligibilities.findIndex(w => w.personEligibilityId == i.personEligibilityId);\n              this.personEligibilityFormArray.at(x).patchValue({\"is_deleted\":true,\"deleted_by\":'Axl',\"deleted_date\":new Date()});\n            });\n            this.personPDSDetail.personWorkExperiences.forEach(i => {\n              let x = this.personPDSDetail.personWorkExperiences.findIndex(w => w.personWorkExperienceId == i.personWorkExperienceId);\n              this.personWorkExperienceFormArray.at(x).patchValue({\"is_deleted\":true,\"deleted_by\":'Axl',\"deleted_date\":new Date()});\n            });\n            this.personPDSDetail.personTrainings.forEach(i => {\n              let x = this.personPDSDetail.personTrainings.findIndex(w => w.personTrainingId == i.personTrainingId);\n              this.personTrainingFormArray.at(x).patchValue({\"is_deleted\":true,\"deleted_by\":'Axl',\"deleted_date\":new Date()});\n            });\n            //#endregion\n            this.deleteRecord();\n          }\n        }); \n      }\n    }\n\n    saveRecord(){\n      this.frmglobaldataserve.updateRecord(this.PDSForm.value,\"Person/PostPDS\")\n        .subscribe(\n          (response) =>\n          {\n            console.log(\"Record Saved Successfully: \"+response);\n            this.router.navigateByUrl(\"pages/forms/pds/\"+response).then(x => {\n              this.initData(), \n              localStorage.setItem('secPI',response);\n              this.frmglobaldataserve.openSnackBar();\n          },(error) =>\n          {\n            console.log(\"Error Saving the Record: \"+ JSON.stringify(this.PDSForm.value));\n          }\n        );\n    });\n    }\n\n    deleteRecord(){\n      this.frmglobaldataserve.updateRecord(this.PDSForm.value,\"Person/PostPDS\")\n        .subscribe(\n          (response) =>{\n            console.log(\"Record Deleted Successfully: \"+response);\n            this.router.navigateByUrl(\"pages/forms/pds/list\");\n          },(error) =>{\n            console.log(\"Error Deleting the Record: \"+ JSON.stringify(this.PDSForm.value));\n          }\n        )\n    }\n\n    editTableRecord(table:string, selectedIndex:number){\n      switch(table){\n        case \"family\":\n          this.selectedFamilyRecord = selectedIndex;\n          break;\n        case \"education\":\n          this.selectedEducationRecord = selectedIndex;\n          break;\n        case \"eligibility\":\n          this.selectedEligibilityRecord = selectedIndex;\n          break;\n        case \"workExperience\":\n          this.selectedWorkExpRecord = selectedIndex;\n          break;\n        case \"training\":\n          this.selectedTrainingRecord = selectedIndex;\n          break;\n        default:\n          break;\n      }\n    }\n    saveTableRecord(table:string){\n      switch(table){\n        case \"family\":\n          this.selectedFamilyRecord = null;\n          break;\n        case \"education\":\n          this.selectedEducationRecord = null;\n          break;\n        case \"eligibility\":\n          this.selectedEligibilityRecord = null;\n          break;\n        case \"workExperience\":\n          this.selectedWorkExpRecord = null;\n          break;\n        case \"training\":\n          this.selectedTrainingRecord = null;\n          break;\n        default:\n          break;\n      }\n    }\n    private formatDate(date) {\n      const d = new Date(date);\n      let month = '' + (d.getMonth() + 1);\n      let day = '' + d.getDate();\n      const year = d.getFullYear();\n      if (month.length < 2) month = '0' + month;\n      if (day.length < 2) day = '0' + day;\n      return [year, month, day].join('-');\n    }\n  }\n","<axl-app-crud (appcrudbtnclick)=\"eventHandler($event)\"></axl-app-crud>\n<div class=\"container\">\n\n<form [formGroup]=\"PDSForm\" *ngIf=\"this.PDSForm\">\n<nb-card>\n  <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n  <nb-card-header>\n    Personal Data Sheet\n    <mat-accordion *ngIf=\"false\">\n      <mat-expansion-panel>\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            Form value\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n        <code>\n          {{PDSForm.value | json}}\n        </code>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </nb-card-header>  \n  <mat-tab-group>\n    <mat-tab label=\"Personal Details\"> \n      <nb-card>\n        <nb-card-header>\n          Personal Information\n        </nb-card-header>\n      </nb-card>\n      <nb-card>\n        <nb-card-body>\n          <div class=\"row\">\n            <div class=\"col-sm-6\">\n              <div class=\"form-group\">\n                First Name:<input formControlName=\"firstName\" type=\"text\" nbInput fullWidth placeholder=\"First Name\">\n                Middle Name:<input formControlName=\"middleName\" type=\"text\" nbInput fullWidth placeholder=\"Middle Name\">\n                Last Name:<input formControlName=\"lastName\" type=\"text\" nbInput fullWidth placeholder=\"Last Name\">\n                Extension Name:<input formControlName=\"extName\" type=\"text\" nbInput fullWidth placeholder=\"Name Extension\">\n                Sex:<nb-select formControlName=\"sex\" fullWidth placeholder=\"Male/Female\" [(selected)]=\"selectedItemSex\">\n                  <nb-option [value]=0>Male</nb-option>\n                  <nb-option [value]=1>Female</nb-option>\n                </nb-select>\n                Birth Date:<nb-datepicker #dateTimePicker></nb-datepicker>\n                <input formControlName=\"birthDate\" nbInput fullWidth placeholder=\"Date of Birth\" [nbDatepicker]=\"dateTimePicker\">\n                Marital Status<nb-select formControlName=\"maritalStatus\" fullWidth placeholder=\"Marital Status\" [(selected)]=\"selectedItemMarital\">\n                  <nb-option [value]=0>Anulled</nb-option>\n                  <nb-option [value]=1>Legally Separated</nb-option>\n                  <nb-option [value]=2>Married</nb-option>\n                  <nb-option [value]=3>Single</nb-option>\n                  <nb-option [value]=4>Widowed</nb-option>\n                </nb-select>\n              </div>\n            </div>\n            <div class=\"col-sm-6\">\n              <div class=\"form-group\">\n                Citizenship:<nb-select formControlName=\"citizenship\" fullWidth placeholder=\"Citizenship\" [(selected)]=\"selectedCitizenship\">\n                  <nb-option [value]=1>Filipino</nb-option>\n                </nb-select>\n                Blood Type:<nb-select formControlName=\"bloodType\" fullWidth placeholder=\"Blood Type\" [(selected)]=\"selectedBloodType\">\n                  <nb-option value=\"0\">O+</nb-option>\n                  <nb-option value=\"1\">O-</nb-option>\n                  <nb-option value=\"2\">A+</nb-option>\n                  <nb-option value=\"3\">A-</nb-option>\n                  <nb-option value=\"4\">B+</nb-option>\n                  <nb-option value=\"5\">B-</nb-option>\n                  <nb-option value=\"6\">AB+</nb-option>\n                  <nb-option value=\"7\">AB-</nb-option>\n                </nb-select>\n                Height (m):<input formControlName=\"height\" type=\"text\" nbInput fullWidth placeholder=\"Height (m)\">\n                Weight (kg):<input formControlName=\"weight\" type=\"text\" nbInput fullWidth placeholder=\"Weight (kg)\">\n                GSIS:<input formControlName=\"gsis\" type=\"text\" nbInput fullWidth placeholder=\"GSIS\">\n                SSS:<input formControlName=\"sss\" type=\"text\" nbInput fullWidth placeholder=\"SSS\">\n                PhilHealth:<input formControlName=\"philHealth\" type=\"text\" nbInput fullWidth placeholder=\"PhilHealth\">\n                PagIbig:<input formControlName=\"pagIbig\" type=\"text\" fullWidth nbInput placeholder=\"PagIbig\">\n                TIN<input formControlName=\"tin\" type=\"text\" nbInput fullWidth placeholder=\"TIN\">\n              </div>\n            </div>\n          </div>\n        </nb-card-body>\n      </nb-card>\n      <nb-card>\n        <nb-card-header>\n          Current Address\n        </nb-card-header>\n      </nb-card>\n        <div class=\"col-sm-6\">\n          <div class=\"form-group\">\n            Region:<nb-select formControlName=\"region_code\" fullWidth placeholder=\"Region\" (selectedChange)=\"onAddressChange('region',$event)\" [(selected)]=\"selectedRegion\">\n                <nb-option *ngFor=\"let region of lib_regions; let i = index\" [value]=\"region.region_code\">\n                    {{region.region_name}}\n                </nb-option>\n            </nb-select>\n            Province:<nb-select formControlName=\"prov_code\" fullWidth placeholder=\"Province\" (selectedChange)=\"onAddressChange('province',$event)\" [(selected)]=\"selectedProvince\">\n                <nb-option *ngFor=\"let province of lib_provinces_filtered; let i = index\" [value]=\"province.prov_code\" >\n                    {{province.prov_name}}\n                </nb-option>\n            </nb-select>\n            City:<nb-select formControlName=\"city_code\" fullWidth placeholder=\"City/Municipality\" (selectedChange)=\"onAddressChange('city',$event)\" [(selected)]=\"selectedCity\">\n              <nb-option *ngFor=\"let city of lib_cities_filtered; let i = index\" [value]=\"city.city_code\">\n                {{city.city_name}}\n              </nb-option>\n            </nb-select>\n            Barangay:<nb-select formControlName=\"brgy_code\" fullWidth placeholder=\"Barangay\" [(selected)]=\"selectedBrgy\">\n              <nb-option *ngFor=\"let brgy of lib_barangays_filtered; let i = index\" [value]=\"brgy.brgy_code\">\n                {{brgy.brgy_name}}\n              </nb-option>\n            </nb-select>\n            Purok:<input formControlName=\"purok\" type=\"text\" nbInput fullWidth placeholder=\"Purok\">\n            Zip Code:<input formControlName=\"zipCode\" type=\"text\" nbInput fullWidth placeholder=\"Zip Code\">\n            Telephone:<input formControlName=\"telNo\" type=\"text\" nbInput fullWidth placeholder=\"Telephone\">\n           </div>\n      </div>\n      <nb-card>\n        <nb-card-header>\n          Contact Information\n        </nb-card-header>\n      </nb-card>\n        <div class=\"col-sm-6\">\n          <div class=\"form-group\">\n            Mobile:<input formControlName=\"mobileNo\" type=\"text\" nbInput fullWidth placeholder=\"Mobile\">\n            Email:<input formControlName=\"email\" type=\"text\" nbInput fullWidth placeholder=\"Email\">\n           </div>\n      </div>\n    </mat-tab>\n    <!-- <mat-tab label=\"Assignment Details\">\n        <div class=\"col-sm-6\">\n          <div class=\"form-group\">\n            <nb-select fullWidth placeholder=\"Office Level\" [(selected)]=\"selectedItem\">\n            </nb-select>\n            <nb-select fullWidth placeholder=\"Region\" [(selected)]=\"selectedItem\">\n            </nb-select>\n            <nb-select fullWidth placeholder=\"Fund Source\" [(selected)]=\"selectedItem\">\n            </nb-select>\n            <nb-select fullWidth placeholder=\"Employment Status\" [(selected)]=\"selectedItem\">\n            </nb-select>\n            <nb-select fullWidth placeholder=\"Current Position\" [(selected)]=\"selectedItem\">\n            </nb-select>\n            <input nbInput fullWidth placeholder=\"Date Start Based on Current Contract\" [nbDatepicker]=\"dateTimePicker\">\n            <nb-datepicker #dateTimePicker></nb-datepicker>\n            <input nbInput fullWidth placeholder=\"Date End Based on Current Contract\" [nbDatepicker]=\"dateTimePicker\">\n            <nb-datepicker #dateTimePicker></nb-datepicker>\n          </div>  \n        </div>\n    </mat-tab> -->\n    <mat-tab label=\"Family\">\n      <nb-card>\n        <nb-card-header>\n          Parent Information\n        </nb-card-header>\n      </nb-card>  \n      <nb-card>\n        <nb-card-body>\n          <div style=\"padding-bottom: 5px;\">\n            <button (click)=\"createFamilyFormGroup(null,true);\" mat-raised-button style=\"background-color:#3366ff; color:white;\"><nb-icon icon=\"person-add-outline\"></nb-icon>&nbsp;&nbsp;Add Family Member</button>\n          </div>\n            <table>\n              <tr>\n                <th style=\"padding-right: 135px;\">Action</th>\n                <th style=\"padding-right: 135px;\">First Name</th>  \n                <th style=\"padding-right: 135px;\">Middle Name</th> \n                <th style=\"padding-right: 135px;\">Last Name</th>   \n                <th style=\"padding-right: 10px;\">Extension Name</th>   \n                <th style=\"padding-right: 30px;\">Birth Date</th>  \n                <th style=\"padding-right: 135px;\">Occupation</th>  \n                <th style=\"padding-right: 150px;\">Employer</th>    \n                <th style=\"padding-right: 135px;\">Business Address</th>    \n                <th style=\"padding-right: 10px;\">Contact Number</th>    \n                <th style=\"padding-right: 135px;\">Relationship</th>    \n              </tr>\n            <tr *ngFor=\"let family of personFamilyFormArray.controls;let i = index;let last = last;\" [formGroup]=\"family\">\n              <td>\n                <button (click)=\"editTableRecord('family',i);\" *ngIf=\"selectedFamilyRecord != i\" mat-raised-button style=\"background-color:#3366ff; color:white;\"><nb-icon icon=\"edit-2-outline\"></nb-icon>Edit</button>\n                <button (click)=\"saveTableRecord('family');\" *ngIf=\"selectedFamilyRecord == i\" mat-raised-button style=\"background-color: #00d68f; color:white;\"><nb-icon icon=\"save-outline\"></nb-icon>Save</button>\n                &nbsp;<button mat-raised-button style=\"background-color:#ff3d71; color:white;\"><nb-icon icon=\"trash-outline\"></nb-icon>Delete</button>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 210px;\" *ngIf=\"selectedFamilyRecord == i\">\n                  <input formControlName=\"firstName\" placeholder=\"Enter First Name\"  matInput/>\n                </mat-form-field>\n                <span *ngIf=\"selectedFamilyRecord != i\">{{family.value.firstName}}</span>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 220px;\" *ngIf=\"selectedFamilyRecord == i\">\n                  <input formControlName=\"middleName\" placeholder=\"Enter Middle Name\" matInput/>\n                </mat-form-field>\n                <span *ngIf=\"selectedFamilyRecord != i\">{{family.value.middleName}}</span>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 210px;\" *ngIf=\"selectedFamilyRecord == i\">\n                  <input formControlName=\"lastName\" placeholder=\"Enter Last Name\"  matInput/>\n                </mat-form-field>\n                <span *ngIf=\"selectedFamilyRecord != i\">{{family.value.lastName}}</span>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 120px;\" *ngIf=\"selectedFamilyRecord == i\">\n                  <input formControlName=\"extName\" placeholder=\"Enter Extension Name\" matInput/>\n                </mat-form-field>\n                <span *ngIf=\"selectedFamilyRecord != i\">{{family.value.extName}}</span>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 100px;\" *ngIf=\"selectedFamilyRecord == i\">\n                  <input matInput [matDatepicker]=\"picker1\" placeholder=\"Enter Birth Date\"  formControlName=\"birthDate\" style=\"color: black\">\n                  <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                  <mat-datepicker touchUi #picker1></mat-datepicker>\n                </mat-form-field>\n                <span *ngIf=\"selectedFamilyRecord != i\">{{family.value.birthDate | date:'MM/dd/yyyy'}}</span>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 210px;\" *ngIf=\"selectedFamilyRecord == i\">\n                  <input formControlName=\"occupation\" placeholder=\"Enter Occupation\" matInput/>\n                </mat-form-field>\n                <span *ngIf=\"selectedFamilyRecord != i\">{{family.value.occupation}}</span>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 210px;\" *ngIf=\"selectedFamilyRecord == i\">\n                  <input formControlName=\"employer\" placeholder=\"Enter Employer Name\"  matInput/>\n                </mat-form-field>\n                <span *ngIf=\"selectedFamilyRecord != i\">{{family.value.employer}}</span>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 250px;\" *ngIf=\"selectedFamilyRecord == i\">\n                  <input formControlName=\"businessAddress\" placeholder=\"Enter Business Address\"  matInput/>\n                </mat-form-field>\n                <span *ngIf=\"selectedFamilyRecord != i\">{{family.value.businessAddress}}</span>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 120px;\" *ngIf=\"selectedFamilyRecord == i\">\n                  <input formControlName=\"telNo\" placeholder=\"Enter Contact Number\" matInput/>\n                </mat-form-field>\n                <span *ngIf=\"selectedFamilyRecord != i\">{{family.value.telNo}}</span>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 210px;\" *ngIf=\"selectedFamilyRecord == i\">\n                  <mat-label>Select Relationship Status</mat-label>\n                  <mat-select  formControlName=\"relationship\">\n                    <mat-option [value]=0>Mother</mat-option>\n                    <mat-option [value]=1>Father</mat-option>\n                    <mat-option [value]=2>Sister</mat-option>\n                    <mat-option [value]=3>Brother</mat-option>\n                    <mat-option [value]=4>Grand Father</mat-option>\n                    <mat-option [value]=5>Grand Mother</mat-option>\n                    <mat-option [value]=6>Aunt</mat-option>\n                  </mat-select>\n                </mat-form-field>\n                <span *ngIf=\"selectedFamilyRecord != i\">{{family.value.relationship}}</span>\n              </td>\n            </tr> \n            </table>\n        </nb-card-body>\n          <mat-accordion *ngIf=\"false\">\n            <mat-expansion-panel>\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  Form value\n                </mat-panel-title>\n              </mat-expansion-panel-header>\n              <code>\n                {{PDSForm.value | json}}\n              </code>\n            </mat-expansion-panel>\n          </mat-accordion>\n      </nb-card>\n    </mat-tab>\n    <mat-tab label=\"Education\"> \n      <nb-card>\n        <nb-card-header>\n          Education Information\n        </nb-card-header>\n        <nb-card>\n          <nb-card-body>\n            <div style=\"padding-bottom: 5px;\">\n              <button (click)=\"createEducationFormGroup(null,true);\" mat-raised-button style=\"background-color:#3366ff; color:white;\"><nb-icon icon=\"person-add-outline\"></nb-icon>&nbsp;&nbsp;Add Education</button>\n            </div>\n            <table>\n              <tr>\n                <th style=\"padding-right: 135px;\">Action</th>\n                <th style=\"padding-right: 220px;\">School Name</th>  \n                <th style=\"padding-right: 135px;\">Level</th> \n                <th style=\"padding-right: 5px;\">Year Graduated</th>   \n                <th style=\"padding-right: 30px;\">Start Date</th>  \n                <th style=\"padding-right: 40px;\">End Date</th>\n                <th style=\"padding-right: 200px;\">Degree / Course</th>\n                <th style=\"padding-right: 10px;\">Highest Attainment</th>\n                <th style=\"padding-right: 10px;\">Scholarship / Award / Honor</th>\n              </tr>\n              <tr *ngFor=\"let education of personEducationFormArray.controls;let i = index;let last = last;\" [formGroup]=\"education\">\n              <td>\n                  <button (click)=\"editTableRecord('education',i);\" *ngIf=\"selectedEducationRecord != i\" mat-raised-button style=\"background-color:#3366ff; color:white;\"><nb-icon icon=\"edit-2-outline\"></nb-icon>Edit</button>\n                  <button (click)=\"saveTableRecord('education');\" *ngIf=\"selectedEducationRecord == i\" mat-raised-button style=\"background-color: #00d68f; color:white;\"><nb-icon icon=\"save-outline\"></nb-icon>Save</button>\n                  &nbsp;<button mat-raised-button style=\"background-color:#ff3d71; color:white;\"><nb-icon icon=\"trash-outline\"></nb-icon>Delete</button>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 310px;\" *ngIf=\"selectedEducationRecord == i\">\n                  <input formControlName=\"nameOfSchool\" placeholder=\"Enter School Name\" matInput/>\n                </mat-form-field>\n                <span *ngIf=\"selectedEducationRecord != i\">{{education.value.nameOfSchool}}</span>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 170px;\" *ngIf=\"selectedEducationRecord == i\">\n                  <mat-label>Select School Level</mat-label>\n                  <mat-select  formControlName=\"schoolLevelId\">\n                    <mat-option [value]=0>Primary</mat-option>\n                    <mat-option [value]=1>Secondary</mat-option>\n                    <mat-option [value]=2>Vocational</mat-option>  \n                    <mat-option [value]=3>Tertiary - Undergraduate</mat-option>\n                    <mat-option [value]=4>Tertiary - Graduate</mat-option>\n                    <mat-option [value]=5>Tertiary - Doctoral</mat-option>\n                  </mat-select>\n                </mat-form-field>\n                <span *ngIf=\"selectedEducationRecord != i\">{{education.value.schoolLevelId}}</span>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 110px;\" *ngIf=\"selectedEducationRecord == i\">\n                  <input formControlName=\"yearGraduated\" placeholder=\"Enter Year Graduated\" matInput/>\n                </mat-form-field>\n                <span *ngIf=\"selectedEducationRecord != i\">{{education.value.yearGraduated}}</span>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 100px;\" *ngIf=\"selectedEducationRecord == i\">\n                  <input matInput [matDatepicker]=\"picker2\" placeholder=\"Enter Start Date\" formControlName=\"startDate\" style=\"color: black\">\n                  <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                  <mat-datepicker touchUi #picker2></mat-datepicker>\n                </mat-form-field>\n                <span *ngIf=\"selectedEducationRecord != i\">{{education.value.startDate | date:'MM/dd/yyyy'}}</span>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 100px;\" *ngIf=\"selectedEducationRecord == i\">\n                  <input matInput [matDatepicker]=\"picker3\" placeholder=\"Enter End Date\" formControlName=\"endDate\" style=\"color: black\">\n                  <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\n                  <mat-datepicker touchUi #picker3></mat-datepicker>\n                </mat-form-field>\n                <span *ngIf=\"selectedEducationRecord != i\">{{education.value.endDate | date:'MM/dd/yyyy'}}</span>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 300px;\" *ngIf=\"selectedEducationRecord == i\">\n                  <input formControlName=\"degreeCourse\" placeholder=\"Enter Degree/Course\" matInput/>\n                </mat-form-field>\n                <span *ngIf=\"selectedEducationRecord != i\">{{education.value.degreeCourse}}</span>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 150px;\" *ngIf=\"selectedEducationRecord == i\">\n                  <input formControlName=\"highestAttaind\" placeholder=\"Enter Highest Attainment\" matInput/>\n                </mat-form-field>\n                <span *ngIf=\"selectedEducationRecord != i\">{{education.value.highestAttaind}}</span>\n              </td>\n              <td>\n                <mat-form-field style=\"width: 210px;\" *ngIf=\"selectedEducationRecord == i\">\n                  <input formControlName=\"scholarshipAwardHonor\" placeholder=\"Enter Scholarship/Award/Honor\" matInput/>\n                </mat-form-field>\n                <span *ngIf=\"selectedEducationRecord != i\">{{education.value.scholarshipAwardHonor}}</span>\n              </td>\n            </tr>\n            </table>\n          </nb-card-body>\n          <mat-accordion *ngIf=\"false\">\n            <mat-expansion-panel>\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  Form value\n                </mat-panel-title>\n              </mat-expansion-panel-header>\n              <code>\n                {{personEducationFormArray.value | json}}\n              </code>\n            </mat-expansion-panel>\n          </mat-accordion>\n        </nb-card>\n      </nb-card>\n    </mat-tab>\n    <mat-tab label=\"Eligibility\">\n      <nb-card>\n        <nb-card-header>\n          Eligibility Information\n        </nb-card-header>\n        <nb-card>\n          <nb-card-body>\n            <div style=\"padding-bottom: 5px;\">\n              <button (click)=\"createEligibilitiesFormGroup(null,true);\" mat-raised-button style=\"background-color:#3366ff; color:white;\"><nb-icon icon=\"person-add-outline\"></nb-icon>&nbsp;&nbsp;Add Eligibility</button>\n            </div>\n            <table>\n              <tr>\n                <th style=\"padding-right: 135px;\">Action</th>\n                <th style=\"padding-right: 220px;\">Eligibility</th>\n                <th style=\"padding-right: 20px;\">Rating</th>\n                <th style=\"padding-right: 20px;\">Date Of Exam</th>\n                <th style=\"padding-right: 135px;\">Place Of Exam</th>\n                <th style=\"padding-right: 135px;\">License Number</th>\n                <th style=\"padding-right: 40px;\">Date Of Release</th>\n              </tr>\n              <tr *ngFor=\"let personEligibility of personEligibilityFormArray.controls; let i = index; let last = last;\" [formGroup]=\"personEligibility\">\n                <td>\n                  <button (click)=\"editTableRecord('eligibility',i);\" *ngIf=\"selectedEligibilityRecord != i\" mat-raised-button style=\"background-color:#3366ff; color:white;\"><nb-icon icon=\"edit-2-outline\"></nb-icon>Edit</button>\n                  <button (click)=\"saveTableRecord('eligibility',i);\" *ngIf=\"selectedEligibilityRecord == i\" mat-raised-button style=\"background-color: #00d68f; color:white;\"><nb-icon icon=\"save-outline\"></nb-icon>Save</button>\n                  &nbsp;<button mat-raised-button style=\"background-color:#ff3d71; color:white;\"><nb-icon icon=\"trash-outline\"></nb-icon>Delete</button>\n                </td> \n                <td>\n                  <mat-form-field style=\"width: 280px;\" *ngIf=\"selectedEligibilityRecord == i\">\n                    <input formControlName=\"eligibilityTitle\" placeholder=\"Enter Eligibility\" matInput/>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedEligibilityRecord != i\">{{personEligibility.value.eligibilityTitle}}</span>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 60px;\" *ngIf=\"selectedEligibilityRecord == i\">\n                    <input type=\"number\" formControlName=\"rating\" placeholder=\"Enter Rating\" matInput/>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedEligibilityRecord != i\">{{personEligibility.value.rating}}</span>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 100px;\" *ngIf=\"selectedEligibilityRecord == i\">\n                    <input matInput [matDatepicker]=\"picker4\" placeholder=\"Enter Date of Examination\" formControlName=\"dateOfExamination\" style=\"color: black\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker4\"></mat-datepicker-toggle>\n                    <mat-datepicker touchUi #picker4></mat-datepicker>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedEligibilityRecord != i\">{{personEligibility.value.dateOfExamination | date:'MM/dd/yyyy'}}</span>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 230px;\" *ngIf=\"selectedEligibilityRecord == i\">\n                    <input formControlName=\"placeOfExamination\" placeholder=\"Enter Place of Examination\" matInput/>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedEligibilityRecord != i\">{{personEligibility.value.placeOfExamination}}</span>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 230px;\" *ngIf=\"selectedEligibilityRecord == i\">\n                    <input formControlName=\"licenseNumber\" placeholder=\"Enter License Number\" matInput/>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedEligibilityRecord != i\">{{personEligibility.value.licenseNumber}}</span>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 110px;\" *ngIf=\"selectedEligibilityRecord == i\">\n                    <input matInput [matDatepicker]=\"picker5\" placeholder=\"Enter Release Date\" formControlName=\"licensceReleaseDate\" style=\"color: black\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker5\"></mat-datepicker-toggle>\n                    <mat-datepicker touchUi #picker5></mat-datepicker>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedEligibilityRecord != i\">{{personEligibility.value.licensceReleaseDate | date:'MM/dd/yyyy'}}</span>\n                </td>\n              </tr>\n            </table>\n          </nb-card-body>\n        </nb-card>\n      </nb-card>\n    </mat-tab>\n    <mat-tab label=\"Work Experiences\">\n      <nb-card>\n        <nb-card-header>\n          Work Experiences\n        </nb-card-header>\n        <nb-card>\n          <nb-card-body>\n            <div style=\"padding-bottom: 5px;\">\n              <button (click)=\"createWorkExperiencesFormGroup(null,true);\" mat-raised-button style=\"background-color:#3366ff; color:white;\"><nb-icon icon=\"person-add-outline\"></nb-icon>&nbsp;&nbsp;Add Work Experience</button>\n            </div>\n            <table>\n              <tr>\n                <th style=\"padding-right: 135px;\">Action</th>\n                <th style=\"padding-right: 220px;\">Position</th>\n                <th style=\"padding-right: 220px;\">Company Name</th>\n                <th style=\"padding-right: 30px;\">Start Date</th>\n                <th style=\"padding-right: 40px;\">End Date</th>\n                <th style=\"padding-right: 20px;\">Monthly Salary</th>\n                <th style=\"padding-right: 20px;\">Salary Grade</th>\n                <th style=\"padding-right: 20px;\">Salary Step</th>\n                <th style=\"padding-right: 20px;\">Appointment Status</th>\n                <th style=\"padding-right: 20px;\">Is Government</th>\n              </tr>\n              <tr *ngFor=\"let personWorkExperience of personWorkExperienceFormArray.controls; let i = index\" [formGroup]=\"personWorkExperience\">\n                <td>\n                  <button (click)=\"editTableRecord('workExperience',i);\" *ngIf=\"selectedWorkExpRecord != i\" mat-raised-button style=\"background-color:#3366ff; color:white;\"><nb-icon icon=\"edit-2-outline\"></nb-icon>Edit</button>\n                  <button (click)=\"saveTableRecord('workExperience',i);\" *ngIf=\"selectedWorkExpRecord == i\" mat-raised-button style=\"background-color: #00d68f; color:white;\"><nb-icon icon=\"save-outline\"></nb-icon>Save</button>\n                  &nbsp;<button mat-raised-button style=\"background-color:#ff3d71; color:white;\"><nb-icon icon=\"trash-outline\"></nb-icon>Delete</button>\n              </td> \n                <td>\n                  <mat-form-field style=\"width: 270px;\" *ngIf=\"selectedWorkExpRecord == i\">\n                    <input formControlName=\"positionTitle\" placeholder=\"Enter Position\" matInput/>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedWorkExpRecord != i\">{{personWorkExperience.value.positionTitle}}</span>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 320px;\" *ngIf=\"selectedWorkExpRecord == i\">\n                    <input formControlName=\"companyName\" placeholder=\"Enter Company Name\" matInput/>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedWorkExpRecord != i\">{{personWorkExperience.value.companyName}}</span>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 100px;\" *ngIf=\"selectedWorkExpRecord == i\">\n                    <input matInput [matDatepicker]=\"picker6\" placeholder=\"Enter Start Date\" formControlName=\"startDate\" style=\"color: black\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker6\"></mat-datepicker-toggle>\n                    <mat-datepicker touchUi #picker6></mat-datepicker>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedWorkExpRecord != i\">{{personWorkExperience.value.startDate | date:'MM/dd/yyyy'}}</span>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 100px;\" *ngIf=\"selectedWorkExpRecord == i\">\n                    <input matInput [matDatepicker]=\"picker7\" placeholder=\"Enter End Date\" formControlName=\"endDate\" style=\"color: black\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker7\"></mat-datepicker-toggle>\n                    <mat-datepicker touchUi #picker7></mat-datepicker>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedWorkExpRecord != i\">{{personWorkExperience.value.endDate | date:'MM/dd/yyyy'}}</span>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 120px;\" *ngIf=\"selectedWorkExpRecord == i\">\n                    <input type=\"number\" formControlName=\"monthlySalary\" placeholder=\"Enter Monthly Salary\" matInput/>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedWorkExpRecord != i\">{{personWorkExperience.value.monthlySalary}}</span>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 100px;\" *ngIf=\"selectedWorkExpRecord == i\">\n                    <input type=\"number\" formControlName=\"salaryGrade\" placeholder=\"Enter Salary Grade\" matInput/>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedWorkExpRecord != i\">{{personWorkExperience.value.salaryGrade}}</span>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 100px;\" *ngIf=\"selectedWorkExpRecord == i\">\n                    <input type=\"number\" formControlName=\"salaryStep\" placeholder=\"Enter Salary Step\" matInput/>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedWorkExpRecord != i\">{{personWorkExperience.value.salaryStep}}</span>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 150px;\" *ngIf=\"selectedWorkExpRecord == i\">\n                    <mat-label>Select Appointment Status</mat-label>\n                    <mat-select  formControlName=\"appointmentStatusId\">\n                      <mat-option [value]=1>Regular</mat-option>\n                      <mat-option [value]=2>Contractual</mat-option>\n                      <mat-option [value]=3>MOA</mat-option>\n                      <mat-option [value]=4>Specialist</mat-option>\n                      <mat-option [value]=5>Job Order</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedWorkExpRecord != i\">{{personWorkExperience.value.appointmentStatusId}}</span>\n                </td>\n                <td>\n                  <mat-checkbox class=\"example-margin\" *ngIf=\"selectedWorkExpRecord == i\" formControlName=\"isGovt\"></mat-checkbox>\n                  <span *ngIf=\"selectedWorkExpRecord != i\">{{personWorkExperience.value.isGovt}}</span>\n                </td>\n              </tr>\n            </table>\n          </nb-card-body>\n        </nb-card>\n      </nb-card>\n    </mat-tab>\n    <mat-tab label=\"Training Programs\"> \n      <nb-card>\n        <nb-card-header>\n          Training Programs\n        </nb-card-header>\n        <nb-card>\n          <nb-card-body>\n            <div style=\"padding-bottom: 5px;\">\n              <button (click)=\"createTrainingFormGroup(null,true);\" mat-raised-button style=\"background-color:#3366ff; color:white;\"><nb-icon icon=\"person-add-outline\"></nb-icon>&nbsp;&nbsp;Add Training</button>\n            </div>\n            <table>\n              <tr>\n                <th style=\"padding-right: 135px;\">Action</th>\n                <th style=\"padding-right: 135px;\">Training/Seminar</th>\n                <th style=\"padding-right: 80px;\">From</th>\n                <th style=\"padding-right: 90px;\">To</th>\n                <th style=\"padding-right: 10px;\">Number of Hours</th>\n                <th style=\"padding-right: 135px;\">Conducted By</th>\n              </tr>\n              <tr *ngFor=\"let personTraining of personTrainingFormArray.controls; let i = index\" [formGroup]=\"personTraining\">\n                <td>\n                  <button (click)=\"editTableRecord('training',i);\" *ngIf=\"selectedTrainingRecord != i\" mat-raised-button style=\"background-color:#3366ff; color:white;\"><nb-icon icon=\"edit-2-outline\"></nb-icon>Edit</button>\n                  <button (click)=\"saveTableRecord('training',i);\" *ngIf=\"selectedTrainingRecord == i\" mat-raised-button style=\"background-color: #00d68f; color:white;\"><nb-icon icon=\"save-outline\"></nb-icon>Save</button>\n                  &nbsp;<button mat-raised-button style=\"background-color:#ff3d71; color:white;\"><nb-icon icon=\"trash-outline\"></nb-icon>Delete</button>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 250px;\" *ngIf=\"selectedTrainingRecord == i\">\n                    <input formControlName=\"seminarTitle\" placeholder=\"Seminar / Training Attended\" matInput/>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedTrainingRecord != i\">{{personTraining.value.seminarTitle}}</span>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 100px;\" *ngIf=\"selectedTrainingRecord == i\">\n                    <input matInput placeholder=\"Enter Start Date\" [matDatepicker]=\"picker8\" formControlName=\"dateFrom\" style=\"color: black\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker8\"></mat-datepicker-toggle>\n                    <mat-datepicker touchUi #picker8></mat-datepicker>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedTrainingRecord != i\">{{personTraining.value.dateFrom | date:'MM/dd/yyyy'}}</span>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 100px;\" *ngIf=\"selectedTrainingRecord == i\">\n                    <input matInput placeholder=\"Enter End Date\" [matDatepicker]=\"picker9\" formControlName=\"dateTo\" style=\"color: black\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker9\"></mat-datepicker-toggle>\n                    <mat-datepicker touchUi #picker9></mat-datepicker>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedTrainingRecord != i\">{{personTraining.value.dateTo | date:'MM/dd/yyyy'}}</span>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 120px;\" *ngIf=\"selectedTrainingRecord == i\">\n                    <input type=\"number\" placeholder=\"Enter Number of Hours\" formControlName=\"numHours\" matInput/>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedTrainingRecord != i\">{{personTraining.value.numHours}}</span>\n                </td>\n                <td>\n                  <mat-form-field style=\"width: 220px;\" *ngIf=\"selectedTrainingRecord == i\">\n                    <input placeholder=\"Enter Conducted By\" formControlName=\"conductedBy\" matInput/>\n                  </mat-form-field>\n                  <span *ngIf=\"selectedTrainingRecord != i\">{{personTraining.value.conductedBy}}</span>\n                </td>\n              </tr>\n            </table>\n          </nb-card-body>\n        </nb-card>\n      </nb-card>\n    </mat-tab>\n  </mat-tab-group>\n</nb-card>\n</form> ","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PdsTableService } from 'app/@core/mock/pds';\nimport { PersonPDSList } from 'app/shared/model/PersonPDS.model';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { environment } from 'environments/environment';\nimport { DatePipe } from '@angular/common';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'ngx-pds-list',\n  templateUrl: './pds-list.component.html',\n  styleUrls: ['./pds-list.component.scss']\n})\nexport class PdsListComponent implements OnInit {\n  public baseUrl = environment.apiUrl+\"Person/\";\n  public showLoadingProgressBar$: Observable<boolean>;\n  private paginator: MatPaginator;\n  displayedColumns: string[] = ['personId','firstName','middleName', 'lastName', 'extName', 'sex', 'birthDate', 'placeOfBirth','civil_status','citizenship','blood_type'];\n  @ViewChild(MatPaginator, { static: true }) set matPaginator(mp: MatPaginator) \n  {\n    this.paginator = mp;\n    this.gridDataSource.paginator = this.paginator;\n  }\n  gridDataSource = new MatTableDataSource();\n  personFamilyList:PersonPDSList[] = [];\n  constructor(\n    private router: Router,\n    private frmglobaldataserve: FormGlobalDataService,\n    private datePipe: DatePipe,\n    public dialog: MatDialog) { }\n\n  onDeleteConfirm(event):void{\n    if(window.confirm('Are you sure you want to delete?')){\n      event.confirm.resolve();\n    }else{\n      event.confirm.reject();\n    }\n  }\n\n  onUserRowSelect(id :number):void{\n    this.router.navigateByUrl(\"pages/forms/pds/\"+id);\n  }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.refreshTheList();\n  }\n\n  refreshTheList()\n  {\n    var urlstr = this.baseUrl+'GetPDSList/';\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.frmglobaldataserve.loadList(urlstr)\n      .subscribe((res: PersonPDSList[]) => {\n        this.personFamilyList = res;\n        this.gridDataSource.data = res;\n        this.frmglobaldataserve.setLoadingProgressBar(false);\n      },\n      () => {})\n  }\n\n  eventHandler(btnevent:string){\n    if(btnevent == \"Refresh\")\n    {\n      console.log(\"Refresh\");\n      this.refreshTheList();\n    }\n    else if(btnevent == \"Add\"){\n      console.log(\"Add\");\n      this.router.navigateByUrl(\"pages/forms/pds/\"+0);\n    }\n  }\n\n  exportTableList(){\n    ;\n    var fileName = \"PersonDetails_\"+Date.now+'.xlsx';\n    let dataToExport = this.personFamilyList\n      .map(x => ({\n        PersonId: x.personId,\n        FirstName: x.firstName,\n        MiddleName: x.middleName,\n        LastName: x.lastName,\n        ExtName: x.extName,\n        Sex: x.Sex,\n        BirthDate: x.birthDate,\n        PlaceOfBirth: x.placeOfBirth,\n        MaritalStatus: x.citil_status,\n        Citizenship: x.citizenship,\n        BloodType: x.blood_type,\n      }));\n    this.frmglobaldataserve.exportToXlsx(dataToExport,'Person_Details',fileName);\n  }\n \n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.gridDataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<axl-app-list  (applistbtnclick)='eventHandler($event)'></axl-app-list>\n<div class=\"container\">\n  <nb-card>\n    <nb-card-header>\n      Personal Data Sheet\n    </nb-card-header>\n    <mat-tab-group>\n      <mat-tab label=\"List\">\n      <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n        <nb-card>\n          <nb-card-body>\n            <!-- <table #exportTable>\n              <tr>\n                <th style=\"padding-right: 135px;\">Person ID</th>\n                <th style=\"padding-right: 135px;\">First Name</th>\n                <th style=\"padding-right: 135px;\">Middle Name</th>\n                <th style=\"padding-right: 135px;\">Last Name</th>\n                <th style=\"padding-right: 135px;\">Ext. Name</th>\n                <th style=\"padding-right: 135px;\">Sex</th>\n                <th style=\"padding-right: 135px;\">Date Of Birth</th>\n                <th style=\"padding-right: 135px;\">Place Of Birth</th>\n                <th style=\"padding-right: 135px;\">Marital Status</th>\n                <th style=\"padding-right: 135px;\">Citizenship</th>\n                <th style=\"padding-right: 135px;\">Blood Type</th>\n              </tr>\n              <tr *ngFor=\"let pds of gridDataSource.data;let i = index;let last = last\" (click)=\"onUserRowSelect(pds.personId)\">\n                <td><span>{{pds.personId}}</span></td>\n                <td><span>{{pds.firstName}}</span></td>\n                <td><span>{{pds.middleName}}</span></td>\n                <td><span>{{pds.lastName}}</span></td>\n                <td><span>{{pds.extName}}</span></td>\n                <td><span>{{pds.sex}}</span></td>\n                <td><span>{{pds.dateOfBirth}}</span></td>\n                <td><span>{{pds.placeOfBirth}}</span></td>\n                <td><span>{{pds.maritalStatus}}</span></td>\n                <td><span>{{pds.citizenship}}</span></td>\n                <td><span>{{pds.bloodType}}</span></td>\n              </tr>\n            </table> -->\n            <mat-form-field appearance=\"standard\" style=\"float:right; width: 100%;\">\n              <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search..\" #input>\n              <mat-icon matSuffix>search</mat-icon>\n            </mat-form-field>\n\n            <table mat-table #table class=\"mat-elevation-z8\" [dataSource]=\"gridDataSource\" matSort>\n              <ng-container matColumnDef=\"personId\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Person ID </th>\n                <td mat-cell *matCellDef=\"let erow\" > {{erow.personId}} </td>\n              </ng-container>  \n\n              <ng-container matColumnDef=\"firstName\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> First Name </th>\n                <td mat-cell *matCellDef=\"let erow\" > {{erow.firstName}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"middleName\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Middle Name </th>\n                <td mat-cell *matCellDef=\"let erow\" >{{erow.middleName}}</td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"lastName\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Last Name </th>\n                <td mat-cell *matCellDef=\"let erow\">{{erow.lastName}}</td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"extName\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 100px;\"> Ext. Name </th>\n                <td mat-cell *matCellDef=\"let erow\">{{erow.extName}}</td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"sex\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header  style=\"width: 100px;\"> Sex </th>\n                <td mat-cell *matCellDef=\"let erow\"> {{erow.sex}} </td>\n              </ng-container>  \n\n              <ng-container matColumnDef=\"birthDate\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header  style=\"width: 120px;\"> Birth Date </th>\n                <td mat-cell *matCellDef=\"let erow\"> {{erow.birthDate | date:'yyyy-MM-dd'}} </td>\n              </ng-container>  \n\n              <ng-container matColumnDef=\"placeOfBirth\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header  style=\"width: 200px;\"> Place of Birth </th>\n                <td mat-cell *matCellDef=\"let erow\"> {{erow.placeOfBirth}} </td>\n              </ng-container>  \n\n                <ng-container matColumnDef=\"civil_status\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header  style=\"width: 120px;\"> Civil Status </th>\n                <td mat-cell *matCellDef=\"let erow\"> {{erow.civil_status}} </td>\n              </ng-container>  \n\n              <ng-container matColumnDef=\"citizenship\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header  style=\"width: 120px;\"> Citizenship </th>\n                <td mat-cell *matCellDef=\"let erow\"> {{erow.citizenship}} </td>\n              </ng-container>  \n\n              <ng-container matColumnDef=\"blood_type\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header  style=\"width: 120px;\"> Blood Type </th>\n                <td mat-cell *matCellDef=\"let erow\"> {{erow.blood_type}} </td>\n              </ng-container>  \n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onUserRowSelect(row.personId)\"></tr>\n            </table>  \n            <mat-paginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n          </nb-card-body>\n        </nb-card>\n      </mat-tab>\n      <mat-tab label=\"Reports\">\n        <nb-card>\n          <nb-card-header>Master List</nb-card-header>\n          <nb-card-body>\n              <div class=\"row\">\n                  <div class=\"col-sx\">\n                      <a class=\"button button1\" (click)=\"exportTableList()\">Export   <i class=\"far fa-file-excel\"></i></a>\n                  </div>\n                  <div class=\"col-lg\">\n                      <span><p>Report Details: Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n                      Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\n                      </p></span> \n                  </div>\n              </div>\n          </nb-card-body>\n        </nb-card>\n      </mat-tab>\n    </mat-tab-group>\n  </nb-card>\n    \n\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RerouterComponent } from 'app/shared/component/rerouter/rerouter.component';\nimport { AuthService } from 'app/shared/service/auth.service';\nimport { AuthGuard } from 'app/shared/service/authGuard.service';\nimport { PdsEntryComponent } from './pds-entry/pds-entry.component';\nimport { PdsListComponent } from './pds-list/pds-list.component';\n\nconst routes: Routes = [\n  {\n    data:{\n      module:'PDS-List'\n    },\n    canActivate:[AuthGuard],\n    path:'list',\n    component:PdsListComponent,\n  },\n  {\n    data:{\n      module:'*'\n    },\n    canActivate:[AuthGuard],\n    path:'reroute',\n    component:RerouterComponent\n  },\n  {\n    data:{\n      module:'PDS-Entry'\n    },\n    canActivate:[AuthGuard],\n    path:':id',\n    component:PdsEntryComponent,\n    pathMatch:'full'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PdsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PdsRoutingModule } from './pds-routing.module';\nimport { PdsListComponent } from './pds-list/pds-list.component';\nimport { PdsEntryComponent } from './pds-entry/pds-entry.component';\nimport { SharedComponentModule } from 'app/shared/component/shared-component.module';\nimport { SharedMaterialModule } from 'app/shared/shared-material/shared-material.module';\n\n\n@NgModule({\n  declarations: [PdsListComponent, PdsEntryComponent],\n  imports: [\n    CommonModule,\n    PdsRoutingModule,\n    SharedComponentModule,\n    SharedMaterialModule\n  ],\n})\nexport class PdsModule { }\n"]}