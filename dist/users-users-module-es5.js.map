{"version":3,"sources":["webpack:///src/app/pages/setting/users/user-entry/user-entry.component.ts","webpack:///src/app/pages/setting/users/user-entry/user-entry.component.html","webpack:///src/app/pages/setting/users/user-list/user-list.component.ts","webpack:///src/app/pages/setting/users/user-list/user-list.component.html","webpack:///src/app/pages/setting/users/users-routing.module.ts","webpack:///src/app/pages/setting/users/users.module.ts"],"names":["UserEntryComponent","router","frmglobaldataserve","fb","dialogserve","route","curRecordId","showLoadingProgressBar$","getShowLoadingSpinner","setLoadingProgressBar","initData","getUserLevels","snapshot","params","getUser","buildUserDetail","getRecord","subscribe","data","userDetail","lib_user_levels","UserForm","group","userId","userName","user_level","salt","hash_code","deleted_by","deleted_date","is_deleted","btnclick","valid","saveRecord","openConfirmation","afterClosed","result","patchValue","formatDate","Date","deleteRecord","updateRecord","value","response","console","log","navigateByUrl","error","JSON","stringify","then","x","openSnackBar","date","d","month","getMonth","day","getDate","year","getFullYear","length","join","eventHandler","selector","templateUrl","styleUrls","UserListComponent","dialog","baseUrl","apiUrl","displayedColumns","gridDataSource","userList","refreshTheList","urlstr","loadList","res","event","filterValue","target","filter","trim","toLowerCase","btnevent","id","fileName","now","dataToExport","map","UserId","UserName","UserLevel","exportToXlsx","mp","paginator","applyFilter","exportTableList","matPaginator","routes","path","component","pathMatch","UsersRoutingModule","forChild","imports","exports","UsersModule","declarations"],"mappings":"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","file":"users-users-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { lib_user_level } from 'app/shared/model/library.model';\nimport { UserDetails } from 'app/shared/model/user.model';\nimport { DialogService } from 'app/shared/service/dialog.service';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-user-entry',\n  templateUrl: './user-entry.component.html',\n  styleUrls: ['./user-entry.component.scss']\n})\nexport class UserEntryComponent implements OnInit {\n  public showLoadingProgressBar$: Observable<boolean>;\n  public curRecordId: number = 0;\n  userDetail: UserDetails;\n  public UserForm: FormGroup;\n\n  public lib_user_levels: lib_user_level[];\n  constructor(\n    private router:Router,\n    private frmglobaldataserve: FormGlobalDataService,\n    private fb: FormBuilder,\n    private dialogserve: DialogService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.initData();\n    this.frmglobaldataserve.setLoadingProgressBar(false);\n  }\n\n  initData(){\n    this.getUserLevels();\n    this.curRecordId = this.route.snapshot.params['id'];\n    if(this.curRecordId != 0){\n      this.getUser();\n    }else{\n      this.buildUserDetail();\n    }\n  }\n\n  getUser(){\n    this.frmglobaldataserve.getRecord(\"User/GetUser/\"+this.curRecordId)\n      .subscribe((data: UserDetails) => {\n        this.userDetail = data;\n        this.buildUserDetail(this.userDetail);\n      })\n  }\n\n  getUserLevels(){\n    ;\n    this.frmglobaldataserve.getRecord(\"Library/GetAllUserLevel\")\n      .subscribe((data: lib_user_level[]) => {\n        this.lib_user_levels = data;\n      });\n  }\n\n  buildUserDetail(userDetail?: UserDetails){\n    this.UserForm = this.fb.group({\n      userId:[userDetail? userDetail.userId:0],\n      userName:[userDetail? userDetail.userName:''],\n      user_level:[userDetail? userDetail.user_level:null],\n      salt:[userDetail? userDetail.salt:''],\n      hash_code:[userDetail? userDetail.hash_code:''],\n      deleted_by:[userDetail? userDetail.deleted_by:''],\n      deleted_date:[userDetail? userDetail.deleted_date: null],\n      is_deleted:[userDetail? userDetail.is_deleted: null]\n    });\n  }\n\n  eventHandler(btnclick:string){\n    if(btnclick == \"Save\"){\n      if(this.UserForm.valid) \n        this.saveRecord();\n    }else if(btnclick == \"Delete\"){\n      this.dialogserve.openConfirmation(\"Are you sure you want to delete this record?\")\n        .afterClosed().subscribe(result => {\n          if(result == true){\n            this.UserForm.patchValue({'is_deleted':true,'deleted_by':'Axl','deleted_date':this.formatDate(new Date())});\n            this.deleteRecord();\n          }\n        });\n    }\n  }\n\n  deleteRecord(){\n    this.frmglobaldataserve.updateRecord(this.UserForm.value,\"User/PostUser\")\n      .subscribe(\n        (response) => {\n          console.log(\"Record Deleted Successfully: \" + response);\n          this.router.navigateByUrl(\"pages/settings/users/list\");\n        },(error) => {\n          console.log(\"Error Deleting the Record: \" +JSON.stringify(this.UserForm.value));\n        }\n      )\n  }\n\n  saveRecord(){\n    this.frmglobaldataserve.updateRecord(this.UserForm.value,\"User/PostUser\")\n      .subscribe(\n          (response) => {\n            ;\n            this.router.navigateByUrl(\"pages/settings/users/\"+response).then(x => {\n              this.initData(),\n              this.frmglobaldataserve.openSnackBar();\n            },(error) =>{\n              console.log(\"Error saving the Record: \"+ JSON.stringify(this.UserForm.value));\n            })\n          }\n      );\n  }\n\n  private formatDate(date) {\n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  }\n}\n","<axl-app-crud (appcrudbtnclick)=\"eventHandler($event)\"></axl-app-crud>\n<div class=\"container\">\n    <form [formGroup]=\"UserForm\" *ngIf=\"this.UserForm\">\n        <nb-card>\n            <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n            <nb-card-header>\n              User Form\n            </nb-card-header>\n        </nb-card>\n        <nb-card>\n            <nb-card-body>\n                <div class=\"row\">\n                    <div class=\"col-sm-6\">\n                        <div class=\"form-group\">\n                            <input formControlName=\"userId\" type=\"text\" nbInput fullWidth placeholder=\"User ID\">\n                            <input formControlName=\"userName\" type=\"text\" nbInput fullWidth placeholder=\"User Name\">\n                            <nb-select formControlName=\"user_level\" fullWidth placeholder=\"User Level\" [(selected)]=\"selectedUserLevel\">\n                                <nb-option *ngFor=\"let user_lvl of lib_user_levels; let i = index\" [value]=\"user_lvl.userLevelId\">\n                                    {{user_lvl.description}}\n                                </nb-option>\n                            </nb-select>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n        </nb-card>\n    </form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { UserList } from 'app/shared/model/user.model';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { environment } from 'environments/environment';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n  public baseUrl = environment.apiUrl+\"User/\";\n  public showLoadingProgressBar$: Observable<boolean>;\n  private paginator: MatPaginator;\n  displayedColumns: string[] = ['userId','userName','user_level'];\n  @ViewChild(MatPaginator, {static:true}) set matPaginator(mp:MatPaginator)\n  {\n    this.paginator = mp;\n    this.gridDataSource.paginator = this.paginator;\n  }\n  gridDataSource = new MatTableDataSource();\n  userList:UserList[]=[];\n  constructor(\n    private router: Router,\n    private frmglobaldataserve: FormGlobalDataService,\n    public dialog:MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.refreshTheList();\n  }\n\n  refreshTheList(){\n    var urlstr = this.baseUrl+'GetAllUserList_vw/';\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.frmglobaldataserve.loadList(urlstr)\n      .subscribe((res: UserList[]) => {\n        this.userList = res;\n        this.gridDataSource.data = res;\n        this.frmglobaldataserve.setLoadingProgressBar(false);\n      },\n      () => {})\n  }\n  \n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.gridDataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  eventHandler(btnevent:string){\n    if(btnevent == \"Refresh\"){\n      this.refreshTheList();\n    }\n    else if(btnevent == \"Add\"){\n      this.router.navigateByUrl(\"pages/settings/users/\"+0);\n    }\n  }\n\n  onUserRowSelect(id: Guid):void{\n    this.router.navigateByUrl(\"pages/settings/users/\"+id);\n  }\n\n  exportTableList(){\n    var fileName = \"User_List_\"+Date.now+'.xlsx';\n    let dataToExport = this.userList\n      .map(x => ({\n        UserId: x.userId,\n        UserName: x.userName,\n        UserLevel: x.user_level\n      }));\n    this.frmglobaldataserve.exportToXlsx(dataToExport,'User_List',fileName);\n  }\n}\n","<axl-app-list  (applistbtnclick)='eventHandler($event)'></axl-app-list>\n<div class=\"container\">\n  <nb-card>\n    <nb-card-header>\n      Users\n    </nb-card-header>\n    <mat-tab-group>\n      <mat-tab label=\"List\">\n      <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n        <nb-card>\n          <nb-card-body>\n            <mat-form-field appearance=\"standard\" style=\"float:right; width: 100%;\">\n              <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search..\" #input>\n              <mat-icon matSuffix>search</mat-icon>\n            </mat-form-field>\n            <table mat-table #table class=\"mat-elevation-z8\" [dataSource]=\"gridDataSource\" matSort>\n                <ng-container matColumnDef=\"userId\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> User ID </th>\n                    <td mat-cell *matCellDef=\"let erow\" > {{erow.userId}} </td>\n                </ng-container>  \n                <ng-container matColumnDef=\"userName\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> User Name </th>\n                    <td mat-cell *matCellDef=\"let erow\" > {{erow.userName}} </td>\n                </ng-container>  \n                <ng-container matColumnDef=\"user_level\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 400px;\"> User Level </th>\n                    <td mat-cell *matCellDef=\"let erow\" > {{erow.user_level}} </td>\n                </ng-container>  \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onUserRowSelect(row.userId)\"></tr>\n            </table>    \n          </nb-card-body>\n        </nb-card>\n      </mat-tab>\n      <mat-tab label=\"Reports\">\n        <nb-card>\n          <nb-card-header>Master List</nb-card-header>\n          <nb-card-body>\n              <div class=\"row\">\n                  <div class=\"col-sx\">\n                      <a class=\"button button1\" (click)=\"exportTableList()\">Export   <i class=\"far fa-file-excel\"></i></a>\n                  </div>\n                  <div class=\"col-lg\">\n                      <span><p>Report Details: Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n                      Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\n                      </p></span> \n                  </div>\n              </div>\n          </nb-card-body>\n        </nb-card>\n      </mat-tab>\n    </mat-tab-group>\n  </nb-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserEntryComponent } from './user-entry/user-entry.component';\nimport { UserListComponent } from './user-list/user-list.component';\n\nconst routes: Routes = [\n  {\n    path:'list',\n    component:UserListComponent,\n  },\n  {\n    path:':id',\n    component:UserEntryComponent,\n    pathMatch:'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserEntryComponent } from './user-entry/user-entry.component';\nimport { SharedMaterialModule } from 'app/shared/shared-material/shared-material.module';\nimport { SharedComponentModule } from 'app/shared/component/shared-component.module';\n\n\n@NgModule({\n  declarations: [UserListComponent, UserEntryComponent],\n  imports: [\n    CommonModule,\n    UsersRoutingModule,\n    SharedComponentModule,\n    SharedMaterialModule\n  ]\n})\nexport class UsersModule { }\n"]}