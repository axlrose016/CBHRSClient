{"version":3,"sources":["webpack:///src/app/pages/forms/clearance/clearance-entry/clearance-entry.component.ts","webpack:///src/app/pages/forms/clearance/clearance-entry/clearance-entry.component.html","webpack:///src/app/pages/forms/clearance/clearance-list/clearance-list.component.ts","webpack:///src/app/pages/forms/clearance/clearance-list/clearance-list.component.html","webpack:///src/app/pages/forms/clearance/clearance-routing.module.ts","webpack:///src/app/pages/forms/clearance/clearance.module.ts"],"names":["ClearanceEntryComponent","gd","fb","frmglobaldataserve","route","router","dialogserve","curRecordId","baseUrl","apiUrl","user_level","userLevelId","currUserId","localStorage","getItem","showLoadingProgressBar$","getShowLoadingSpinner","setLoadingProgressBar","initData","snapshot","params","getClearance","buildClearanceForm","buildPDSForm","getRecord","subscribe","data","clearanceData","getPDS","personId","id","pds","clearanceDetail","ClearanceForm","group","clearanceId","raw","dateOfApplication","isTransfer","isRetirement","isResignation","isLeave","isOther","specifyOther","effectivityInclusivePeriod","immediateSupervisor","divisionHead","withPendingAdminCase","withOnGoingInvestigation","PDSForm","fullName","firstName","lastName","btnclick","valid","saveRecord","deleteRecord","updateRecord","value","response","console","log","navigateByUrl","then","x","setItem","openSnackBar","error","JSON","stringify","selectedPDS$","PersonDetails","selectedId","patchValue","openFormDialog","eventHandler","selector","templateUrl","styleUrls","ClearanceListComponent","displayedColumns","gridDataSource","clearanceList","refreshTheList","btnevent","urlstr","loadList","res","event","filterValue","target","filter","trim","toLowerCase","mp","paginator","applyFilter","matPaginator","routes","module","canActivate","path","component","pathMatch","ClearanceRoutingModule","forChild","imports","exports","ClearanceModule","declarations"],"mappings":"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","file":"clearance-clearance-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ClearanceDetail, PersonPDSDetail } from 'app/shared/model/PersonPDS.model';\nimport { DialogService } from 'app/shared/service/dialog.service';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { GlobalVariablesService } from 'app/shared/service/globalVariables.service';\nimport { environment } from 'environments/environment';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-clearance-entry',\n  templateUrl: './clearance-entry.component.html',\n  styleUrls: ['./clearance-entry.component.scss']\n})\nexport class ClearanceEntryComponent implements OnInit {\n  public ClearanceForm: FormGroup;\n  public PDSForm: FormGroup;\n  public PersonDetails: Observable<PersonPDSDetail>;\n  public showLoadingProgressBar$: Observable<boolean>;\n  public curRecordId: string = null;\n  public currUserId:string;\n  public baseUrl = environment.apiUrl+\"Clearance/\";\n  constructor(\n    private gd: GlobalVariablesService,\n    private fb: FormBuilder,\n    private frmglobaldataserve: FormGlobalDataService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private dialogserve: DialogService\n  ) { }\n\n  ngOnInit(): void {\n    if(this.gd.user_level.userLevelId == 3){\n      this.currUserId = localStorage.getItem('secI')\n    }else{\n      this.currUserId = \"00000000-0000-0000-0000-000000000000\"\n    }\n    this.showLoadingProgressBar$ = this.frmglobaldataserve.getShowLoadingSpinner;\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.initData();\n    this.frmglobaldataserve.setLoadingProgressBar(false);\n  }\n\n  initData(){\n    this.curRecordId = this.route.snapshot.params['id'];\n    if(this.curRecordId != \"0\"){\n      this.getClearance();\n    }\n    else{\n      this.buildClearanceForm();\n      this.buildPDSForm();\n    }\n  }\n\n  getClearance(){\n    this.frmglobaldataserve.getRecord(\"Clearance/GetClearance/\"+this.curRecordId)\n      .subscribe((data: ClearanceDetail) => {\n        var clearanceData = data;\n        this.buildClearanceForm(clearanceData);\n        this.getPDS(clearanceData.personId);\n      });\n  }\n\n  getPDS(id:Guid){\n    this.frmglobaldataserve.getRecord(\"Person/GetPDS/\"+id) \n      .subscribe((data: PersonPDSDetail) => {\n        var pds = data;\n        this.buildPDSForm(pds);\n      })\n  }\n \n  buildClearanceForm(clearanceDetail?: ClearanceDetail){\n    this.ClearanceForm = this.fb.group({\n      clearanceId:[clearanceDetail? clearanceDetail.clearanceId: Guid.raw],\n      dateOfApplication:[clearanceDetail? clearanceDetail.dateOfApplication: ''],\n      isTransfer:[clearanceDetail? clearanceDetail.isTransfer: false],\n      isRetirement:[clearanceDetail? clearanceDetail.isRetirement: false],\n      isResignation:[clearanceDetail? clearanceDetail.isResignation: false],\n      isLeave:[clearanceDetail? clearanceDetail.isLeave: false],\n      isOther:[clearanceDetail? clearanceDetail.isOther: false],\n      specifyOther:[clearanceDetail? clearanceDetail.specifyOther: ''],\n      effectivityInclusivePeriod:[clearanceDetail? clearanceDetail.effectivityInclusivePeriod:''],\n      immediateSupervisor:[clearanceDetail? clearanceDetail.immediateSupervisor:''],\n      divisionHead:[clearanceDetail? clearanceDetail.divisionHead:''],\n      withPendingAdminCase:[clearanceDetail? clearanceDetail.withPendingAdminCase: false],\n      withOnGoingInvestigation:[clearanceDetail? clearanceDetail.withOnGoingInvestigation: false],\n      personId:[clearanceDetail? clearanceDetail.personId: null],\n    })\n  }\n\n  buildPDSForm(pds?: PersonPDSDetail){\n    this.PDSForm = this.fb.group({\n      personId:[pds? pds.personId: Guid.raw],\n      fullName:[pds? pds.firstName + \" \" + pds.lastName :''],\n    })\n  }\n\n  eventHandler(btnclick:string){\n    if(btnclick == \"Save\"){\n      if(this.ClearanceForm.valid)\n        this.saveRecord();\n    }else if(btnclick == \"Delete\"){\n        this.deleteRecord();\n    }\n  }\n\n  saveRecord(){\n    this.frmglobaldataserve.updateRecord(this.ClearanceForm.value,\"Clearance/PostClearance\")\n      .subscribe(\n        (response) =>\n        {\n          console.log(\"Record Saved Successfully: \"+response);\n          this.router.navigateByUrl(\"pages/forms/clearance/\"+response).then(x => {\n            this.initData(),\n            localStorage.setItem('secPI',response);\n            this.frmglobaldataserve.openSnackBar();\n          },(error) => {\n            console.log(\"Error Saving the Record: \"+ JSON.stringify(this.ClearanceForm.value));\n          })\n        }\n      )\n  }\n\n  deleteRecord(){\n    this.frmglobaldataserve.updateRecord(this.ClearanceForm.value,\"Clearance/PostClearance\")\n      .subscribe(\n        (response) => \n        {\n          console.log(\"Record Deleted Successfully: \"+response);\n          this.router.navigateByUrl(\"pages/forms/clearance/list\");\n        },(error) => {\n          console.log(\"Error Deleting the Record: \"+JSON.stringify(this.ClearanceForm.value));\n        }\n      )\n  }\n\n  ngDoCheck(){\n    if(this.dialogserve.selectedPDS$ != null){\n      debugger;\n      this.PersonDetails = this.dialogserve.selectedPDS$;\n      var selectedId = <PersonPDSDetail>this.PersonDetails;\n      this.ClearanceForm.patchValue({'personId': selectedId.personId})\n      this.buildPDSForm(selectedId);\n    }\n  }\n\n  openParticipantDialog(){\n    this.dialogserve.openFormDialog('PersonProfile');\n  }\n}\n","<axl-app-crud (appcrudbtnclick)=\"eventHandler($event)\"></axl-app-crud>\n<div class=\"container\">\n<form [formGroup]=\"ClearanceForm\" *ngIf=\"this.ClearanceForm\">\n    <nb-card>\n        <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n        <nb-card-header>\n            Clearance Form\n        </nb-card-header>\n    </nb-card>\n    <nb-card>\n        <nb-card-header>\n            I. Purpose\n        </nb-card-header>\n        <nb-card-body>\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <div class=\"form-group\" [formGroup]=\"PDSForm\">\n                        Name of Employee:&nbsp;\n                        <input (click)=\"openParticipantDialog();\" formControlName=\"fullName\" type=\"text\" nbInput fullWidth placeholder=\"..\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-10\">\n                    <div class=\"form-group\">\n                        <b><u>TO: DEPARTMENT OF HEALTH - CVCHD</u></b><br>\n                        <span>I hereby apply for clearance from money, property and work-related accountabilities for:</span><br>\n                        Purpose:<br>\n                        &nbsp;&nbsp;<mat-checkbox class=\"example-margin\"  formControlName=\"isTransfer\"></mat-checkbox>&nbsp;Transfer\n                        &nbsp;&nbsp;<mat-checkbox class=\"example-margin\"  formControlName=\"isRetirement\"></mat-checkbox>&nbsp;Retirement\n                        &nbsp;&nbsp;<mat-checkbox class=\"example-margin\"  formControlName=\"isResignation\"></mat-checkbox>&nbsp;Resignation\n                        &nbsp;&nbsp;<mat-checkbox class=\"example-margin\"  formControlName=\"isLeave\"></mat-checkbox>&nbsp;Leave\n                        <br>\n                        &nbsp;&nbsp;<mat-checkbox class=\"example-margin\"  formControlName=\"isOther\"></mat-checkbox>&nbsp;Other Mode of Separation\n                        <br>Please specify:&nbsp;<input formControlName=\"specifyOther\" type=\"text\" nbInput placeholder=\"..\">\n                \n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                        Effectivity/Inclusive Period:&nbsp;\n                        <input formControlName=\"effectivityInclusivePeriod\" type=\"text\" nbInput fullWidth placeholder=\"..\">\n                   </div>\n                </div>\n                <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                        Date of Application:<nb-datepicker #dateTimePicker></nb-datepicker>\n                        <input formControlName=\"dateOfApplication\" nbInput fullWidth placeholder=\"Date of Application\" [nbDatepicker]=\"dateTimePicker\">\n                    </div>\n                </div>\n            </div>\n        </nb-card-body>\n    </nb-card>\n    <nb-card>\n        <nb-card-header>\n            II. Clearance From Work-Related Accountabilities\n        </nb-card-header>\n        <nb-card-body>\n            <div class=\"row\">\n                <span>We hereby certify that this applicant is cleared of work-related accountabilities from this Unit/Office/Dept.</span>\n                <br><br><br>\n                <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                        <input formControlName=\"immediateSupervisor\" type=\"text\" nbInput fullWidth placeholder=\"..\">\n                        Immediate Supervisor\n                    </div>\n                </div>\n                <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                        <input formControlName=\"divisionHead\" type=\"text\" nbInput fullWidth placeholder=\"..\">\n                        Division Head\n                    </div>\n                </div>\n            </div>\n        </nb-card-body>\n    </nb-card>\n    <nb-card>\n        <nb-card-header>\n            III. Certification of no pending administrative case\n        </nb-card-header>\n        <nb-card-body>\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <mat-checkbox class=\"example-margin\"  formControlName=\"withPendingAdminCase\"></mat-checkbox>&nbsp;With Pending Administrative Case<br>\n                    <mat-checkbox class=\"example-margin\"  formControlName=\"withOnGoingInvestigation\"></mat-checkbox>&nbsp;With OnGoing Investigation (no formal charge yet)<br>\n                </div>\n            </div>\n        </nb-card-body>\n    </nb-card>\n</form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { ClearanceList } from 'app/shared/model/PersonPDS.model';\nimport { FormGlobalDataService } from 'app/shared/service/formGlobalData.service';\nimport { environment } from 'environments/environment';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-clearance-list',\n  templateUrl: './clearance-list.component.html',\n  styleUrls: ['./clearance-list.component.scss']\n})\nexport class ClearanceListComponent implements OnInit {\n  public baseUrl = environment.apiUrl+\"Clearance/\";\n  public showLoadingProgressBar$: Observable<boolean>;\n  private paginator: MatPaginator;\n  displayedColumns: string[] = ['clearanceId','firstName','middleName','lastName','dateOfApplication'];\n  @ViewChild(MatPaginator, {static: true}) set matPaginator(mp: MatPaginator)\n  {\n    this.paginator = mp;\n    this.gridDataSource.paginator = this.paginator;\n  }\n  gridDataSource = new MatTableDataSource();\n  clearanceList:ClearanceList[] = [];\n  constructor(\n    private router: Router,\n    private frmglobaldataserve: FormGlobalDataService,\n  ) { }\n\n  ngOnInit(): void {\n    this.refreshTheList();\n  }\n\n  eventHandler(btnevent:string){\n    if(btnevent == \"Refresh\"){\n      this.refreshTheList();\n    }else if(btnevent == \"Add\"){\n      this.router.navigateByUrl(\"pages/forms/clearance/\"+0);\n    }\n  }\n\n  refreshTheList(){\n    var urlstr = this.baseUrl+'GetClearanceList/';\n    this.frmglobaldataserve.setLoadingProgressBar(true);\n    this.frmglobaldataserve.loadList(urlstr)\n      .subscribe((res: ClearanceList[]) => {\n        this.clearanceList = res;\n        this.gridDataSource.data = res;\n        this.frmglobaldataserve.setLoadingProgressBar(false);\n      },\n      () => {})\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.gridDataSource.filter = filterValue.trim().toLowerCase();\n  }\n  \n  onUserRowSelect(id :number):void{\n    this.router.navigateByUrl(\"pages/forms/clearance/\"+id);\n  }\n}\n","<axl-app-list  (applistbtnclick)='eventHandler($event)'></axl-app-list>\n<div class=\"container\">\n    <nb-card>\n        <nb-card-header>\n            Clearance List\n        </nb-card-header>\n        <mat-tab-group>\n            <mat-tab label=\"List\">\n                <axl-app-loader *ngIf=\"showLoadingProgressBar$ | async\"></axl-app-loader>\n                    <nb-card>\n                        <nb-card-body>\n                            <mat-form-field appearance=\"standard\" style=\"float:right;width:100%;\">\n                                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search..\" #input>\n                                <mat-icon matSuffix>search</mat-icon>\n                            </mat-form-field>\n\n                            <table mat-table #table class=\"mat-elevation-z8\" [dataSource]=\"gridDataSource\" matSout>\n                                <ng-container matColumnDef=\"clearanceId\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\">Clearance ID</th>\n                                    <td mat-cell *matCellDef=\"let erow\">{{erow.clearanceId}}</td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"firstName\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> First Name </th>\n                                    <td mat-cell *matCellDef=\"let erow\" > {{erow.firstName}} </td>\n                                  </ng-container>\n                    \n                                  <ng-container matColumnDef=\"middleName\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Middle Name </th>\n                                    <td mat-cell *matCellDef=\"let erow\" >{{erow.middleName}}</td>\n                                  </ng-container>\n                    \n                                  <ng-container matColumnDef=\"lastName\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 230px;\"> Last Name </th>\n                                    <td mat-cell *matCellDef=\"let erow\">{{erow.lastName}}</td>\n                                  </ng-container>\n\n                                  <ng-container matColumnDef=\"dateOfApplication\">\n                                      <th mat-header-cell *matHeaderCellDef mat-sort-header srtle=\"width: 230px;\"> Date Of Application </th>\n                                      <td mat-cell *matCellDef=\"let erow\">{{erow.dateOfApplication}}</td>\n                                  </ng-container>\n                                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onUserRowSelect(row.clearanceId)\"></tr>\n                            </table>\n                            <mat-paginator [pageSizeOptions]=\"[5,10,15]\" showFirstLastButton></mat-paginator>\n                        </nb-card-body>\n                    </nb-card>\n            </mat-tab>\n        </mat-tab-group>\n    </nb-card>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from 'app/shared/service/authGuard.service';\nimport { ClearanceListComponent } from './clearance-list/clearance-list.component';\nimport { ClearanceEntryComponent } from './clearance-entry/clearance-entry.component';\n\nconst routes: Routes = [\n  {\n    data:{\n      module:'Clearance-List'\n    },\n    canActivate:[AuthGuard],\n    path:'list',\n    component:ClearanceListComponent,\n  },\n  {\n    data:{\n      module:'Clearance-Entry',\n    },\n    canActivate:[AuthGuard],\n    path:':id',\n    component:ClearanceEntryComponent,\n    pathMatch:'full'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClearanceRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ClearanceRoutingModule } from './clearance-routing.module';\nimport { ClearanceListComponent } from './clearance-list/clearance-list.component';\nimport { ClearanceEntryComponent } from './clearance-entry/clearance-entry.component';\nimport { SharedComponentModule } from 'app/shared/component/shared-component.module';\nimport { SharedMaterialModule } from 'app/shared/shared-material/shared-material.module';\n\n\n@NgModule({\n  declarations: [ClearanceEntryComponent,ClearanceListComponent],\n  imports: [\n    CommonModule,\n    ClearanceRoutingModule,\n    SharedComponentModule,\n    SharedMaterialModule\n  ]\n})\nexport class ClearanceModule { }\n"]}